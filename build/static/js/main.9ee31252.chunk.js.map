{"version":3,"sources":["components/auth/auth-service.js","components/Navigation.js","components/auth/Login.js","components/auth/Signup.js","components/RoundedPicture.js","components/PersonalData.js","components/user/EmergencyContact.js","components/AccountPreferencesInfo.js","components/user/UserProfilePage.js","components/volunteer/VolunteerProfilePage.js","components/user/AssignedVolunteers.js","components/ButtonAssigned.js","components/EditPage.js","components/LandingPage.js","components/FooterComponent.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signupUser","email","password","firstName","lastName","gender","birthDate","address","phoneNumber","profilePicture","morning","afternoon","evening","night","overNight","fullDay","healthCare","houseCare","displacements","grocery","pupil","emergFirstName","emergLastName","emergPhoneNumber","emergEmail","emergAddress","service","post","then","response","data","signupVolunteer","volPhoneNumber","occupation","mentor","aboutMe","loggedin","get","logout","loginUser","loginVolunteer","assignedVolunteers","axios","create","baseURL","withCredentials","this","Navigation","logoutAccount","props","setCurrentAccount","localStorage","clear","history","push","loggedInAccount","accountType","userVolPath","_id","Navbar","fluid","collapseOnSelect","expand","bg","variant","fixed","Brand","href","src","alt","className","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Link","onClick","Component","Login","state","handleChange","event","target","name","value","setState","handleFormSubmit","preventDefault","setItem","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Button","Signup","checked","handleFileChange","file","files","console","log","uploadData","FormData","append","process","responseFromAPI","catch","err","message","Row","as","Col","custom","disabled","selected","File","label","Check","block","rows","maxLength","Div","styled","div","size","backgroundImage","RoundedPicture","avatarImg","imgSize","Table","table","Th","th","Td","td","td1","css","td2","PersonalData","account","colspan","age","EmergencyContact","emergencyContact","main","skillsAvailability","needs","schedule","notes","preferencesContainer","H5","h5","H6","h6","Hr","hr","capitalizeFirstLetter","string","charAt","toUpperCase","slice","AccountPreferencesInfo","filteredNeeds","Object","keys","specificNeeds","filter","key","i","length","filteredSchedule","scheduleKeys","schedulePreference","includes","map","need","filteredSkills","skills","filteredAvailability","availabilityKeys","availablePeriods","skill","availability","mainContainer","welcomeProfileContainer","welcomeMessage","info","rightInfo","leftInfo","Span","span","UserProfilePage","editBtn","to","VolunteerProfilePage","AssignedVolunteers","vol","btnWidth","ButtonAssigned","EditPage","landing","captions","accounts","centerFlex","LandingPage","Container","xs","md","Image","height","P","p","FooterComponent","width","App","accountObj","fetchUser","exact","path","render","getItem","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"+QA+JeA,EA5JX,aAAe,IAAD,gCAQdC,WAAa,SACTC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAO,EAAKC,QAAQC,KAAK,eAAgB,CACrC1B,QACAC,WACAC,YACAC,WACAC,SACAC,YACAC,UACAC,cACAC,iBACAC,UACAC,YACAC,UACAC,QACAC,YACAC,UACAC,aACAC,YACAC,gBACAC,UACAC,QACAC,iBACAC,gBACAC,mBACAC,aACAC,iBAECG,MAAK,SAACC,GACH,OAAOA,EAASC,SA/Dd,KAmEdC,gBAAkB,SACd9B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAyB,EACAC,EACAxB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAe,EACAC,GAEA,OAAO,EAAKT,QAAQC,KAAK,oBAAqB,CAC1C1B,QACAC,WACAC,YACAC,WACAC,SACAC,YACAC,UACAyB,iBACAC,aACAxB,iBACAC,UACAC,YACAC,UACAC,QACAC,YACAC,UACAC,aACAC,YACAC,gBACAC,UACAe,SACAC,YAECP,MAAK,SAACC,GACH,OAAOA,EAASC,SApHd,KAwHdM,SAAW,WACP,OAAO,EAAKV,QAAQW,IAAI,aACnBT,MAAK,SAACC,GACH,OAAOA,EAASC,SA3Hd,KA+HdQ,OAAS,WACL,OAAO,EAAKZ,QAAQC,KAAK,WACpBC,MAAK,SAACC,GACH,OAAOA,EAASC,SAlId,KAsIdS,UAAY,SAACtC,EAAOC,GAChB,OAAO,EAAKwB,QAAQC,KAAK,cAAe,CAAE1B,QAAOC,aAC5C0B,MAAK,SAACC,GACH,OAAOA,EAASC,SAzId,KA6IdU,eAAiB,SAACvC,EAAOC,GACrB,OAAO,EAAKwB,QAAQC,KAAK,mBAAoB,CAAE1B,QAAOC,aACjD0B,MAAK,SAACC,GACH,OAAOA,EAASC,SAhJd,KAoJdW,mBAAqB,WACjB,OAAO,EAAKf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","file":"static/js/main.9ee31252.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: 'https://adopt-senior-youngster-server.herokuapp.com/api',\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    signupUser = (\n        email,\n        password,\n        firstName,\n        lastName,\n        gender,\n        birthDate,\n        address,\n        phoneNumber,\n        profilePicture,\n        morning,\n        afternoon,\n        evening,\n        night,\n        overNight,\n        fullDay,\n        healthCare,\n        houseCare,\n        displacements,\n        grocery,\n        pupil,\n        emergFirstName,\n        emergLastName,\n        emergPhoneNumber,\n        emergEmail,\n        emergAddress\n    ) => {\n        return this.service.post('/signup/user', {\n            email,\n            password,\n            firstName,\n            lastName,\n            gender,\n            birthDate,\n            address,\n            phoneNumber,\n            profilePicture,\n            morning,\n            afternoon,\n            evening,\n            night,\n            overNight,\n            fullDay,\n            healthCare,\n            houseCare,\n            displacements,\n            grocery,\n            pupil,\n            emergFirstName,\n            emergLastName,\n            emergPhoneNumber,\n            emergEmail,\n            emergAddress\n        })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    signupVolunteer = (\n        email,\n        password,\n        firstName,\n        lastName,\n        gender,\n        birthDate,\n        address,\n        volPhoneNumber,\n        occupation,\n        profilePicture,\n        morning,\n        afternoon,\n        evening,\n        night,\n        overNight,\n        fullDay,\n        healthCare,\n        houseCare,\n        displacements,\n        grocery,\n        mentor,\n        aboutMe\n    ) => {\n        return this.service.post('/signup/volunteer', {\n            email,\n            password,\n            firstName,\n            lastName,\n            gender,\n            birthDate,\n            address,\n            volPhoneNumber,\n            occupation,\n            profilePicture,\n            morning,\n            afternoon,\n            evening,\n            night,\n            overNight,\n            fullDay,\n            healthCare,\n            houseCare,\n            displacements,\n            grocery,\n            mentor,\n            aboutMe\n        })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    logout = () => {\n        return this.service.post('/logout')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loginUser = (email, password) => {\n        return this.service.post('/login/user', { email, password })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loginVolunteer = (email, password) => {\n        return this.service.post('/login/volunteer', { email, password })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    assignedVolunteers = () => {\n        return this.service.post('/user/:id/assignedVolunteers')\n            .then((response) => {\n                return response.data;\n            })\n    }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport AuthService from './auth/auth-service';\n\nexport default class Navigation extends Component {\n\n    service = new AuthService();\n\n    logoutAccount = () => {\n        this.service.logout()\n            .then(() => {\n                this.props.setCurrentAccount(null);\n                localStorage.clear();\n                this.props.history.push('/');\n            })\n    }\n\n    assignedVolunteers = () => {\n        this.service.assignedVolunteers()\n            .then(() => {\n                this.props.setCurrentAccount();\n            })\n    }\n\n\n    render() {\n        \n        if (this.props.loggedInAccount && this.props.loggedInAccount.accountType === 'User') {\n            const userVolPath = `/user/${this.props.loggedInAccount._id}/assignedVolunteers`\n\n            // console.log('Account:', this.props.loggedInAccount);\n            return(\n                <Navbar fluid collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\"  fixed=\"top\">\n                <Navbar.Brand href=\"/\">\n                    <img src=\"../icons/Logo.png\" alt=\"\"/>\n                </Navbar.Brand>\n                <Navbar.Brand className=\"lg-6 justify-content-end\">Hello {this.props.loggedInAccount.firstName}!</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                    <Nav className=\"lg-6\">\n                    \n                    <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"/login/user\">Details</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/login/volunteer\">Edit Details</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href={userVolPath} onClick={this.assignedVolunteers}>Assigned Volunteers</Nav.Link>\n                    <Nav.Link href=\"/logout\" onClick={this.logoutAccount}>LOGOUT</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                </Navbar>\n            );\n        }\n        \n        if (this.props.loggedInAccount && this.props.loggedInAccount.accountType === 'Volunteer') {\n            return(\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">LOGO</Navbar.Brand>\n                <Navbar.Brand className=\"justify-content-end\">Hello {this.props.loggedInAccount.firstName}!</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                    <Nav className=\"lg-6\">\n                    \n                    <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"/login/user\">Details</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/login/volunteer\">Edit Details</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"#\">Assigned Users</Nav.Link>\n                    <Nav.Link href=\"/logout\" onClick={this.logoutAccount}>LOGOUT</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                </Navbar>\n            )\n        }\n        \n        if (this.props.loggedInAccount && this.props.loggedInAccount.accountType === 'Institution') {\n            return(\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">LOGO</Navbar.Brand>\n                <Navbar.Brand className=\"justify-content-end\">Hello {this.props.loggedInAccount.firstName}!</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                    <Nav className=\"lg-6\">\n                    \n                    <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"/login/user\">Details</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/login/volunteer\">Edit Details</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"#\">Users</Nav.Link>\n                    <Nav.Link href=\"#\">Volunteers</Nav.Link>\n                    <Nav.Link href=\"/logout\" onClick={this.logoutAccount}>LOGOUT</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                </Navbar>\n            )\n        }\n        \n        return(\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n            <Navbar.Brand href=\"/\">LOGO</Navbar.Brand>\n            <Navbar.Brand>Hello!</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                <Nav className=\"lg-6\">\n                <NavDropdown title=\"Login\" id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item href=\"/login/user\">User</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/login/volunteer\">Volunteer</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/login/institution\">Institution</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"Signup\" id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">User</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Volunteer</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Institution</NavDropdown.Item>\n                </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n        );\n        \n    }\n}","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Form, Button } from 'react-bootstrap';\n\nclass Login extends Component {\n    state = {\n        accountType: this.props.accountType,\n        email: '',\n        password: ''\n    }\n\n    service = new AuthService();\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n        this.setState({[name]: value});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { email, password } = this.state;\n\n        if(this.state.accountType === 'user'){\n            this.service.loginUser(email, password)\n            .then(response => {\n                //Set the whole application with the user that just loggedin\n                this.props.setCurrentAccount(response);\n                //the line of code above lifts the state up to app.js\n\n                this.setState({ email: '', password: ''})\n                localStorage.setItem(\"loggedin\", true);\n\n                //redirect the user\n                this.props.history.push(`/user/${response._id}`);\n            })\n        }\n\n        if(this.state.accountType === 'volunteer'){\n            this.service.loginVolunteer(email, password)\n            .then(response => {\n                //Set the whole application with the user that just loggedin\n                this.props.setCurrentAccount(response);\n                //the line of code above lifts the state up to app.js\n\n                this.setState({ email: '', password: ''})\n\n                localStorage.setItem(\"loggedin\", true);\n\n                //redirect the user\n                this.props.history.push(`/volunteer/${response._id}`);\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Login\n                    </Button>\n                </Form>\n\n                {/* <form onSubmit={this.handleFormSubmit}>\n                    <label>Email:</label>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                    <label>Password:</label>\n                    <input name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    \n                    <input type=\"submit\" value=\"Login\" />\n                </form>\n                <p>Don't have account? \n                    <Link to={\"/signup\"}> Signup</Link>\n                </p> */}\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass Signup extends Component {\n    state = {\n        accountType: this.props.accountType,\n        //common\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        gender: '',\n        birthDate: '',\n        address: '',\n        profilePicture: '',\n        morning: false,\n        afternoon: false,\n        evening: false,\n        night: false,\n        overNight: false,\n        fullDay: false,\n        healthCare: false,\n        houseCare: false,\n        displacements: false,\n        grocery: false,\n        //user\n        phoneNumber: '',\n        pupil: false,\n        emergFirstName: '',\n        emergLastName: '',\n        emergPhoneNumber: '',\n        emergEmail: '',\n        emergAddress: '',\n        //volunteer\n        volPhoneNumber: '',\n        occupation: '',\n        mentor: false,\n        aboutMe: '',\n    }\n\n    service = new AuthService();\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n\n        if(event.target.type === 'checkbox'){\n            this.setState({[name]: event.target.checked});\n        } else{\n            this.setState({[name]: value});\n        }\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ file: event.target.files[0]});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        console.log('accountType:', this.state.accountType);\n\n        if(this.state.accountType === 'user'){\n            const {\n                email,\n                password,\n                firstName,\n                lastName,\n                gender,\n                birthDate,\n                address,\n                phoneNumber,\n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay,\n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                pupil,\n                emergFirstName,\n                emergLastName,\n                emergPhoneNumber,\n                emergEmail,\n                emergAddress\n            } = this.state;\n\n            const uploadData = new FormData();\n            uploadData.append(\"profilePicture\", this.state.file);\n\n            axios.post(`${process.env.REACT_APP_SERVER}/api/checkIfRegistered`, email)\n                .then(responseFromAPI => {\n                    //console.log('checkIfRegistered:', responseFromAPI);\n\n                    axios.post(`${process.env.REACT_APP_SERVER}/api/upload`, uploadData)\n                        .then((response) => {\n                            console.log('image uploaded', response);\n                            \n                            this.setState({ profilePicture: response.data.profilePicture })\n                            console.log('state profilePicture:', this.state.profilePicture);\n                            const { profilePicture } = this.state;\n\n                            this.service.signupUser(\n                                email,\n                                password,\n                                firstName,\n                                lastName,\n                                gender,\n                                birthDate,\n                                address,\n                                phoneNumber,\n                                profilePicture,\n                                morning,\n                                afternoon,\n                                evening,\n                                night,\n                                overNight,\n                                fullDay,\n                                healthCare,\n                                houseCare,\n                                displacements,\n                                grocery,\n                                pupil,\n                                emergFirstName,\n                                emergLastName,\n                                emergPhoneNumber,\n                                emergEmail,\n                                emergAddress\n                            )\n                            .then(response => {\n                                //Set the whole application with the user that just loggedin\n                                this.props.setCurrentAccount(response);\n                                //the line of code above lifts the state up to app.js\n                \n                                this.setState({ \n                                    email: '',\n                                    password: '',\n                                    firstName: '',\n                                    lastName: '',\n                                    gender: '',\n                                    birthDate: '',\n                                    address: '',\n                                    phoneNumber: '',\n                                    profilePicture: '',\n                                    morning: '',\n                                    afternoon: '',\n                                    evening: '',\n                                    night: '',\n                                    overNight: '',\n                                    fullDay: '',\n                                    healthCare: '',\n                                    houseCare: '',\n                                    displacements: '',\n                                    grocery: '',\n                                    pupil: '',\n                                    emergFirstName: '',\n                                    emergLastName: '',\n                                    emergPhoneNumber: '',\n                                    emergEmail: '',\n                                    emergAddress: ''\n                                })\n                                //redirect the user\n                                this.props.history.push(`/user/${response._id}`);\n                            })\n                            .catch(err => {\n                                console.log('Error while signing up user:', err);\n                            });\n                            \n                        })\n                        .catch(err => {\n                            console.log('Error uploading image file', err);\n                        });\n                })\n                .catch(err => {\n                    console.log('Check if email is registered:', err.response.data.message);\n                });\n        }\n\n        if(this.state.accountType === 'volunteer'){\n            const {\n                email,\n                password,\n                firstName,\n                lastName,\n                gender,\n                birthDate,\n                address,\n                volPhoneNumber,\n                occupation,\n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay,\n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                mentor,\n                aboutMe\n            } = this.state;\n\n            const uploadData = new FormData();\n            uploadData.append(\"profilePicture\", this.state.file);\n\n            axios.post(`${process.env.REACT_APP_SERVER}/api/checkIfRegistered`, email)\n                .then(responseFromAPI => {\n                    //console.log('checkIfRegistered:', responseFromAPI);\n\n                    axios.post(`${process.env.REACT_APP_SERVER}/api/upload`, uploadData)\n                        .then((response) => {\n                            console.log('image uploaded', response);\n                            \n                            this.setState({ profilePicture: response.data.profilePicture })\n                            console.log('state profilePicture:', this.state.profilePicture);\n                            const { profilePicture } = this.state;\n\n                            this.service.signupVolunteer(\n                                email,\n                                password,\n                                firstName,\n                                lastName,\n                                gender,\n                                birthDate,\n                                address,\n                                volPhoneNumber,\n                                occupation,\n                                profilePicture,\n                                morning,\n                                afternoon,\n                                evening,\n                                night,\n                                overNight,\n                                fullDay,\n                                healthCare,\n                                houseCare,\n                                displacements,\n                                grocery,\n                                mentor,\n                                aboutMe\n                            )\n                            .then(response => {\n                                //Set the whole application with the user that just loggedin\n                                this.props.setCurrentAccount(response);\n                                //the line of code above lifts the state up to app.js\n                \n                                this.setState({\n                                    email: '',\n                                    password: '',\n                                    firstName: '',\n                                    lastName: '',\n                                    gender: '',\n                                    birthDate: '',\n                                    address: '',\n                                    volPhoneNumber: '',\n                                    occupation: '',\n                                    profilePicture: '',\n                                    morning: '',\n                                    afternoon: '',\n                                    evening: '',\n                                    night: '',\n                                    overNight: '',\n                                    fullDay: '',\n                                    healthCare: '',\n                                    houseCare: '',\n                                    displacements: '',\n                                    grocery: '',\n                                    mentor: '',\n                                    aboutMe: ''\n                                })\n                                //redirect the user\n                                this.props.history.push(`/volunteer/${response._id}`);\n                            })\n                            .catch(err => {\n                                console.log('Error while signing up volunteer:', err);\n                            });\n                            \n                        })\n                        .catch(err => {\n                            console.log('Error uploading image file', err);\n                        });\n                })\n                .catch(err => {\n                    console.log('Check if email is registered:', err.response.data.message);\n                });\n        }\n    }\n\n    render() {\n        if(this.state.accountType === 'user'){\n            return(\n                <div>\n                    <div className=\"form\">\n                        <Form onSubmit={this.handleFormSubmit} className=\"form-text-align\">\n                            <h5>Your information</h5>\n                            <hr />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicAddress\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicPhoneNumber\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"number\" name=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridGender\">\n                                    <Form.Label>Gender</Form.Label>\n                                    <Form.Control as=\"select\" name=\"gender\" value={this.state.value} onChange={this.handleChange} custom>\n                                    <option value=\"\" disabled selected>Select</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Other\">Other</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridDate\">\n                                    <Form.Label>Birthdate</Form.Label>\n                                    <Form.Control type=\"date\" name=\"birthDate\" value={this.state.birthDate} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Group>\n                                <Form.File id=\"profilePicture\" label=\"Profile Picture\" onChange={this.handleFileChange}/>\n                            </Form.Group>\n                            <div className=\"checkboxes\">\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridSchedule\">\n                                        <Form.Label>Schedule preferences:</Form.Label>\n                                        <Form.Check type='checkbox' id='morning' name='morning' label='Morning: 8am - 12pm' checked={this.state.morning} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='afternoon' name='afternoon' label='Afternoon: 12pm - 4pm' checked={this.state.afternoon} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='evening' name='evening' label='Evening: 4pm - 8pm' checked={this.state.evening} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='night' name='night' label='Night: 8pm - 12am' checked={this.state.night} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='overNight' name='overNight' label='Over Night: 12am - 8am' checked={this.state.overNight} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='fullDay' name='fullDay' label='24 hours' checked={this.state.fullDay} onChange={this.handleChange} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridNeeds\">\n                                        <Form.Label>Needs:</Form.Label>\n                                        <Form.Check type='checkbox' id='healthCare' name='healthCare' label='Health Care' checked={this.state.healthCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='houseCare' name='houseCare' label='House Care/Maintenance' checked={this.state.houseCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='displacements' name='displacements' label='Displacement' checked={this.state.displacements} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='grocery' name='grocery' label='Grocery Shopping' checked={this.state.grocery} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='pupil' name='pupil' label='Pupil' checked={this.state.pupil} onChange={this.handleChange} />                            </Form.Group>\n                                </Form.Row>\n                            </div>\n\n                            <h5>Emergency contact information</h5>\n                            <hr />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmergFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"emergFirstName\" value={this.state.emergFirstName} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicEmergLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"emergLastName\" value={this.state.emergLastName} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmergEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" name=\"emergEmail\" value={this.state.emergEmail} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicEmergPhoneNumber\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"number\" name=\"emergPhoneNumber\" value={this.state.emergPhoneNumber} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmergAddress\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control type=\"text\" name=\"emergAddress\" value={this.state.emergAddress} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            \n                            <div className=\"center-btn\">\n                                <Button variant=\"primary\" type=\"submit\" block>\n                                    Signup\n                                </Button>\n                            </div>\n                            \n                        </Form>\n                    </div>\n                </div>\n            )\n        }\n\n        if(this.state.accountType === 'volunteer'){\n            return(\n                <div>\n                    <div className=\"form\">\n                        <Form onSubmit={this.handleFormSubmit} className=\"form-text-align\">\n                            <h5>Your information</h5>\n                            <hr />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicAddress\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicOccupation\">\n                                    <Form.Label>Occupation</Form.Label>\n                                    <Form.Control type=\"text\" name=\"occupation\" value={this.state.occupation} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicPhoneNumber\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"number\" name=\"volPhoneNumber\" value={this.state.volPhoneNumber} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridGender\">\n                                    <Form.Label>Gender</Form.Label>\n                                    <Form.Control as=\"select\" name=\"gender\" value={this.state.value} onChange={this.handleChange} custom>\n                                    <option value=\"\" disabled selected>Select</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Other\">Other</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridDate\">\n                                    <Form.Label>Birthdate</Form.Label>\n                                    <Form.Control type=\"date\" name=\"birthDate\" value={this.state.birthDate} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Group>\n                                <Form.File id=\"profilePicture\" label=\"Profile Picture\" onChange={this.handleFileChange}/>\n                            </Form.Group>\n                            <div className=\"checkboxes\">\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridSchedule\">\n                                        <Form.Label>Availability preferences:</Form.Label>\n                                        <Form.Check type='checkbox' id='morning' name='morning' label='Morning: 8am - 12pm' checked={this.state.morning} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='afternoon' name='afternoon' label='Afternoon: 12pm - 4pm' checked={this.state.afternoon} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='evening' name='evening' label='Evening: 4pm - 8pm' checked={this.state.evening} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='night' name='night' label='Night: 8pm - 12am' checked={this.state.night} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='overNight' name='overNight' label='Over Night: 12am - 8am' checked={this.state.overNight} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='fullDay' name='fullDay' label='24 hours' checked={this.state.fullDay} onChange={this.handleChange} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridNeeds\">\n                                        <Form.Label>Skills:</Form.Label>\n                                        <Form.Check type='checkbox' id='healthCare' name='healthCare' label='Health Care' checked={this.state.healthCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='houseCare' name='houseCare' label='House Care/Maintenance' checked={this.state.houseCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='displacements' name='displacements' label='Displacement' checked={this.state.displacements} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='grocery' name='grocery' label='Grocery Shopping' checked={this.state.grocery} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='mentor' name='mentor' label='Mentor' checked={this.state.mentor} onChange={this.handleChange} />                            </Form.Group>\n                                </Form.Row>\n                            </div>\n                            <Form.Group controlId=\"formControlTextarea\">\n                                <Form.Label>About Me:</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"3\" maxLength=\"250\" name=\"aboutMe\" value={this.state.aboutMe} onChange={this.handleChange} />\n                            </Form.Group>\n                            \n                            <div className=\"center-btn\">\n                                <Button variant=\"primary\" type=\"submit\" block>\n                                    Signup\n                                </Button>\n                            </div>\n                            \n                        </Form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Signup;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n        width: ${props => props.size};\n        height: ${props => props.size};\n        background-image: url(${props => props.backgroundImage});\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center top;\n        border-radius: 50%;       \n    `;\n\nfunction RoundedPicture(props){\n\n    let avatarImg;\n\n    if(props.loggedInAccount){\n        if(!props.loggedInAccount.profilePicture){\n            if(props.loggedInAccount.gender === 'Female'){\n                avatarImg = '../images/avatarWoman.jpg';\n            } else{\n                avatarImg = '../images/avatarMan.jpg';\n            }        \n        } else {\n            avatarImg = props.loggedInAccount.profilePicture;\n        } \n    }\n\n    let imgSize = props.size;\n\n    return(\n        <div>\n            <Div backgroundImage={avatarImg} size={imgSize}></Div>\n        </div>\n    )\n}\n\nexport default RoundedPicture;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Div = styled.div`\n    background-color: #f1f1f1;\n    width: 100%;\n    padding: 20px 30px;\n    border-radius: 20px;\n`;\n\nconst Table = styled.table`\n    text-align: left;\n`;\n\nconst Th = styled.th`\n    font-size: 1.1em;\n    padding-bottom: 10px;\n`;\n\nconst Td = styled.td`\n    padding: 5px 0;\n\n    ${props => props.td1 && css`\n        width: 200px;\n        border-right: 1px solid black;\n    `}\n\n    ${props => props.td2 && css`\n        padding-left: 20px;\n    `}\n`;\n\nfunction PersonalData(props){\n   \n    const account = props.loggedInAccount;\n\n    let phoneNumber;\n\n    if(account){\n        if(account.accountType === 'User'){\n            phoneNumber = account.phoneNumber;\n        } else if(account.accountType === 'Volunteer'){\n            phoneNumber = account.volPhoneNumber;\n        }\n    }\n    \n    return(\n        <Div>\n            <Table>\n                <thead>\n                    <tr>\n                    <Th colspan=\"2\">Personal Information</Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <Td td1>\n                            Name\n                        </Td>\n                        <Td td2>\n                            {account && account.firstName} {account && account.lastName}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Age\n                        </Td>\n                        <Td td2>\n                            {account && account.age}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Email\n                        </Td>\n                        <Td td2>\n                            {account && account.email}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Phone number\n                        </Td>\n                        <Td td2>\n                            {phoneNumber}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Address\n                        </Td>\n                        <Td td2>\n                            {account && account.address}\n                        </Td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Div>\n    )\n}\n\nexport default PersonalData;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Div = styled.div`\n    background-color: #f1f1f1;\n    width: 100%;\n    padding: 20px 30px;\n    border-radius: 20px;\n`;\n\nconst Table = styled.table`\n    text-align: left;\n`;\n\nconst Th = styled.th`\n    font-size: 1.1em;\n    padding-bottom: 10px;\n`;\n\nconst Td = styled.td`\n    padding: 5px 0;\n\n    ${props => props.td1 && css`\n        width: 200px;\n        border-right: 1px solid black;\n    `}\n\n    ${props => props.td2 && css`\n        padding-left: 20px;\n    `}\n`;\n\nfunction EmergencyContact(props){\n    const account = props.loggedInAccount;\n\n    return(\n        <Div>\n            <Table>\n                <thead>\n                    <tr>\n                    <Th colspan=\"2\">Emergency Contact</Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <Td td1>\n                            Name\n                        </Td>\n                        <Td td2>\n                            {account && account.emergencyContact.firstName} {account && account.emergencyContact.lastName}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Email\n                        </Td>\n                        <Td td2>\n                            {account && account.emergencyContact.email}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Phone number\n                        </Td>\n                        <Td td2>\n                            {account && account.emergencyContact.phoneNumber}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Address\n                        </Td>\n                        <Td td2>\n                            {account && account.emergencyContact.address}\n                        </Td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Div>\n    )\n}\n\nexport default EmergencyContact;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Div = styled.div`\n    ${props => props.main && css`\n        background-color: #f1f1f1;\n        width: 100%;\n        height: 65vh;\n        padding: 20px 30px;\n        margin-bottom: 20px 0;\n        border-radius: 20px;\n        display: flex;\n        flex-direction: column;\n    `}\n\n    ${props => props.skillsAvailability && css`\n        display: flex;\n        justify-content: space-around;\n        text-align: left;\n    `}\n\n    ${props => props.needs && css`\n        width: 50%;\n        padding-right: 50px;\n    `}\n    ${props => props.schedule && css`\n        width: 50%;\n    `}\n\n    ${props => props.notes && css`\n        text-align: left;\n        width: 100%;\n    `}\n\n    ${props => props.preferencesContainer && css`\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `}\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    text-align: left;\n`\n\nconst Table = styled.table`\n    text-align: left;\n`;\n\nconst Th = styled.th`\n    font-size: 1em;\n    padding-bottom: 10px;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction AccountPreferencesInfo(props){\n   \n    const account = props.loggedInAccount;\n\n\n    if(account && account.accountType === 'User'){\n        //NEEDS\n        let needsKeys = Object.keys(account.specificNeeds);;\n        let filteredNeeds;\n\n        filteredNeeds = needsKeys.filter(function(key) {\n            return account.specificNeeds[key];\n        });\n\n        for (let i = 0; i < filteredNeeds.length; i++){\n            if(filteredNeeds[i] === \"healthCare\"){\n                filteredNeeds[i] = \"Health Care\"\n            }\n            if(filteredNeeds[i] === \"houseCare\"){\n                filteredNeeds[i] = \"House Care/Maintenance\"\n            }\n            if(filteredNeeds[i] === \"displacements\"){\n                filteredNeeds[i] = \"Displacements\"\n            }\n            if(filteredNeeds[i] === \"grocery\"){\n                filteredNeeds[i] = \"Grocery Shopping\"\n            }\n            if(filteredNeeds[i] === \"pupil\"){\n                filteredNeeds[i] = \"Pupil (for at-risk youth in need of a mentor)\"\n            }\n        }\n        \n\n        //SCHEDULE\n        let scheduleKeys = Object.keys(account.schedulePreference);;\n        let filteredSchedule;\n\n        filteredSchedule = scheduleKeys.filter(function(key) {\n            console.log(filteredSchedule);\n            return account.schedulePreference[key];\n        });\n\n        if(filteredSchedule.includes(\"fullDay\")){\n            filteredSchedule = [\"fullDay\"];\n        }\n\n        for (let i = 0; i < filteredSchedule.length; i++){\n            if(filteredSchedule[i] === \"morning\"){\n                filteredSchedule[i] = \"morning: 8am - 12pm\"\n            }\n            if(filteredSchedule[i] === \"afternoon\"){\n                filteredSchedule[i] = \"afternoon: 12pm - 4pm\"\n            }\n            if(filteredSchedule[i] === \"evening\"){\n                filteredSchedule[i] = \"evening: 4pm - 8pm\"\n            }\n            if(filteredSchedule[i] === \"night\"){\n                filteredSchedule[i] = \"night: 8pm - 12am\"\n            }\n            if(filteredSchedule[i] === \"overNight\"){\n                filteredSchedule[i] = \"over Night: 12am - 8am\"\n            }\n            if(filteredSchedule[i] === \"fullDay\"){\n                filteredSchedule[i] = \"Full Day: 24 hours\"\n            }\n\n            filteredSchedule[i] = capitalizeFirstLetter(filteredSchedule[i]);\n        }\n\n        \n        \n\n        return(\n            <Div main>\n                <H5>Your Preferences</H5>\n                <Hr />\n                <Div preferencesContainer>\n                    <Div skillsAvailability>\n                        <Div needs>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Needs</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && account.specificNeeds && filteredNeeds.map((need,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{need}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                        <Div schedule>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Schedule Preference</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && filteredSchedule.map((schedule,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{schedule}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                    </Div>\n                    <Div>\n                    {account && account.notes &&\n                            <Div notes>\n                                <H6>Notes:</H6>\n                                <span>{account.notes}</span>\n                            </Div>\n                        }\n                        \n                    </Div>\n                </Div>\n            </Div>\n        )\n\n    } else if(account && account.accountType === 'Volunteer'){\n        //SKILLS\n        let skillKeys = Object.keys(account.skills);;\n        let filteredSkills;\n\n        filteredSkills = skillKeys.filter(function(key) {\n            return account.skills[key];\n        });\n    \n        for (let i = 0; i < filteredSkills.length; i++){\n            if(filteredSkills[i] === \"healthCare\"){\n                filteredSkills[i] = \"Health Care\"\n            }\n            if(filteredSkills[i] === \"houseCare\"){\n                filteredSkills[i] = \"House Care/Maintenance\"\n            }\n            if(filteredSkills[i] === \"displacements\"){\n                filteredSkills[i] = \"Displacements\"\n            }\n            if(filteredSkills[i] === \"grocery\"){\n                filteredSkills[i] = \"Grocery Shopping\"\n            }\n            if(filteredSkills[i] === \"mentor\"){\n                filteredSkills[i] = \"Mentor (for at-risk youth in need of a mentor)\"\n            }\n        }\n        \n    \n\n        //AVAILABILITY\n        let availabilityKeys = Object.keys(account.availablePeriods);;\n        let filteredAvailability;\n\n        filteredAvailability = availabilityKeys.filter(function(key) {\n            console.log(filteredAvailability);\n            return account.availablePeriods[key];\n        });\n\n        if(filteredAvailability.includes(\"fullDay\")){\n            filteredAvailability = [\"fullDay\"];\n        }\n\n\n        for (let i = 0; i < filteredAvailability.length; i++){\n            if(filteredAvailability[i] === \"morning\"){\n                filteredAvailability[i] = \"morning: 8am - 12pm\"\n            }\n            if(filteredAvailability[i] === \"afternoon\"){\n                filteredAvailability[i] = \"afternoon: 12pm - 4pm\"\n            }\n            if(filteredAvailability[i] === \"evening\"){\n                filteredAvailability[i] = \"evening: 4pm - 8pm\"\n            }\n            if(filteredAvailability[i] === \"night\"){\n                filteredAvailability[i] = \"night: 8pm - 12am\"\n            }\n            if(filteredAvailability[i] === \"overNight\"){\n                filteredAvailability[i] = \"over Night: 12am - 8am\"\n            }\n            if(filteredAvailability[i] === \"fullDay\"){\n                filteredAvailability[i] = \"Full Day: 24 hours\"\n            }\n            filteredAvailability[i] = capitalizeFirstLetter(filteredAvailability[i]);\n        }\n        \n\n\n        return(\n            <Div main>\n                <H5>Your Preferences</H5>\n                <Hr />\n                <Div preferencesContainer>\n                    <Div skillsAvailability>\n                        <Div needs>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Skills</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && filteredSkills.map((skill,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{skill}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                        <Div schedule>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Availability</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && filteredAvailability.map((availability,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{availability}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                    </Div>\n                    <Div>\n                    {account && account.aboutMe &&\n                            <Div notes>\n                                <H5>About Me:</H5>\n                                <span>{account.aboutMe}</span>\n                            </Div>\n                        }\n                        \n                    </Div>\n                </Div>\n            </Div>\n        )\n\n\n    }else {\n        return (\n            <Div main>\n                <H5>Your Preferences</H5>\n                <Hr />\n                loading...\n            </Div>\n        )\n    }\n\n           \n}\n\nexport default AccountPreferencesInfo;","import React, { Component } from 'react';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport PersonalData from '../PersonalData';\nimport EmergencyContact from '../user/EmergencyContact';\nimport AccountPreferencesInfo from '../AccountPreferencesInfo';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { FiEdit } from \"react-icons/fi\";\n\n\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css`\n        margin: 0 80px;\n    `}\n\n    ${props => props.welcomeProfileContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n    `}\n\n    ${props => props.welcomeMessage && css`\n        display: flex;\n        align-items: center;\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n        height: 65vh;\n    `}\n\n    ${props => props.rightInfo && css`\n        width: 50%;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n    ${props => props.leftInfo && css`\n        width: 50%;\n        padding-left: 20px;\n    `}\n`;\n\nconst Span = styled.span`\n    ${'' /* color: white; */}\n    font-size: 1.5em;\n    font-weigth: 900;\n    margin-left: 20px;\n`;\n\nclass UserProfilePage extends Component {\n    render(){\n        return(\n            <Div mainContainer>\n                {/* <h1>{this.props.loggedInAccount.firstName}'s User Profile Page</h1> */}\n                <Div welcomeProfileContainer>\n                    <Div welcomeMessage>\n                        <RoundedPicture loggedInAccount={this.props.loggedInAccount} size='8em' />\n                        <Span>Welcome, {this.props.loggedInAccount && this.props.loggedInAccount.firstName}</Span>\n                    </Div>\n                    <Div editBtn>\n                        <Link to={`/user/${this.props.loggedInAccount && this.props.loggedInAccount._id}/edit`}>\n                        <Button variant=\"outline-secondary\" size=\"sm\"><FiEdit /> Edit Profile</Button>\n                        </Link>\n                    </Div>\n                </Div>\n                <Div info>\n                    <Div rightInfo>\n                        <PersonalData loggedInAccount={this.props.loggedInAccount} />\n                        <EmergencyContact loggedInAccount={this.props.loggedInAccount} />\n                    </Div>\n                    <Div leftInfo>\n                        <AccountPreferencesInfo loggedInAccount={this.props.loggedInAccount} />\n                    </Div>\n                </Div>\n                \n            </Div>\n        )\n    }\n}\n\nexport default UserProfilePage;","import React, { Component } from 'react';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport PersonalData from '../PersonalData';\nimport EmergencyContact from '../user/EmergencyContact';\nimport AccountPreferencesInfo from '../AccountPreferencesInfo';\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css`\n        margin: 0 80px;\n    `}\n\n    ${props => props.welcomeProfileContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n    `}\n\n    ${props => props.welcomeMessage && css`\n        display: flex;\n        align-items: center;\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n        height: 65vh;\n    `}\n\n    ${props => props.rightInfo && css`\n        width: 50%;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n    ${props => props.leftInfo && css`\n        width: 50%;\n        padding-left: 20px;\n    `}\n`;\n\nconst Span = styled.span`\n    ${'' /* color: white; */}\n    font-size: 1.5em;\n    font-weigth: 900;\n    margin-left: 20px;\n`;\n\nclass VolunteerProfilePage extends Component {\n    render(){\n        return(\n            <Div mainContainer>\n                {/* <h1>{this.props.loggedInAccount.firstName}'s User Profile Page</h1> */}\n                <Div welcomeProfileContainer>\n                    <Div welcomeMessage>\n                        <RoundedPicture loggedInAccount={this.props.loggedInAccount} size='8em' />\n                        <Span>Welcome, {this.props.loggedInAccount && this.props.loggedInAccount.firstName}</Span>\n                    </Div>\n                    <Div editBtn>\n                        <button>Edit Profile</button>\n                    </Div>\n                </Div>\n                <Div info>\n                    <Div rightInfo>\n                        <PersonalData loggedInAccount={this.props.loggedInAccount} />\n                    </Div>\n                    <Div leftInfo>\n                        <AccountPreferencesInfo loggedInAccount={this.props.loggedInAccount} />\n                    </Div>\n                </Div>\n                \n            </Div>\n        )\n    }\n}\n\nexport default VolunteerProfilePage;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class AssignedVolunteers extends Component {\n    // state = {\n    //     listOfVolunteers: this.props.loggedInAccount.assignedVolunteers\n    // }\n\n    \n\n    // getAllVolunteers = () => {\n    //     Get list of volunteers from the API\n    //     axios.get(`${process.env.REACT_APP_SERVER}/api/user/:id`)\n    //         .then(responseFromAPI => {\n    //             this.setState({\n    //                 listOfVolunteers: this.props.loggedInAccount.assignedVolunteers\n    //             })\n    //         });\n    // }\n    \n    // componentDidMount() {\n    //   this.getAllVolunteers();\n    // }\n\n    render(){\n        console.log('listOfVolunteers: ', this.props.loggedInAccount);\n        return(\n            <div fluid=\"md\" className=\"\">\n                <h1>{this.props.loggedInAccount && this.props.loggedInAccount.firstName}'s Assigned Volunteers Page</h1>\n                <p>\n                    Page under construction!\n                </p>\n                <div>\n                <h3>Assigned Volunteers</h3>\n                    <ul>\n                        {this.props.loggedInAccount && this.props.loggedInAccount.assignedVolunteers.map(vol => {\n                            return (\n                                <li>\n                                    <div>\n                                        <span>\n                                            <strong>\n                                                {/* {vol.firstName} {vol.lastName} */}\n                                                vol.firstName vol.lastName\n                                            </strong>\n                                        </span>\n                                        <span>\n                                            {/* {vol.profilePicture} */}\n                                            vol.profilePicture\n                                        </span>\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n/* \n<Container>\n  <Row>\n    <Col>1 of 2</Col>\n    <Col>2 of 2</Col>\n  </Row>\n  <Row>\n    <Col>1 of 3</Col>\n    <Col>2 of 3</Col>\n    <Col>3 of 3</Col>\n  </Row>\n</Container>\n */","import React from 'react';\nimport styled from 'styled-components';\nimport RoundedPicture from './RoundedPicture';\n\nconst Div = styled.div`\n    background-color: #f1f1f1;\n    width: ${props => props.btnWidth};\n    border-radius: 50px;\n    display: flex;\n    align-items: center;\n    padding: 10px;\n`\n\nconst Span = styled.span`\n    margin-left: 15px;\n`\n\nfunction ButtonAssigned (props){\n    return(\n        <Div btnWidth={props.btnWidth}>\n            <RoundedPicture loggedInAccount={props.loggedInAccount} size='3.2em' />\n            <Span>{props.loggedInAccount && props.loggedInAccount.firstName} {props.loggedInAccount && props.loggedInAccount.lastName}</Span>\n        </Div>\n    )\n}\n\nexport default ButtonAssigned;","import React, { Component } from 'react';\nimport ButtonAssigned from './ButtonAssigned';\n\nclass EditPage extends Component{\n    render(){\n        return(\n            <div>\n                {/* <ButtonAssigned loggedInAccount={this.props.loggedInAccount} btnWidth=\"13em\"/> */}\n            </div>\n        )\n    }\n}\n\nexport default EditPage;","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css `\n        margin: 0 80px;\n        overflow: auto;\n    `}\n\n    ${props => props.landing && css `\n        background-image: url('../images/carousel-user.jpg');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n        display: flex;\n        align-items: baseline;\n        heigth: 70vh;\n    `}\n    \n    ${props => props.captions && css `\n        width: 30%;\n        text-align: left;\n        margin-top: 20vh;\n        margin-left: 10vw;\n    `}\n\n    ${props => props.accounts && css `\n        margin-top: 25px;\n    `}\n\n    ${props => props.centerFlex && css `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    `}\n`\n\nexport default class LandingPage extends Component {\n    \n    render() {\n        return(\n            <Div mainContainer>\n                <Div landing>\n                    <Div captions>\n                        <h1>For a brighter tomorrow!</h1>\n                        <p><span className=\"blue\">Adopt a Senior or Youngster</span> is an online platform that connects people.</p>\n                        <p>We aim to provide help for those who depende on other's to perform day-to-day tasks.</p>\n                        <p>Caring about the future of youngsters living in precarious conditions, we facilitate theyre mentoring.</p>\n                    </Div>\n                </Div>\n                <Div accounts>\n                    <h2>Help those in need</h2>\n                    <Container>\n                        <Row>\n                            <Col xs={3} md={2}>\n                                {/* <Image src=\"holder.js/171x180\" thumbnail /> */}\n                            </Col>\n                            <Col xs={6} md={4}>\n                                <Div centerFlex>\n                                    <div className=\"userTypeImg\"><Image height={80} src=\"../icons/users-icon.png\"  /></div>\n                                    <h4>User</h4>\n                                    <Link>\n                                        <Button>\n                                            Signup\n                                        </Button>\n                                    </Link>\n                                    <p>If you need help to perform some daily or recurrent tasks.</p>\n                                    <p>Or if you are in need of guidence towards your future.</p>\n                                </Div>\n                            </Col>\n                            <Col xs={6} md={4}>\n                                <Div centerFlex>\n                                    <div className=\"userTypeImg\"><Image height={80} src=\"../icons/volunteers-icon.png\"  /></div>\n                                    <h4>Volunteer</h4>\n                                    <Link>\n                                        <Button>\n                                            Signup\n                                        </Button>\n                                    </Link>\n                                    <p>If you'd like to help people in need.</p>\n                                </Div>\n                            </Col>\n                            <Col xs={3} md={2}>\n                                {/* <Image src=\"holder.js/171x180\" thumbnail /> */}\n                            </Col>\n                        </Row>\n                    </Container>\n                    <h5>Join us today!</h5>\n                    <p><strong>For a brighter tomorrow.</strong></p>\n                    {/* <div>\n                        <img src=\"/public/icons/users-icon.png\" alt=\"user\" srcset=\"/public/icons/users-icon.png 2x 100w\"/>\n                        <Link to={'/signup/user'}>\n                            <Button>Signup</Button>\n                        </Link>\n                    </div> */}\n                </Div>\n            </Div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Navbar } from 'react-bootstrap';\nimport styled, { css } from 'styled-components';\n\nconst P = styled.p`\n    margin: 0;\n    font-size: 0.7em;\n    text-align: left;\n`;\n\nexport default class FooterComponent extends Component {\n    render() {\n        return(\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand className=\"justify-content-start lg-6\" href=\"#\">\n                        <P>Ironhack Project #3</P>\n                        <P>&copy; 2020 | Catarina &amp; Bruno</P>\n                    </Navbar.Brand>\n                    <Navbar.Brand className=\"justify-content-end lg-6\" href=\"https://www.facebook.com/\">\n                        <img\n                            alt=\"facebook.com\"\n                            src=\"../icons/facebook-icon.png\"\n                            width=\"30\"\n                            height=\"30\"\n                            className=\"d-inline-block align-top\"\n                        />\n                    </Navbar.Brand>\n                </Container>\n            </Navbar>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport AuthService from './components/auth/auth-service';\nimport UserProfilePage from './components/user/UserProfilePage';\nimport VolunteerProfilePage from './components/volunteer/VolunteerProfilePage';\nimport AssignedVolunteers from './components/user/AssignedVolunteers';\nimport EditPage from './components/EditPage';\nimport LandingPage from './components/LandingPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FooterComponent from './components/FooterComponent';\n\n\nclass App extends Component {\n  state = {\n    loggedInAccount: null\n  }\n\n  service = new AuthService();\n\n  setCurrentAccount = (accountObj) => {\n    this.setState({\n      loggedInAccount: accountObj\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n  \n  fetchUser = () => {\n    if(this.state.loggedInAccount === null) {\n      this.service.loggedin() \n        .then(response => {\n          if (response._id) {\n            this.setCurrentAccount(response);\n            localStorage.setItem(\"loggedin\", true);\n          } else {\n            localStorage.clear();\n          }\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation loggedInAccount = {this.state.loggedInAccount} setCurrentAccount={this.setCurrentAccount} />\n\n        <Switch>\n          <Route exact path='/' render={() => <LandingPage />} />\n          <Route exact path='/login/user' render={(props) => <Login setCurrentAccount={this.setCurrentAccount} accountType='user' {...props} /> } />\n          <Route exact path='/login/volunteer' render={(props) => <Login setCurrentAccount={this.setCurrentAccount} accountType='volunteer' {...props} /> } />\n          <Route exact path='/signup/user' render={(props) => <Signup setCurrentAccount={this.setCurrentAccount} accountType='user' {...props} /> } />\n          <Route exact path='/signup/volunteer' render={(props) => <Signup setCurrentAccount={this.setCurrentAccount} accountType='volunteer' {...props} /> } />\n          <Route exact path='/user/:id' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <UserProfilePage loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/volunteer/:id' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <VolunteerProfilePage loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/user/:id/assignedVolunteers' render={(props) => {\n            if(localStorage.getItem(\"loggedin\")){\n              return <AssignedVolunteers loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/user/:id/edit' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <EditPage loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/volunteer/:id/edit' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <EditPage loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/logout' render={(props) => { return <Redirect to=\"/\" /> }} />\n        </Switch>\n        <FooterComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}