{"version":3,"sources":["components/auth/auth-service.js","components/Navigation.js","components/auth/Login.js","components/auth/Signup.js","components/RoundedPicture.js","components/PersonalData.js","components/user/EmergencyContact.js","components/AccountPreferencesInfo.js","components/user/UserProfilePage.js","components/volunteer/VolunteerProfilePage.js","components/GoogleMap.js","components/user/AssignedVolunteers.js","components/volunteer/assignedUsers.js","components/EditPersonalData.js","components/EditEmergencyContact.js","components/EditAccountPreferencesInfo.js","components/EditPassword.js","components/EditProfilePictureModal.js","components/user/DeleteAssignedVol.js","components/user/AssignNewVol.js","components/user/UserEditPage.js","components/volunteer/DeleteAssignedUsers.js","components/volunteer/VolEditPage.js","components/LandingPage.js","components/FooterComponent.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signupUser","email","password","firstName","lastName","gender","birthDate","address","phoneNumber","profilePicture","morning","afternoon","evening","night","overNight","fullDay","healthCare","houseCare","displacements","grocery","pupil","emergFirstName","emergLastName","emergPhoneNumber","emergEmail","emergAddress","service","post","then","response","data","signupVolunteer","volPhoneNumber","occupation","mentor","aboutMe","loggedin","get","logout","loginUser","loginVolunteer","assignedVolunteers","axios","create","baseURL","process","withCredentials","this","Navigation","logoutAccount","props","setCurrentAccount","localStorage","clear","history","push","assignedUsers","loggedInAccount","accountType","Navbar","className","fluid","collapseOnSelect","expand","bg","variant","Brand","href","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","_id","onClick","NavDropdown","title","Item","Component","styled","h3","Login","state","loggingIn","error","handleChange","event","target","name","value","setState","handleFormSubmit","preventDefault","setTimeout","setItem","catch","err","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","pattern","required","Text","Button","disabled","Signup","signingUp","checked","handleFileChange","file","files","console","log","uploadData","FormData","append","responseFromAPI","status","Row","as","Col","custom","selected","File","label","Check","block","rows","maxLength","Div","div","size","backgroundImage","RoundedPicture","imgSize","pic","main","css","Table","table","Th","th","Td","td","td1","td2","H5","h5","H6","h6","Hr","hr","PersonalData","account","colspan","age","EmergencyContact","skillsAvailability","needs","schedule","notes","preferencesContainer","volPreferencesContainer","capitalizeFirstLetter","string","charAt","toUpperCase","slice","AccountPreferencesInfo","filteredNeeds","filteredSchedule","Object","keys","specificNeeds","filter","key","i","length","schedulePreference","includes","map","need","filteredSkills","filteredAvailability","skills","availablePeriods","skill","availability","mainContainer","welcomeProfileContainer","welcomeMessage","info","leftInfo","rightInfo","topMargin","Span","span","UserProfilePage","emergencyContact","updateStateUserProfile","params","match","getCurrentUserProfile","result","prevProps","editBtn","to","pathname","VolunteerProfilePage","updateStateVolunteerProfile","getCurrentVolunteerProfile","mapStyles","width","height","GoogleMap","places","showingInfoWindow","activeMarker","selectedPlace","googleAPIGeocodingRequest","userLocation","volLocation","userFormattedAddress","split","join","volFormattedAddress","userGeocoding","lat","results","geometry","location","lng","volGeocoding","volName","displayMarkers","store","index","onMarkerClick","marker","e","onMapClicked","google","zoom","style","initialCenter","visible","GoogleApiWrapper","apiKey","banner","titleContainer","Ul","lista","AssignedVolunteers","author","review","rate","subject","reports","selectedVolunteer","selVolReports","selectedVol","vol","componentFunctions","renderSkills","filteredAvailablePeriods","renderAvailability","rep","selectReports","j","forEach","report","auth","sub","authName","text","res","createdAt","bind","Tabs","defaultActiveKey","Tab","eventKey","per","showReports","htmlFor","hidden","cols","AssignedUsers","reviews","selectedUser","preferedPeriods","selUserReviews","averageRate","user","renderNeeds","filteredPreferedPeriods","rev","selectReviews","Needs","evaluation","selURev","n","revSub","date","showReviews","for","EditPersonalData","success","put","updateState","EditEmergencyContact","helpAndSchedule","EditAccountPreferencesInfo","successNeeds","successSchedule","handleCheckIfTrue","handleChangeFullDay","handleFormSubmitSchedule","handleFormSubmitNeeds","handleFormSubmitNotes","userNotes","successNotes","EditPassword","ModalProfilePicture","setProgress","handleProgressBar","count","interval","setInterval","clearInterval","handleCloseClick","onHide","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","ProgressBar","animated","now","volInfo","avgRate","buttonMaxNumber","DeleteAssignedVol","setValue","val","assignedVolunteer","assignedVol","volunteer","ToggleButtonGroup","ToggleButton","allVolContainer","AssignNewVol","maxHelp","allVolunteersDB","btnPicture","ButtonStyled","btnDelete","titleAssVol","deleteAndAssign","byeMsg","button","picture","EditPage","modalShow","setModalShow","availableVol","newVolMatchList","filtered","ids","item","finalMatch","finalIds","checkAssignedVolNumber","handleShowModal","handleHideModal","handleDeleteAccount","delete","updateStateEdit","allVolunteers","modal","show","backBtn","userInfo","flexColumn","userName","DeleteAssignedUsers","assignedUser","centerCheck","titleAssUsers","landing","captions","accounts","centerFlex","signupLanding","LandingPage","Container","xs","md","Image","FooterComponent","App","accountObj","fetchUser","exact","path","render","getItem","UserEditPage","VolEditPage","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mWA+JeA,EA5JX,aAAe,IAAD,gCAQdC,WAAa,SACTC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAO,EAAKC,QAAQC,KAAK,eAAgB,CACrC1B,QACAC,WACAC,YACAC,WACAC,SACAC,YACAC,UACAC,cACAC,iBACAC,UACAC,YACAC,UACAC,QACAC,YACAC,UACAC,aACAC,YACAC,gBACAC,UACAC,QACAC,iBACAC,gBACAC,mBACAC,aACAC,iBAECG,MAAK,SAACC,GACH,OAAOA,EAASC,SA/Dd,KAmEdC,gBAAkB,SACd9B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAyB,EACAC,EACAxB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAe,EACAC,GAEA,OAAO,EAAKT,QAAQC,KAAK,oBAAqB,CAC1C1B,QACAC,WACAC,YACAC,WACAC,SACAC,YACAC,UACAyB,iBACAC,aACAxB,iBACAC,UACAC,YACAC,UACAC,QACAC,YACAC,UACAC,aACAC,YACAC,gBACAC,UACAe,SACAC,YAECP,MAAK,SAACC,GACH,OAAOA,EAASC,SApHd,KAwHdM,SAAW,WACP,OAAO,EAAKV,QAAQW,IAAI,aACnBT,MAAK,SAACC,GACH,OAAOA,EAASC,SA3Hd,KA+HdQ,OAAS,WACL,OAAO,EAAKZ,QAAQC,KAAK,WACpBC,MAAK,SAACC,GACH,OAAOA,EAASC,SAlId,KAsIdS,UAAY,SAACtC,EAAOC,GAChB,OAAO,EAAKwB,QAAQC,KAAK,cAAe,CAAE1B,QAAOC,aAC5C0B,MAAK,SAACC,GACH,OAAOA,EAASC,SAzId,KA6IdU,eAAiB,SAACvC,EAAOC,GACrB,OAAO,EAAKwB,QAAQC,KAAK,mBAAoB,CAAE1B,QAAOC,aACjD0B,MAAK,SAACC,GACH,OAAOA,EAASC,SAhJd,KAoJdW,mBAAqB,WACjB,OAAO,EAAKf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","file":"static/js/main.513a22a8.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}/api`,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    signupUser = (\n        email,\n        password,\n        firstName,\n        lastName,\n        gender,\n        birthDate,\n        address,\n        phoneNumber,\n        profilePicture,\n        morning,\n        afternoon,\n        evening,\n        night,\n        overNight,\n        fullDay,\n        healthCare,\n        houseCare,\n        displacements,\n        grocery,\n        pupil,\n        emergFirstName,\n        emergLastName,\n        emergPhoneNumber,\n        emergEmail,\n        emergAddress\n    ) => {\n        return this.service.post('/signup/user', {\n            email,\n            password,\n            firstName,\n            lastName,\n            gender,\n            birthDate,\n            address,\n            phoneNumber,\n            profilePicture,\n            morning,\n            afternoon,\n            evening,\n            night,\n            overNight,\n            fullDay,\n            healthCare,\n            houseCare,\n            displacements,\n            grocery,\n            pupil,\n            emergFirstName,\n            emergLastName,\n            emergPhoneNumber,\n            emergEmail,\n            emergAddress\n        })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    signupVolunteer = (\n        email,\n        password,\n        firstName,\n        lastName,\n        gender,\n        birthDate,\n        address,\n        volPhoneNumber,\n        occupation,\n        profilePicture,\n        morning,\n        afternoon,\n        evening,\n        night,\n        overNight,\n        fullDay,\n        healthCare,\n        houseCare,\n        displacements,\n        grocery,\n        mentor,\n        aboutMe\n    ) => {\n        return this.service.post('/signup/volunteer', {\n            email,\n            password,\n            firstName,\n            lastName,\n            gender,\n            birthDate,\n            address,\n            volPhoneNumber,\n            occupation,\n            profilePicture,\n            morning,\n            afternoon,\n            evening,\n            night,\n            overNight,\n            fullDay,\n            healthCare,\n            houseCare,\n            displacements,\n            grocery,\n            mentor,\n            aboutMe\n        })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    logout = () => {\n        return this.service.post('/logout')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loginUser = (email, password) => {\n        return this.service.post('/login/user', { email, password })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loginVolunteer = (email, password) => {\n        return this.service.post('/login/volunteer', { email, password })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    assignedVolunteers = () => {\n        return this.service.post('/user/:id/assignedVolunteers')\n            .then((response) => {\n                return response.data;\n            })\n    }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport AuthService from './auth/auth-service';\n\nexport default class Navigation extends Component {\n\n    service = new AuthService();\n\n    logoutAccount = () => {\n        this.service.logout()\n            .then(() => {\n                this.props.setCurrentAccount(null);\n                localStorage.clear();\n                this.props.history.push('/');\n            })\n    }\n\n    assignedVolunteers = () => {\n        this.service.assignedVolunteers()\n            .then(() => {\n                this.props.setCurrentAccount();\n            })\n    }\n\n    assignedUsers = () => {\n        this.service.assignedUsers()\n            .then(() => {\n                this.props.setCurrentAccount();\n            })\n    }\n\n\n    render() {\n        \n        if (this.props.loggedInAccount && this.props.loggedInAccount.accountType === 'User') {\n\n            // console.log('Account:', this.props.loggedInAccount);\n            return(\n                <Navbar className=\"navBar\" fluid='true' collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" >\n                <Navbar.Brand href=\"/\">\n                    <img className=\"logo\" src=\"/../Logo.png\" alt=\"logo\"/>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                    <Nav>\n                    \n                    <Nav.Link href={`/user/${this.props.loggedInAccount._id}`}>Profile</Nav.Link>\n                    \n                    <Nav.Link href={`/user/${this.props.loggedInAccount._id}/assignedVolunteers`} onClick={this.assignedVolunteers}>Assigned Volunteers</Nav.Link>\n                    <Nav.Link href=\"/logout\" onClick={this.logoutAccount}>LOGOUT</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                </Navbar>\n            );\n        }\n        \n        if (this.props.loggedInAccount && this.props.loggedInAccount.accountType === 'Volunteer') {\n\n            return(\n                <Navbar className=\"navBar\" collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    <img className=\"logo\" src=\"/../Logo.png\" alt=\"logo\"/>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n                    <Nav className=\"foi\">\n                    \n                    <Nav.Link href={`/volunteer/${this.props.loggedInAccount._id}`}>Profile</Nav.Link>\n                    \n                    <Nav.Link href={`/volunteer/${this.props.loggedInAccount._id}/assignedUsers`} onClick={this.assignedUsers}>Assigned Users</Nav.Link>\n                    <Nav.Link href=\"/logout\" onClick={this.logoutAccount}>LOGOUT</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                </Navbar>\n            )\n        }\n        \n        // if (this.props.loggedInAccount && this.props.loggedInAccount.accountType === 'Institution') {\n        //     return(\n        //         <Navbar className=\"navBar\" collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n        //         <Navbar.Brand href=\"/\">\n        //             <img className=\"logo\" src=\"../Logo.png\" alt=\"logo\"/>\n        //         </Navbar.Brand>\n        //         <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        //         <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\n        //             <Nav className=\"foi\">\n                    \n        //             <Nav.Link href={`/user/${this.props.loggedInAccount._id}`}>Profile</Nav.Link>\n                    \n        //             <Nav.Link href=\"#\">Users</Nav.Link>\n        //             <Nav.Link href=\"#\">Volunteers</Nav.Link>\n        //             <Nav.Link href=\"/logout\" onClick={this.logoutAccount}>LOGOUT</Nav.Link>\n        //             </Nav>\n        //         </Navbar.Collapse>\n        //         </Navbar>\n        //     )\n        // }\n        \n        return(\n            <Navbar className=\"navBar\" collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\">\n                    <img className=\"logo\" src=\"/../Logo.png\" alt=\"logo\"/>\n                </Navbar.Brand>\n                <Navbar.Brand className=\"oi justify-self-end\">Hello!</Navbar.Brand>\n                <Navbar.Toggle className=\"foi\" aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse className=\"colapse\" id=\"responsive-navbar-nav\">\n                    <Nav className=\"foi\">\n                        <NavDropdown title=\"Login\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"/login/user\">User</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/login/volunteer\">Volunteer</NavDropdown.Item>\n                            {/* <NavDropdown.Item href=\"/login/institution\">Institution</NavDropdown.Item> */}\n                        </NavDropdown>\n                        <NavDropdown title=\"Signup\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"/signup/user\">User</NavDropdown.Item>\n                            <NavDropdown.Item href=\"/signup/volunteer\">Volunteer</NavDropdown.Item>\n                            {/* <NavDropdown.Item href=\"/signup/institution\">Institution</NavDropdown.Item> */}\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n        \n    }\n}","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Form, Button } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport styled from 'styled-components';\n\nconst H3 = styled.h3`\n    color: #63aeff;\n`;\n\n\nclass Login extends Component {\n    state = {\n        accountType: this.props.accountType,\n        email: '',\n        password: '',\n        loggingIn: false,\n        error: null\n    }\n\n    service = new AuthService();\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n        this.setState({[name]: value});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { email, password } = this.state;\n\n        if(this.state.accountType === 'user'){\n            this.service.loginUser(email, password)\n                .then(response => {\n                    this.setState({ \n                        loggingIn: true,\n                        error: null\n                    });\n                    setTimeout(() => {\n                        //Set the whole application with the user that just loggedin\n                        this.props.setCurrentAccount(response);\n                        //the line of code above lifts the state up to app.js\n\n                        this.setState({ email: '', password: ''})\n                        localStorage.setItem(\"loggedin\", true);\n\n                        //redirect the user\n                        this.props.history.push(`/user/${response._id}`);\n                    }, 1500)\n                })\n                .catch(err => {\n                    if(err.response.data.message) {\n                        if(err.response.data.message === 'Incorrect email.') { \n                            this.setState({\n                                error: 'email'\n                            });\n                        }\n\n                        if(err.response.data.message === 'Incorrect password.') { \n                            this.setState({\n                                error: 'password'\n                            });\n                        }\n\n                        toast.error(err.response.data.message, {\n                            position: \"top-center\",\n                            autoClose: 3000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }\n\n        if(this.state.accountType === 'volunteer'){\n            this.service.loginVolunteer(email, password)\n                .then(response => {\n                    this.setState({ \n                        loggingIn: true,\n                        error: false\n                    });\n                    setTimeout(() => {\n                        //Set the whole application with the user that just loggedin\n                        this.props.setCurrentAccount(response);\n                        //the line of code above lifts the state up to app.js\n\n                        this.setState({ email: '', password: ''})\n\n                        localStorage.setItem(\"loggedin\", true);\n\n                        //redirect the user\n                        this.props.history.push(`/volunteer/${response._id}`);\n                    }, 1500)\n                })\n                .catch(err => {\n                    if(err.response.data.message) { \n                        if(err.response.data.message === 'Incorrect email.') { \n                            this.setState({\n                                error: 'email'\n                            });\n                        }\n\n                        if(err.response.data.message === 'Incorrect password.') { \n                            this.setState({\n                                error: 'password'\n                            });\n                        }\n\n                        toast.error(err.response.data.message, {\n                            position: \"top-center\",\n                            autoClose: 3000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Form onSubmit={this.handleFormSubmit} className=\"loginForm\">\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" pattern=\".{6,}\" required title=\"6 characters minimum\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n                    {this.state.accountType === 'user' && this.state.error === 'email' &&\n                        <Form.Group>\n                            <Form.Text className=\"text-muted\">\n                                If you have a Volunteer account, please <a href='/login/volunteer'>login here.</a>\n                            </Form.Text>\n                        </Form.Group>\n                    }\n                    {this.state.accountType === 'volunteer' && this.state.error === 'email' &&\n                        <Form.Group>\n                            <Form.Text className=\"text-muted\">\n                                If you have a User account, please <a href='/login/user'>login here.</a>\n                            </Form.Text>\n                        </Form.Group>\n                    }\n                    {!this.state.loggingIn &&\n                        <Button variant=\"primary\" type=\"submit\">\n                            Login\n                        </Button>\n                    }\n                    {this.state.loggingIn &&\n                        <Button variant=\"primary\" disabled>\n                            Welcome back!\n                        </Button>\n                    }\n                </Form>\n                <ToastContainer />\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nclass Signup extends Component {\n    state = {\n        accountType: this.props.accountType,\n        //common\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        gender: '',\n        birthDate: '',\n        address: '',\n        profilePicture: '',\n        morning: false,\n        afternoon: false,\n        evening: false,\n        night: false,\n        overNight: false,\n        fullDay: false,\n        healthCare: false,\n        houseCare: false,\n        displacements: false,\n        grocery: false,\n        //user\n        phoneNumber: '',\n        pupil: false,\n        emergFirstName: '',\n        emergLastName: '',\n        emergPhoneNumber: '',\n        emergEmail: '',\n        emergAddress: '',\n        //volunteer\n        volPhoneNumber: '',\n        occupation: '',\n        mentor: false,\n        aboutMe: '',\n        signingUp: false\n    }\n\n    service = new AuthService();\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n\n        if(event.target.type === 'checkbox'){\n            this.setState({[name]: event.target.checked});\n        } else{\n            this.setState({[name]: value});\n        }\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ file: event.target.files[0]});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        console.log('accountType:', this.state.accountType);\n\n        if(this.state.accountType === 'user'){\n            const {\n                email,\n                password,\n                firstName,\n                lastName,\n                gender,\n                birthDate,\n                address,\n                phoneNumber,\n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay,\n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                pupil,\n                emergFirstName,\n                emergLastName,\n                emergPhoneNumber,\n                emergEmail,\n                emergAddress\n            } = this.state;\n\n            const uploadData = new FormData();\n            uploadData.append(\"profilePicture\", this.state.file);\n\n            axios.post(`${process.env.REACT_APP_SERVER}/api/checkIfRegistered`, {email: email})\n                .then(responseFromAPI => {\n                    // console.log('checkIfRegistered:', responseFromAPI);\n\n                    this.setState({ \n                        signingUp: true,\n                    });\n\n                    axios.post(`${process.env.REACT_APP_SERVER}/api/upload`, uploadData)\n                        .then((response) => {\n                            console.log('image uploaded', response);\n                            \n                            this.setState({ profilePicture: response.data.profilePicture })\n                            console.log('state profilePicture:', this.state.profilePicture);\n                            const { profilePicture } = this.state;\n\n                            this.service.signupUser(\n                                email,\n                                password,\n                                firstName,\n                                lastName,\n                                gender,\n                                birthDate,\n                                address,\n                                phoneNumber,\n                                profilePicture,\n                                morning,\n                                afternoon,\n                                evening,\n                                night,\n                                overNight,\n                                fullDay,\n                                healthCare,\n                                houseCare,\n                                displacements,\n                                grocery,\n                                pupil,\n                                emergFirstName,\n                                emergLastName,\n                                emergPhoneNumber,\n                                emergEmail,\n                                emergAddress\n                            )\n                            .then(response => {   \n                                this.setState({ \n                                    signingUp: true\n                                }, () => {\n                                    setTimeout(() => {\n                                        //Set the whole application with the user that just loggedin\n                                        this.props.setCurrentAccount(response);\n                                        localStorage.setItem(\"loggedin\", true);\n                                        //the line of code above lifts the state up to app.js\n\n                                        this.setState({ \n                                            email: '',\n                                            password: '',\n                                            firstName: '',\n                                            lastName: '',\n                                            gender: '',\n                                            birthDate: '',\n                                            address: '',\n                                            phoneNumber: '',\n                                            profilePicture: '',\n                                            morning: '',\n                                            afternoon: '',\n                                            evening: '',\n                                            night: '',\n                                            overNight: '',\n                                            fullDay: '',\n                                            healthCare: '',\n                                            houseCare: '',\n                                            displacements: '',\n                                            grocery: '',\n                                            pupil: '',\n                                            emergFirstName: '',\n                                            emergLastName: '',\n                                            emergPhoneNumber: '',\n                                            emergEmail: '',\n                                            emergAddress: ''\n                                        });\n    \n                                        //redirect the user\n                                        this.props.history.push(`/user/${response._id}`);\n                                    }, 1500)\n                                });\n                            })\n                            .catch(err => {\n                                // console.log('Error while signing up user:', err.response);\n                                this.setState({ \n                                    signingUp: false,\n                                });\n                                if(err.response.data.message) {\n                                    toast.error(err.response.data.message, {\n                                        position: \"top-center\",\n                                        autoClose: 5000,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                    });\n                                }\n                            });\n                            \n                        })\n                        .catch(err => {\n                            // console.log('Error uploading image file', err.response);\n                            this.setState({ \n                                signingUp: false,\n                            });\n                            if(err.response.status === 500) {\n                                toast.error('Choose a profile picture', {\n                                    position: \"top-center\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                });\n                            }\n                        });\n                })\n                .catch(err => {\n                    console.log('Check if email is registered:', err.response.data.message);\n                    this.setState({ \n                        signingUp: false,\n                    });\n                    if(err.response.data.message) {\n                        toast.error(err.response.data.message+'.', {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }\n\n        if(this.state.accountType === 'volunteer'){\n            const {\n                email,\n                password,\n                firstName,\n                lastName,\n                gender,\n                birthDate,\n                address,\n                volPhoneNumber,\n                occupation,\n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay,\n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                mentor,\n                aboutMe\n            } = this.state;\n\n            const uploadData = new FormData();\n            uploadData.append(\"profilePicture\", this.state.file);\n\n            axios.post(`${process.env.REACT_APP_SERVER}/api/checkIfRegistered`, {email: email})\n                .then(responseFromAPI => {\n                    // console.log('checkIfRegistered:', responseFromAPI);\n\n                    this.setState({ \n                        signingUp: true,\n                    });\n\n                    axios.post(`${process.env.REACT_APP_SERVER}/api/upload`, uploadData)\n                        .then((response) => {\n                            console.log('image uploaded', response);\n                            \n                            this.setState({ profilePicture: response.data.profilePicture })\n                            console.log('state profilePicture:', this.state.profilePicture);\n                            const { profilePicture } = this.state;\n\n                            this.service.signupVolunteer(\n                                email,\n                                password,\n                                firstName,\n                                lastName,\n                                gender,\n                                birthDate,\n                                address,\n                                volPhoneNumber,\n                                occupation,\n                                profilePicture,\n                                morning,\n                                afternoon,\n                                evening,\n                                night,\n                                overNight,\n                                fullDay,\n                                healthCare,\n                                houseCare,\n                                displacements,\n                                grocery,\n                                mentor,\n                                aboutMe\n                            )\n                            .then(response => {\n                                this.setState({ \n                                    signingUp: true\n                                }, () => {\n                                    setTimeout(() => {\n                                        //Set the whole application with the user that just loggedin\n                                        this.props.setCurrentAccount(response);\n                                        localStorage.setItem(\"loggedin\", true);\n                                        //the line of code above lifts the state up to app.js\n                                        \n                                        this.setState({\n                                            email: '',\n                                            password: '',\n                                            firstName: '',\n                                            lastName: '',\n                                            gender: '',\n                                            birthDate: '',\n                                            address: '',\n                                            volPhoneNumber: '',\n                                            occupation: '',\n                                            profilePicture: '',\n                                            morning: '',\n                                            afternoon: '',\n                                            evening: '',\n                                            night: '',\n                                            overNight: '',\n                                            fullDay: '',\n                                            healthCare: '',\n                                            houseCare: '',\n                                            displacements: '',\n                                            grocery: '',\n                                            mentor: '',\n                                            aboutMe: ''\n                                        });\n\n                                        //redirect the user\n                                        this.props.history.push(`/volunteer/${response._id}`);\n                                    }, 1500)\n                                });\n                \n                                \n                            })\n                            .catch(err => {\n                                // console.log('Error while signing up volunteer:', err);\n                                this.setState({ \n                                    signingUp: false,\n                                });\n                                if(err.response.data.message) {\n                                    toast.error(err.response.data.message, {\n                                        position: \"top-center\",\n                                        autoClose: 5000,\n                                        hideProgressBar: false,\n                                        closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                    });\n                                }\n                            });\n                            \n                        })\n                        .catch(err => {\n                            // console.log('Error uploading image file', err.response);\n                            this.setState({ \n                                signingUp: false,\n                            });\n                            if(err.response.status === 500) {\n                                toast.error('Choose a profile picture', {\n                                    position: \"top-center\",\n                                    autoClose: 5000,\n                                    hideProgressBar: false,\n                                    closeOnClick: true,\n                                    pauseOnHover: true,\n                                    draggable: true,\n                                    progress: undefined,\n                                });\n                            }\n                        });\n                })\n                .catch(err => {\n                    console.log('Check if email is registered:', err.response.data.message);\n                    this.setState({ \n                        signingUp: false,\n                    });\n                    if(err.response.data.message) {\n                        toast.error(err.response.data.message+'.', {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }\n    }\n\n    render() {\n        if(this.state.accountType === 'user'){\n            return(\n                <div>\n                    <div className=\"form\">\n                        <Form onSubmit={this.handleFormSubmit} className=\"signupForm\">\n                            <h5>Your information</h5>\n                            <hr />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                    <Form.Text className=\"text-muted\">\n                                        Password length must be at least 6 characters\n                                    </Form.Text>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicAddress\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicPhoneNumber\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"number\" name=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.handleChange}/>\n                                    <Form.Text className=\"text-muted\">\n                                        Phone number must have 9 digits\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridGender\">\n                                    <Form.Label>Gender</Form.Label>\n                                    <Form.Control as=\"select\" name=\"gender\" value={this.state.value} onChange={this.handleChange} custom>\n                                    <option value=\"\" disabled selected>Select</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Other\">Other</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridDate\">\n                                    <Form.Label>Birthdate</Form.Label>\n                                    <Form.Control type=\"date\" name=\"birthDate\" value={this.state.birthDate} onChange={this.handleChange}/>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Group>\n                                <Form.File id=\"profilePicture\" label=\"Profile Picture\" onChange={this.handleFileChange}/>\n                            </Form.Group>\n                            <div className=\"checkboxes\">\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridSchedule\">\n                                        <Form.Label>Schedule preferences:</Form.Label>\n                                        <Form.Check type='checkbox' id='morning' name='morning' label='Morning: 8am - 12pm' checked={this.state.morning} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='afternoon' name='afternoon' label='Afternoon: 12pm - 4pm' checked={this.state.afternoon} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='evening' name='evening' label='Evening: 4pm - 8pm' checked={this.state.evening} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='night' name='night' label='Night: 8pm - 12am' checked={this.state.night} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='overNight' name='overNight' label='Over Night: 12am - 8am' checked={this.state.overNight} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='fullDay' name='fullDay' label='24 hours' checked={this.state.fullDay} onChange={this.handleChange} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridNeeds\">\n                                        <Form.Label>Needs:</Form.Label>\n                                        <Form.Check type='checkbox' id='healthCare' name='healthCare' label='Health Care' checked={this.state.healthCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='houseCare' name='houseCare' label='House Care/Maintenance' checked={this.state.houseCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='displacements' name='displacements' label='Displacement' checked={this.state.displacements} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='grocery' name='grocery' label='Grocery Shopping' checked={this.state.grocery} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='pupil' name='pupil' label='Pupil' checked={this.state.pupil} onChange={this.handleChange} /> \n                                    </Form.Group>\n                                </Form.Row>\n                            </div>\n\n                            <h5>Emergency contact information</h5>\n                            <hr />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmergFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"emergFirstName\" value={this.state.emergFirstName} onChange={this.handleChange}/>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicEmergLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"emergLastName\" value={this.state.emergLastName} onChange={this.handleChange}/>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmergEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" name=\"emergEmail\" value={this.state.emergEmail} onChange={this.handleChange}/>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicEmergPhoneNumber\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"number\" name=\"emergPhoneNumber\" value={this.state.emergPhoneNumber} onChange={this.handleChange}/>\n                                    <Form.Text className=\"text-muted\">\n                                        Phone number must have 9 digits\n                                    </Form.Text>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmergAddress\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control type=\"text\" name=\"emergAddress\" value={this.state.emergAddress} onChange={this.handleChange}/>\n                                </Form.Group>\n                            </Form.Row>\n                            \n                            <div className=\"center-btn\">\n                                {!this.state.signingUp &&\n                                <Button variant=\"primary\" type=\"submit\" block>\n                                    Signup\n                                </Button>\n                                }\n                                {this.state.signingUp &&\n                                <Button variant=\"primary\" disabled block>\n                                    Creating account...\n                                </Button>\n                                }\n                            </div>\n                            \n                        </Form>\n                    </div>\n                    <ToastContainer />\n                </div>\n            )\n        }\n\n        if(this.state.accountType === 'volunteer'){\n            return(\n                <div>\n                    <div className=\"form\">\n                        <Form onSubmit={this.handleFormSubmit} className=\"signupForm\">\n                            <h5>Your information</h5>\n                            <hr />\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                    <Form.Text className=\"text-muted\">\n                                        Password length must be at least 6 characters\n                                    </Form.Text>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicFirstName\">\n                                    <Form.Label>First Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicLastName\">\n                                    <Form.Label>Last Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicAddress\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formBasicOccupation\">\n                                    <Form.Label>Occupation</Form.Label>\n                                    <Form.Control type=\"text\" name=\"occupation\" placeholder=\"optional\" value={this.state.occupation} onChange={this.handleChange} />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formBasicPhoneNumber\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control type=\"number\" name=\"volPhoneNumber\" value={this.state.volPhoneNumber} onChange={this.handleChange} />\n                                    <Form.Text className=\"text-muted\">\n                                        Phone number must have 9 digits\n                                    </Form.Text>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridGender\">\n                                    <Form.Label>Gender</Form.Label>\n                                    <Form.Control as=\"select\" name=\"gender\" value={this.state.value} onChange={this.handleChange} custom >\n                                    <option value=\"\" disabled selected>Select</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Other\">Other</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridDate\">\n                                    <Form.Label>Birthdate</Form.Label>\n                                    <Form.Control type=\"date\" name=\"birthDate\" value={this.state.birthDate} onChange={this.handleChange} />\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Group>\n                                <Form.File id=\"profilePicture\" label=\"Profile Picture\" onChange={this.handleFileChange}/>\n                            </Form.Group>\n                            <div className=\"checkboxes\">\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridSchedule\">\n                                        <Form.Label>Availability preferences:</Form.Label>\n                                        <Form.Check type='checkbox' id='morning' name='morning' label='Morning: 8am - 12pm' checked={this.state.morning} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='afternoon' name='afternoon' label='Afternoon: 12pm - 4pm' checked={this.state.afternoon} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='evening' name='evening' label='Evening: 4pm - 8pm' checked={this.state.evening} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='night' name='night' label='Night: 8pm - 12am' checked={this.state.night} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='overNight' name='overNight' label='Over Night: 12am - 8am' checked={this.state.overNight} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='fullDay' name='fullDay' label='24 hours' checked={this.state.fullDay} onChange={this.handleChange} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridNeeds\">\n                                        <Form.Label>Skills:</Form.Label>\n                                        <Form.Check type='checkbox' id='healthCare' name='healthCare' label='Health Care' checked={this.state.healthCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='houseCare' name='houseCare' label='House Care/Maintenance' checked={this.state.houseCare} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='displacements' name='displacements' label='Displacement' checked={this.state.displacements} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='grocery' name='grocery' label='Grocery Shopping' checked={this.state.grocery} onChange={this.handleChange} />\n                                        <Form.Check type='checkbox' id='mentor' name='mentor' label='Mentor' checked={this.state.mentor} onChange={this.handleChange} />                            </Form.Group>\n                                </Form.Row>\n                            </div>\n                            <Form.Group controlId=\"formControlTextarea\">\n                                <Form.Label>About Me:</Form.Label>\n                                <Form.Control as=\"textarea\" rows=\"3\" maxLength=\"250\" name=\"aboutMe\" placeholder=\"optional\" value={this.state.aboutMe} onChange={this.handleChange} />\n                            </Form.Group>\n                            \n                            <div className=\"center-btn\">\n                                {!this.state.signingUp &&\n                                    <Button variant=\"primary\" type=\"submit\" block>\n                                        Signup\n                                    </Button>\n                                }\n                                {this.state.signingUp &&\n                                    <Button variant=\"primary\" disabled block>\n                                        Creating account...\n                                    </Button>\n                                }\n                            </div>\n                            \n                        </Form>\n                    </div>\n                    <ToastContainer />\n                </div>\n            )\n        }\n    }\n}\n\nexport default Signup;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n        width: ${props => props.size};\n        height: ${props => props.size};\n        background-image: url(${props => props.backgroundImage});\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center top;\n        border-radius: 50%;       \n    `;\n\nfunction RoundedPicture(props){\n\n    // let avatarImg;\n\n    // if(props.loggedInAccount){\n    //     if(!props.pic){\n    //         if(props.loggedInAccount.gender === 'Female'){\n    //             avatarImg = '../images/avatarWoman.jpg';\n    //         } else{\n    //             avatarImg = '../images/avatarMan.jpg';\n    //         }        \n    //     } else {\n    //         avatarImg = props.pic;\n    //     } \n    // }\n\n    let imgSize = props.size;\n\n    return(\n        <div>\n            <Div backgroundImage={props.pic} size={imgSize}></Div>\n        </div>\n    )\n}\n\nexport default RoundedPicture;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Div = styled.div`\n    ${props => props.main && css`\n        background-color: #f1f1f1;\n        width: 100%;\n        padding: 20px 30px;\n        border-radius: 20px;\n    `}\n\n    ${props => props.aboutMe && css`\n        text-align: left;\n        width: 100%;\n        margin-top: 40px;\n    `}\n`;\n\nconst Table = styled.table`\n    text-align: left;\n`;\n\nconst Th = styled.th`\n    font-size: 1.1em;\n    padding-bottom: 10px;\n`;\n\nconst Td = styled.td`\n    padding: 5px 0;\n\n    ${props => props.td1 && css`\n        width: 200px;\n        border-right: 1px solid black;\n    `}\n\n    ${props => props.td2 && css`\n        padding-left: 20px;\n    `}\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    text-align: left;\n`\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 20px 0;\n`;\n\nfunction PersonalData(props){\n   \n    const account = props.loggedInAccount;\n\n    let phoneNumber;\n\n    if(account){\n        if(account.accountType === 'User'){\n            phoneNumber = account.phoneNumber;\n        } else if(account.accountType === 'Volunteer'){\n            phoneNumber = account.volPhoneNumber;\n        }\n    }\n    \n\n    if(account.accountType === 'User'){\n        return(\n            <Div main>\n                <Table>\n                    <thead>\n                        <tr>\n                        <Th colspan=\"2\">Personal Information</Th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <Td td1>\n                                Name\n                            </Td>\n                            <Td td2>\n                                {account.firstName} {account.lastName}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Age\n                            </Td>\n                            <Td td2>\n                                {account.age}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Email\n                            </Td>\n                            <Td td2>\n                                {account.email}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Phone number\n                            </Td>\n                            <Td td2>\n                                {phoneNumber}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Address\n                            </Td>\n                            <Td td2>\n                                {account.address}\n                            </Td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Div>\n        )\n    }else if(account.accountType === 'Volunteer'){\n        return(\n            <Div main>\n                <H5>Personal Information</H5>\n                <Hr />\n                <Table>\n                    <tbody>\n                        <tr>\n                            <Td td1>\n                                Name\n                            </Td>\n                            <Td td2>\n                                {account.firstName} {account.lastName}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Age\n                            </Td>\n                            <Td td2>\n                                {account.age}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Email\n                            </Td>\n                            <Td td2>\n                                {account.email}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Phone number\n                            </Td>\n                            <Td td2>\n                                {phoneNumber}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Occupation\n                            </Td>\n                            <Td td2>\n                                {account.occupation}\n                            </Td>\n                        </tr>\n                        <tr>\n                            <Td td1>\n                                Address\n                            </Td>\n                            <Td td2>\n                                {account.address}\n                            </Td>\n                        </tr>\n                    </tbody>\n                </Table>\n                {account && account.aboutMe &&\n                    <Div aboutMe>\n                        <H6>About Me:</H6>\n                        <span>{account.aboutMe}</span>\n                    </Div>\n                }\n            </Div>\n        )\n    }else{\n        return (\n            <Div main>\n                <Table>\n                    <thead>\n                        <tr>\n                        <Th colspan=\"2\">Personal Information</Th>\n                        </tr>\n                    </thead>\n                </Table>\n                loading...\n            </Div>\n        )\n    }\n}\n\nexport default PersonalData;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Div = styled.div`\n    background-color: #f1f1f1;\n    width: 100%;\n    padding: 20px 30px;\n    border-radius: 20px;\n`;\n\nconst Table = styled.table`\n    text-align: left;\n`;\n\nconst Th = styled.th`\n    font-size: 1.1em;\n    padding-bottom: 10px;\n`;\n\nconst Td = styled.td`\n    padding: 5px 0;\n\n    ${props => props.td1 && css`\n        width: 200px;\n        border-right: 1px solid black;\n    `}\n\n    ${props => props.td2 && css`\n        padding-left: 20px;\n    `}\n`;\n\nfunction EmergencyContact(props){\n    const account = props.loggedInAccount;\n\n    return(\n        <Div>\n            <Table>\n                <thead>\n                    <tr>\n                    <Th colspan=\"2\">Emergency Contact</Th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <Td td1>\n                            Name\n                        </Td>\n                        <Td td2>\n                            {account.firstName} {account.lastName}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Email\n                        </Td>\n                        <Td td2>\n                            {account.email}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Phone number\n                        </Td>\n                        <Td td2>\n                            {account.phoneNumber}\n                        </Td>\n                    </tr>\n                    <tr>\n                        <Td td1>\n                            Address\n                        </Td>\n                        <Td td2>\n                            {account.address}\n                        </Td>\n                    </tr>\n                </tbody>\n            </Table>\n        </Div>\n    )\n}\n\nexport default EmergencyContact;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\nconst Div = styled.div`\n    ${props => props.main && css`\n        background-color: #f1f1f1;\n        width: 100%;\n        height: 65vh;\n        padding: 20px 30px;\n        margin-bottom: 20px 0;\n        border-radius: 20px;\n        display: flex;\n        flex-direction: column;\n    `}\n\n    ${props => props.skillsAvailability && css`\n        display: flex;\n        justify-content: space-around;\n        text-align: left;\n    `}\n\n    ${props => props.needs && css`\n        width: 50%;\n        padding-right: 50px;\n    `}\n    ${props => props.schedule && css`\n        width: 50%;\n    `}\n\n    ${props => props.notes && css`\n        text-align: left;\n        width: 100%;\n        margin-top: 60px;\n    `}\n\n    ${props => props.preferencesContainer && css`\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n    `}\n\n    ${props => props.volPreferencesContainer && css`\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n    `}\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    text-align: left;\n`\n\nconst Table = styled.table`\n    text-align: left;\n`;\n\nconst Th = styled.th`\n    font-size: 1em;\n    padding-bottom: 10px;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction AccountPreferencesInfo(props){\n   \n    const account = props.loggedInAccount;\n\n\n    if(account && account.accountType === 'User'){\n        //NEEDS\n        let needsKeys = Object.keys(account.specificNeeds);\n        let filteredNeeds;\n\n        filteredNeeds = needsKeys.filter(function(key) {\n            return account.specificNeeds[key];\n        });\n\n        for (let i = 0; i < filteredNeeds.length; i++){\n            if(filteredNeeds[i] === \"healthCare\"){\n                filteredNeeds[i] = \"Health Care\"\n            }\n            if(filteredNeeds[i] === \"houseCare\"){\n                filteredNeeds[i] = \"House Care/Maintenance\"\n            }\n            if(filteredNeeds[i] === \"displacements\"){\n                filteredNeeds[i] = \"Displacements\"\n            }\n            if(filteredNeeds[i] === \"grocery\"){\n                filteredNeeds[i] = \"Grocery Shopping\"\n            }\n            if(filteredNeeds[i] === \"pupil\"){\n                filteredNeeds[i] = \"Pupil (for at-risk youth in need of a mentor)\"\n            }\n        }\n        \n\n        //SCHEDULE\n        let scheduleKeys = Object.keys(account.schedulePreference);\n        let filteredSchedule;\n\n        filteredSchedule = scheduleKeys.filter(function(key) {\n            // console.log(filteredSchedule);\n            return account.schedulePreference[key];\n        });\n\n        if(filteredSchedule.includes(\"fullDay\")){\n            filteredSchedule = [\"fullDay\"];\n        }\n\n        for (let i = 0; i < filteredSchedule.length; i++){\n            if(filteredSchedule[i] === \"morning\"){\n                filteredSchedule[i] = \"morning: 8am - 12pm\"\n            }\n            if(filteredSchedule[i] === \"afternoon\"){\n                filteredSchedule[i] = \"afternoon: 12pm - 4pm\"\n            }\n            if(filteredSchedule[i] === \"evening\"){\n                filteredSchedule[i] = \"evening: 4pm - 8pm\"\n            }\n            if(filteredSchedule[i] === \"night\"){\n                filteredSchedule[i] = \"night: 8pm - 12am\"\n            }\n            if(filteredSchedule[i] === \"overNight\"){\n                filteredSchedule[i] = \"over Night: 12am - 8am\"\n            }\n            if(filteredSchedule[i] === \"fullDay\"){\n                filteredSchedule[i] = \"Full Day: 24 hours\"\n            }\n\n            filteredSchedule[i] = capitalizeFirstLetter(filteredSchedule[i]);\n        }\n\n        \n        \n\n        return(\n            <Div main>\n                <H5>Your Preferences</H5>\n                <Hr />\n                <Div preferencesContainer>\n                    <Div skillsAvailability>\n                        <Div needs>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Needs</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && account.specificNeeds && filteredNeeds.map((need,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{need}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                        <Div schedule>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Schedule Preference</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && filteredSchedule.map((schedule,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{schedule}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                    </Div>\n                    <Div>\n                    {account && account.notes &&\n                            <Div notes>\n                                <H6>Notes:</H6>\n                                <span>{account.notes}</span>\n                            </Div>\n                        }\n                        \n                    </Div>\n                </Div>\n            </Div>\n        )\n\n    } else if(account && account.accountType === 'Volunteer'){\n        //SKILLS\n        let skillKeys = Object.keys(account.skills);;\n        let filteredSkills;\n\n        filteredSkills = skillKeys.filter(function(key) {\n            return account.skills[key];\n        });\n    \n        for (let i = 0; i < filteredSkills.length; i++){\n            if(filteredSkills[i] === \"healthCare\"){\n                filteredSkills[i] = \"Health Care\"\n            }\n            if(filteredSkills[i] === \"houseCare\"){\n                filteredSkills[i] = \"House Care/Maintenance\"\n            }\n            if(filteredSkills[i] === \"displacements\"){\n                filteredSkills[i] = \"Displacements\"\n            }\n            if(filteredSkills[i] === \"grocery\"){\n                filteredSkills[i] = \"Grocery Shopping\"\n            }\n            if(filteredSkills[i] === \"mentor\"){\n                filteredSkills[i] = \"Mentor (for at-risk youth in need of a mentor)\"\n            }\n        }\n        \n    \n\n        //AVAILABILITY\n        let availabilityKeys = Object.keys(account.availablePeriods);;\n        let filteredAvailability;\n\n        filteredAvailability = availabilityKeys.filter(function(key) {\n            // console.log(filteredAvailability);\n            return account.availablePeriods[key];\n        });\n\n        if(filteredAvailability.includes(\"fullDay\")){\n            filteredAvailability = [\"fullDay\"];\n        }\n\n\n        for (let i = 0; i < filteredAvailability.length; i++){\n            if(filteredAvailability[i] === \"morning\"){\n                filteredAvailability[i] = \"morning: 8am - 12pm\"\n            }\n            if(filteredAvailability[i] === \"afternoon\"){\n                filteredAvailability[i] = \"afternoon: 12pm - 4pm\"\n            }\n            if(filteredAvailability[i] === \"evening\"){\n                filteredAvailability[i] = \"evening: 4pm - 8pm\"\n            }\n            if(filteredAvailability[i] === \"night\"){\n                filteredAvailability[i] = \"night: 8pm - 12am\"\n            }\n            if(filteredAvailability[i] === \"overNight\"){\n                filteredAvailability[i] = \"over Night: 12am - 8am\"\n            }\n            if(filteredAvailability[i] === \"fullDay\"){\n                filteredAvailability[i] = \"Full Day: 24 hours\"\n            }\n            filteredAvailability[i] = capitalizeFirstLetter(filteredAvailability[i]);\n        }\n        \n\n\n        return(\n            <Div main>\n                <H5>Your Preferences</H5>\n                <Hr />\n                <Div volPreferencesContainer>\n                    <Div skillsAvailability>\n                        <Div needs>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Skills</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && filteredSkills.map((skill,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{skill}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                        <Div schedule>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                    <Th>Availability</Th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {account && filteredAvailability.map((availability,i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{availability}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </Table>\n                        </Div>\n                    </Div>\n                </Div>\n            </Div>\n        )\n\n\n    }else {\n        return (\n            <Div main>\n                <H5>Your Preferences</H5>\n                <Hr />\n                loading...\n            </Div>\n        )\n    }\n\n           \n}\n\nexport default AccountPreferencesInfo;","import React, { Component } from 'react';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport PersonalData from '../PersonalData';\nimport EmergencyContact from '../user/EmergencyContact';\nimport AccountPreferencesInfo from '../AccountPreferencesInfo';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { FiEdit } from \"react-icons/fi\";\nimport axios from 'axios';\n\n\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css`\n        margin: auto 80px;\n        height: 100%;\n    `}\n\n    ${props => props.welcomeProfileContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n    `}\n\n    ${props => props.welcomeMessage && css`\n        display: flex;\n        align-items: center;\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n    `}\n\n    ${props => props.leftInfo && css`\n        width: 50%;\n        height: auto;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n    ${props => props.rightInfo && css`\n        width: 50%;\n        height: auto;\n        padding-left: 20px;\n        background-color: #f1f1f1;\n        border-radius: 20px;\n    `}\n\n    ${props => props.topMargin && css`\n        margin-top: 20px;\n    `}\n`;\n\nconst Span = styled.span`\n    ${'' /* color: white; */}\n    font-size: 1.5em;\n    font-weigth: 900;\n    margin-left: 20px;\n`;\n\nclass UserProfilePage extends Component {\n    state = {\n        loggedInAccount: [],\n        emergencyContact: [],\n        schedulePreference: [],\n        specificNeeds: []\n    };\n\n  \n    componentDidMount(){\n        const { params } = this.props.match;\n      \n            this.props.getCurrentUserProfile(params.id).then(result => {\n                this.setState({ \n                    loggedInAccount: result.account,\n                    emergencyContact: result.account.emergencyContact,\n                    schedulePreference: result.account.schedulePreference,\n                    specificNeeds: result.account.specificNeeds\n                });\n               });\n    }\n\n    componentDidUpdate(prevProps) {\n        // compare this.props and prevProps\n        if (this.props !== prevProps) {\n            this.updateStateUserProfile();\n        }\n    }\n\n    updateStateUserProfile = () => {\n        const { params } = this.props.match;\n        \n\n        axios.get(`${process.env.REACT_APP_SERVER}/api/user/${params.id}`)\n            .then(responseFromAPI => {\n                // console.log('responseFromAPI.data', responseFromAPI.data);\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({ \n                    loggedInAccount: loggedInAccount,\n                    emergencyContact: loggedInAccount.emergencyContact,\n                    schedulePreference: loggedInAccount.schedulePreference,\n                    specificNeeds: loggedInAccount.specificNeeds\n                });\n            })\n    }\n\n    render(){\n        return(\n            <Div mainContainer>\n                {/* <h1>{this.props.loggedInAccount.firstName}'s User Profile Page</h1> */}\n                <Div welcomeProfileContainer>\n                    <Div welcomeMessage>\n                        <RoundedPicture\n                            pic={this.state.loggedInAccount.profilePicture}\n                            size='8em' \n                        />\n                        <Span>Hello, {this.state.loggedInAccount.firstName}</Span>\n                    </Div>\n                    <Div editBtn>\n                        <Link to={{\n                            pathname: `/user/${this.state.loggedInAccount._id}/edit`,\n                            state: {\n                                accountType: this.state.loggedInAccount.accountType,\n                                firstName: this.state.loggedInAccount.firstName,\n                                lastName: this.state.loggedInAccount.lastName,\n                                email: this.state.loggedInAccount.email,\n                                address: this.state.loggedInAccount.address,\n                                phoneNumber: this.state.loggedInAccount.phoneNumber,\n                                emergFirstName: this.state.emergencyContact.firstName,\n                                emergLastName: this.state.emergencyContact.lastName,\n                                emergEmail: this.state.emergencyContact.email,\n                                emergAddress: this.state.emergencyContact.address,\n                                emergPhoneNumber: this.state.emergencyContact.phoneNumber,\n                                morning: this.state.schedulePreference.morning,\n                                afternoon: this.state.schedulePreference.afternoon,\n                                evening: this.state.schedulePreference.evening,\n                                night: this.state.schedulePreference.night,\n                                overNight: this.state.schedulePreference.overNight,\n                                fullDay: this.state.schedulePreference.fullDay,\n                                healthCare: this.state.specificNeeds.healthCare,\n                                houseCare: this.state.specificNeeds.houseCare,\n                                displacements: this.state.specificNeeds.displacements,\n                                grocery: this.state.specificNeeds.grocery,\n                                pupil: this.state.specificNeeds.pupil,\n                                notes: this.state.loggedInAccount.notes,\n                                profilePicture: this.state.loggedInAccount.profilePicture,\n                                // updateState: this.updateStateUserProfile\n                            }\n                        }}>\n                        <Button variant=\"outline-secondary\" size=\"sm\"><FiEdit /> Edit Profile</Button>\n                        </Link>\n                    </Div>\n                </Div>\n                <Div info>\n                    <Div leftInfo>\n                        <PersonalData loggedInAccount={this.state.loggedInAccount} />\n                        <Div topMargin>\n                            <EmergencyContact loggedInAccount={this.state.emergencyContact} />\n                        </Div>\n                    </Div>\n                    <Div rightInfo>\n                        <AccountPreferencesInfo loggedInAccount={this.state.loggedInAccount} />\n                    </Div>\n                </Div>\n            </Div>\n        )\n    }\n}\n\nexport default UserProfilePage;","import React, { Component } from 'react';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport PersonalData from '../PersonalData';\nimport AccountPreferencesInfo from '../AccountPreferencesInfo';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { FiEdit } from \"react-icons/fi\";\nimport axios from 'axios';\n\n\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css`\n        margin: auto 80px;\n        ${'' /* height: 100%; */}\n    `}\n\n    ${props => props.welcomeProfileContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n    `}\n\n    ${props => props.welcomeMessage && css`\n        display: flex;\n        align-items: center;\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n        ${'' /* height: 65vh; */}\n    `}\n\n    ${props => props.leftInfo && css`\n        width: 50%;\n        padding-right: 20px;\n        background-color: #f1f1f1;\n        border-radius: 20px;\n    `}\n    ${props => props.rightInfo && css`\n        width: 50%;\n        padding-left: 20px;\n    `}\n`;\n\nconst Span = styled.span`\n    ${'' /* color: white; */}\n    font-size: 1.5em;\n    font-weigth: 900;\n    margin-left: 20px;\n`;\n\nclass VolunteerProfilePage extends Component {\n    state = {\n        loggedInAccount: [],\n        availablePeriods: [],\n        skills: []\n    };\n\n  \n    componentDidMount(){\n        const { params } = this.props.match;\n      \n            this.props.getCurrentVolunteerProfile(params.id).then(result => {\n                console.log('result', result);\n                this.setState({ \n                    loggedInAccount: result.account,\n                    availablePeriods: result.account.availablePeriods,\n                    skills: result.account.skills\n                });\n               });\n    }\n\n    componentDidUpdate(prevProps) {\n        // compare this.props and prevProps\n        if (this.props !== prevProps) {\n            this.updateStateVolunteerProfile();\n        }\n    }\n\n    updateStateVolunteerProfile = () => {\n        const { params } = this.props.match;\n        \n\n        axios.get(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}`)\n            .then(responseFromAPI => {\n                // console.log('responseFromAPI.data', responseFromAPI.data);\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({ \n                    loggedInAccount: loggedInAccount,\n                    availablePeriods: loggedInAccount.availablePeriods,\n                    skills: loggedInAccount.skills\n                });\n            })\n    }\n\n    render(){\n        return(\n            <Div mainContainer>\n                {/* <h1>{this.props.loggedInAccount.firstName}'s User Profile Page</h1> */}\n                <Div welcomeProfileContainer>\n                    <Div welcomeMessage>\n                        <RoundedPicture\n                            pic={this.state.loggedInAccount.profilePicture}\n                            size='8em' \n                        />\n                        <Span>Hello, {this.state.loggedInAccount.firstName}</Span>\n                    </Div>\n                    <Div editBtn>\n                        <Link to={{\n                            pathname: `/volunteer/${this.state.loggedInAccount._id}/edit`,\n                            state: {\n                                accountType: this.state.loggedInAccount.accountType,\n                                firstName: this.state.loggedInAccount.firstName,\n                                lastName: this.state.loggedInAccount.lastName,\n                                email: this.state.loggedInAccount.email,\n                                address: this.state.loggedInAccount.address,\n                                volPhoneNumber: this.state.loggedInAccount.volPhoneNumber,\n                                occupation: this.state.loggedInAccount.occupation,\n                                morning: this.state.availablePeriods.morning,\n                                afternoon: this.state.availablePeriods.afternoon,\n                                evening: this.state.availablePeriods.evening,\n                                night: this.state.availablePeriods.night,\n                                overNight: this.state.availablePeriods.overNight,\n                                fullDay: this.state.availablePeriods.fullDay,\n                                healthCare: this.state.skills.healthCare,\n                                houseCare: this.state.skills.houseCare,\n                                displacements: this.state.skills.displacements,\n                                grocery: this.state.skills.grocery,\n                                mentor: this.state.skills.mentor,\n                                aboutMe: this.state.loggedInAccount.aboutMe,\n                                profilePicture: this.state.loggedInAccount.profilePicture,\n                            }\n                        }}>\n                        <Button variant=\"outline-secondary\" size=\"sm\"><FiEdit /> Edit Profile</Button>\n                        </Link>\n                    </Div>\n                </Div>\n                <Div info>\n                    <Div leftInfo>\n                        <PersonalData loggedInAccount={this.state.loggedInAccount} />\n                    </Div>\n                    <Div rightInfo>\n                        <AccountPreferencesInfo loggedInAccount={this.state.loggedInAccount} />\n                    </Div>\n                </Div>\n                \n            </Div>\n        )\n    }\n}\n\nexport default VolunteerProfilePage;","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport axios from 'axios';\n\nconst mapStyles = {\n  width: '100%',\n  height: '450px',\n};\n\nexport class GoogleMap extends Component {\n    state = {\n        places: [],\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n    }\n\n    componentDidMount(){\n        this.googleAPIGeocodingRequest();\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props !== prevProps) {\n            this.googleAPIGeocodingRequest();\n        }\n        // if(this.state.)\n    }\n\n\n    googleAPIGeocodingRequest = () => {\n        if(this.props.userLocation && this.props.volLocation){\n        const userAddress = this.props.userLocation;\n        const userFormattedAddress = userAddress.split(' ').join('+');\n        const volAddress = this.props.volLocation;\n        const volFormattedAddress = volAddress.split(' ').join('+');\n        // console.log('address', address);\n        // console.log('formatedAdress', userFormattedAddress);\n\n        let places = [];\n\n        //USER GEOCODING\n        axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${userFormattedAddress}&key=${process.env.REACT_APP_GOOGLE_GEOCODING_API}`)\n            .then(userGeocoding => {\n                // console.log('axios get google API', userGeocoding.data.results[0].geometry.location);\n                const lat = userGeocoding.data.results[0].geometry.location.lat;\n                const lng = userGeocoding.data.results[0].geometry.location.lng;\n\n                places.push({lat: lat, lng: lng, name:'Your location'});\n\n                //VOLUNTEER GEOCODING\n                axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${volFormattedAddress}&key=${process.env.REACT_APP_GOOGLE_GEOCODING_API}`)\n                    .then(volGeocoding => {\n                        const lat = volGeocoding.data.results[0].geometry.location.lat;\n                        const lng = volGeocoding.data.results[0].geometry.location.lng;\n\n                        places.push({lat: lat, lng: lng, name:`${this.props.volName}'s location`});\n\n                        // console.log('places', places);\n\n                        this.setState({\n                            places: places\n                        })\n                    })\n\n            })\n            .catch(err => {\n                console.log('Error while getting info from Google API', err);\n            })\n        }\n    }\n\n    displayMarkers = () => {\n        return this.state.places.map((store, index) => {\n            return <Marker key={index} id={index} position={{\n                lat: store.lat,\n                lng: store.lng\n            }} \n            name={store.name}\n            onClick={this.onMarkerClick} />\n        })\n    }\n\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n \n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n        this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n        })\n        }\n    };\n\n    render() {\n        return (\n            <Map className=\"maps\"\n                google={this.props.google}\n                zoom={9}\n                style={mapStyles}\n                initialCenter={{\n                lat: 38.7104766,\n                lng: -9.1476696\n                }}>\n                {this.displayMarkers()}\n\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}>\n                        <div>\n                        <h6>{this.state.selectedPlace.name}</h6>\n                        </div>\n                </InfoWindow>\n            </Map>\n            \n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_API\n})(GoogleMap);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\n// import { Link } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\n// import { FiEdit } from \"react-icons/fi\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport GoogleMap from '../GoogleMap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Div = styled.div `\n    ${props => props.mainContainer && css`\n        margin:auto 2em;\n    `}\n\n    ${props => props.banner && css `\n        width: 100%;\n        height: 4em;\n        border: 1px solid #007bff;\n        border-radius: 2em;\n\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 1em;\n    `}\n\n    ${props => props.titleContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n        margin:auto 2em;\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n    `}\n\n    ${props => props.rightInfo && css`\n        width: 80%;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n    ${props => props.leftInfo && css`\n        width: 15%;\n        height: 100%;\n        margin-left: 20px;\n        text-align: center;\n    `}\n`\n\nconst Ul = styled.div `\n    ${props => props.lista && css `\n        width: 100%;\n        height: auto;\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-around;\n\n        list-style: none;\n        background-color: #f1f1f1;\n    `}\n`\n\nexport default class AssignedVolunteers extends Component {\n    state = {\n        author: '',\n        review: '',\n        rate: '',\n        subject: '',\n        reports: [],\n        loggedInAccount: [],\n        assignedVolunteers: [],\n        selectedVolunteer: [],\n        skills: [],\n        availablePeriods: [],\n        selVolReports: []\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n        const subject = this.state.selectedVolunteer._id;\n        const review = this.state.review;\n        const rate = this.state.rate;\n        console.log(this.state);\n        axios.post(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/submitReview`, {subject, review, rate}, {withCredentials: true})\n            .then(() => {\n                this.setState({\n                    author: '',\n                    subject: '',\n                    review: '',\n                    rate: ''\n                });\n                toast('Review created!');\n            })\n    }\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n\n        /* if(event.target.type === 'radio'){\n            this.setState({[name]: event.target.radio});\n        } else */{\n            this.setState({[name]: value});\n        }\n    }\n\n    componentFunctions() {\n        const filteredSkills = this.renderSkills();\n        const filteredAvailablePeriods = this.renderAvailability();\n        const rep = this.selectReports();\n        this.setState({\n            skills: filteredSkills,\n            availablePeriods: filteredAvailablePeriods,\n            selVolReports: rep\n        })\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_SERVER}/api/user/${params.id}`)\n            .then(responseFromAPI => {\n                // console.log('API Res:', responseFromAPI.data);\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({\n                    loggedInAccount: loggedInAccount,\n                    assignedVolunteers: loggedInAccount.assignedVolunteers,\n                    reports: responseFromAPI.data.reports\n                }, () => {\n                    if (this.state.assignedVolunteers.length > 0) {\n                        \n                        this.setState({\n                            selectedVolunteer: this.state.assignedVolunteers[0]\n                        }, () => {\n                            this.componentFunctions()\n                            // this.renderSkills();\n                            // this.renderAvailability();\n                        }/* , () => {\n                            this.renderAvailability();\n                        }, () => {\n                            this.selectReports();\n                        } */)\n                    }\n                })\n            })\n    }\n\n    selectedVol = (vol) => {\n        this.setState({\n            selectedVolunteer: vol\n        }, () => {\n            this.componentFunctions();\n        }/* , () => {\n            this.renderAvailability();\n        }, () => {\n            this.selectReports();\n        } */)\n    }\n\n    renderSkills() {\n        let skillsKeys = Object.keys(this.state.selectedVolunteer.skills);\n        let filteredSkills;\n\n        filteredSkills = skillsKeys.filter((key) => {\n            return this.state.selectedVolunteer.skills[key];\n        });\n\n        for (let i = 0; i < filteredSkills.length; i++){\n            if(filteredSkills[i] === \"healthCare\"){\n                filteredSkills[i] = \"Health Care\"\n            }\n            if(filteredSkills[i] === \"houseCare\"){\n                filteredSkills[i] = \"House Care/Maintenance\"\n            }\n            if(filteredSkills[i] === \"displacements\"){\n                filteredSkills[i] = \"Displacements\"\n            }\n            if(filteredSkills[i] === \"grocery\"){\n                filteredSkills[i] = \"Grocery Shopping\"\n            }\n            if(filteredSkills[i] === \"mentor\"){\n                filteredSkills[i] = \"Mentor\"\n            }\n        }\n        // console.log('filteredSkills:', filteredSkills);\n        /* this.setState({\n            skills: filteredSkills\n        }) */\n        return filteredSkills;\n    }\n\n    renderAvailability() {\n        let availablePeriodsKeys = Object.keys(this.state.selectedVolunteer.availablePeriods);\n        let filteredAvailablePeriods;\n\n        filteredAvailablePeriods = availablePeriodsKeys.filter((key) => {\n            return this.state.selectedVolunteer.availablePeriods[key];\n        });\n\n        if(filteredAvailablePeriods.includes(\"fullDay\")){\n            filteredAvailablePeriods = [\"fullDay\"];\n        }\n\n        for (let j = 0; j < filteredAvailablePeriods.length; j++){\n            if(filteredAvailablePeriods[j] === \"morning\"){\n                filteredAvailablePeriods[j] = \"Morning: 8am - 12pm\"\n            }\n            if(filteredAvailablePeriods[j] === \"afternoon\"){\n                filteredAvailablePeriods[j] = \"Afternoon: 12pm - 4pm\"\n            }\n            if(filteredAvailablePeriods[j] === \"evening\"){\n                filteredAvailablePeriods[j] = \"Evening: 4pm - 8pm\"\n            }\n            if(filteredAvailablePeriods[j] === \"night\"){\n                filteredAvailablePeriods[j] = \"Night: 8pm - 12am\"\n            }\n            if(filteredAvailablePeriods[j] === \"overNight\"){\n                filteredAvailablePeriods[j] = \"Over night: 12am - 8am\"\n            }\n            if(filteredAvailablePeriods[j] === \"fullDay\"){\n                filteredAvailablePeriods[j] = \"Full-day: 24 hours\"\n            }\n        }\n        // console.log('filteredAvailablePeriods:', filteredAvailablePeriods);\n        /* this.setState({\n            availablePeriods: filteredAvailablePeriods\n        }) */\n        return filteredAvailablePeriods\n    }\n\n    selectReports() {\n        if(!this.state.reports) {\n            // console.log('THERE ARE NO REPORTS TO SHOW!')\n            return;\n        }\n        // filtering the user associated reports according to the volunteer\n        let rep = [];\n        let allReps = this.state.reports;\n        // console.log('allReps:', allReps);\n        allReps.forEach(report => {\n            if(report.author._id === this.state.selectedVolunteer._id) {\n                rep.push(report);\n            }\n        });\n        // console.log('rep:', rep);\n        // setting the state with the selected reports\n        /* this.setState({\n            selVolReports:rep\n        }); */\n\n        return rep\n    }\n\n    showReports(auth, sub) {\n        sub = this.state.loggedInAccount._id;\n        auth = this.state.selectedVolunteer._id;\n\n        let authName = `${this.state.selectedVolunteer.firstName} ${this.state.selectedVolunteer.lastName}`;\n        \n\n        return (\n            this.state.selVolReports.map(rep => {\n                \n                return (\n                    <li key={rep._id}>\n                        <p><strong>{authName}</strong></p>\n                        {rep.text.map((res, i) => {\n                            return (\n                                <div key={i}>\n                                    <p><strong>Report:</strong> {res.report}</p>\n                                    <p><strong>Posted on:</strong>{res.createdAt}</p>\n                                </div>\n                            )\n                        })}\n                    </li>\n                );\n            })\n        );\n    }\n\n    render(){\n        // console.log('ALL REPORTS:', this.state.reports);\n        // console.log('Assigned Volunteers:', this.state.assignedVolunteers);\n        // console.log('Selected Volunter:',this.state.selectedVolunteer);\n        return(\n            <Div mainContainer>\n\n                <Div titleContainer>\n                    <h2>Assigned Volunteers</h2>\n                    {/* <Div editBtn>\n                        <Link to={{\n                            pathname: `/user/${this.state.loggedInAccount._id}/edit`,\n                            state: {\n                                // firstName: this.state.loggedInAccount.firstName,\n                                // lastName: this.state.loggedInAccount.lastName,\n                                // email: this.state.loggedInAccount.email,\n                                // address: this.state.loggedInAccount.address,\n                                // phoneNumber: this.state.loggedInAccount.phoneNumber,\n                                // emergFirstName: this.state.emergencyContact.firstName,\n                                // emergLastName: this.state.emergencyContact.lastName,\n                                // emergEmail: this.state.emergencyContact.email,\n                                // emergAddress: this.state.emergencyContact.address,\n                                // emergPhoneNumber: this.state.emergencyContact.phoneNumber,\n                                // morning: this.state.schedulePreference.morning,\n                                // afternoon: this.state.schedulePreference.afternoon,\n                                // evening: this.state.schedulePreference.evening,\n                                // night: this.state.schedulePreference.night,\n                                // overNight: this.state.schedulePreference.overNight,\n                                // fullDay: this.state.schedulePreference.fullDay,\n                                // healthCare: this.state.specificNeeds.healthCare,\n                                // houseCare: this.state.specificNeeds.houseCare,\n                                // displacements: this.state.specificNeeds.displacements,\n                                // grocery: this.state.specificNeeds.grocery,\n                                // pupil: this.state.specificNeeds.pupil,\n                                // notes: this.state.loggedInAccount.notes,\n                                // profilePicture: this.state.loggedInAccount.profilePicture\n                            }\n                        }}>\n                        <Button variant=\"outline-secondary\" size=\"sm\"><FiEdit /> Edit Profile</Button>\n                        </Link>\n                    </Div> */}\n                </Div>\n\n                <Div info>\n                    <Div leftInfo>\n                    {this.props.loggedInAccount && this.state.assignedVolunteers.map(vol => {\n                        return (\n                            <Ul lista key={vol._id}>\n                                <li className=\"volList\">\n                                    <a className=\"aLink\" href=\"#information\" onClick={this.selectedVol.bind(this, vol)}>\n                                        <Div banner>\n                                            <span>\n                                                <strong>\n                                                    {vol.firstName} {vol.lastName}\n                                                </strong>\n                                            </span>\n                                            <RoundedPicture pic={vol.profilePicture} size='3em' />\n                                        </Div>\n                                    </a>\n                                </li>\n                            </Ul>\n                        )\n                    })}\n                    </Div>\n\n                    <Div rightInfo>\n                        <Tabs defaultActiveKey=\"profile\" id=\"information\">\n                            <Tab className=\"tab\" eventKey=\"profile\" title=\"Profile\" id=\"informationProfile\">\n                                <h5>Volunteer Details</h5>\n                                <p><strong>Name:</strong> {this.state.selectedVolunteer.firstName} {this.state.selectedVolunteer.lastName}</p>\n                                <p><strong>Age:</strong> {this.state.selectedVolunteer.age}</p>\n                                <p><strong>Occupation:</strong> {this.state.selectedVolunteer.occupation}</p>\n                                <ul id=\"assVolSkills\">\n                                    <strong>Skills:</strong>\n                                    {this.state.skills && this.state.skills.map(skill => (<li key={skill}>{skill}</li>))}\n                                </ul>\n                                <p><strong>About:</strong> {this.state.selectedVolunteer.aboutMe}</p>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"schedule\" title=\"Schedule\" id=\"informationSchedule\">\n                                <ol>\n                                    <h5>Availability</h5>\n                                    {this.state.availablePeriods && this.state.availablePeriods.map(per => (<li key={per}>{per}</li>))}\n                                </ol>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"reports\" title=\"Reports\" id=\"informationReports\">\n                                <h5>Your Reports</h5>\n                                <ol>\n                                    {this.showReports()}\n                                </ol>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"review\" title=\"Review\">\n                                <div>\n                                    <h5>Rate the volunteer {this.state.selectedVolunteer.firstName} {this.state.selectedVolunteer.lastName}</h5>\n                                    <form onSubmit={this.handleFormSubmit}>\n                                        <label htmlFor=\"author\">Author: {this.state.loggedInAccount.firstName} {this.state.loggedInAccount.lastName}</label>\n                                        <input type=\"text\" name=\"author\" id=\"author\" value={this.state.loggedInAccount._id} hidden/> <br/>\n                                        <label htmlFor=\"subject\">Subject: {this.state.selectedVolunteer.firstName} {this.state.selectedVolunteer.lastName}</label>\n                                        <input type=\"text\" name=\"subject\" id=\"subject\" value={this.state.selectedVolunteer._id} hidden/> <br/>\n                                        <label>From 1 to 5 (1 beeing bad and 5 beeing awsome) how do you rate the volunteer?</label> <br/>\n                                        <label htmlFor=\"one\">1</label>\n                                        <input className=\"radio\" type=\"radio\" id=\"one\" name=\"rate\" value=\"1\" onChange={this.handleChange}/>\n                                        <label htmlFor=\"two\">2</label>\n                                        <input className=\"radio\" type=\"radio\" id=\"two\" name=\"rate\" value=\"2\" onChange={this.handleChange}/>\n                                        <label htmlFor=\"three\">3</label>\n                                        <input className=\"radio\" type=\"radio\" id=\"three\" name=\"rate\" value=\"3\" onChange={this.handleChange}/>\n                                        <label htmlFor=\"fuor\">4</label>\n                                        <input className=\"radio\" type=\"radio\" id=\"fuor\" name=\"rate\" value=\"4\" onChange={this.handleChange}/>\n                                        <label htmlFor=\"five\">5</label>\n                                        <input className=\"radio\" type=\"radio\" id=\"five\" name=\"rate\" value=\"5\" onChange={this.handleChange}/>\n                                        <br />\n\n                                        <label htmlFor=\"text\">Your impressions here:</label> <br />\n                                        <textarea name=\"review\" id=\"text\" cols=\"150\" rows=\"10\" onChange={this.handleChange}></textarea>\n\n                                        <br />\n\n                                        <input type=\"submit\" value=\"Submit\" />\n                                    </form>\n                                    <ToastContainer />\n                                </div>\n                            </Tab>\n                            <Tab className=\"tab mapTab\" eventKey=\"location\" title=\"Location\">\n                                <GoogleMap userLocation={this.state.loggedInAccount.address} volLocation={this.state.selectedVolunteer.address} volName={this.state.selectedVolunteer.firstName}/>\n                            </Tab>\n                        </Tabs>\n                    </Div>\n                </Div>\n        </Div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\n// import { Link } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\n// import { FiEdit } from \"react-icons/fi\";\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GoogleMap from '../GoogleMap';\n\n\nconst Div = styled.div `\n    ${props => props.mainContainer && css`\n        margin:auto 2em;\n    `}\n\n    ${props => props.banner && css `\n        width: 100%;\n        height: 4em;\n        border: 1px solid #007bff;\n        border-radius: 2em;\n\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 1em;\n    `}\n\n    ${props => props.titleContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n        margin:auto 2em;\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n    `}\n\n    ${props => props.rightInfo && css`\n        width: 80%;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n    ${props => props.leftInfo && css`\n        width: 15%;\n        height: auto;\n        margin-left: 20px;\n        text-align: center;\n    `}\n`\n\nconst Ul = styled.div `\n    ${props => props.lista && css `\n        width: 100%;\n        height: auto;\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-around;\n\n        list-style: none;\n        background-color: #f1f1f1;\n    `}\n`\n\nexport default class AssignedUsers extends Component {\n    state = {\n        reviews: [],\n        loggedInAccount: [],\n        assignedUsers: [],\n        selectedUser: [],\n        needs: [],\n        preferedPeriods: [],\n        selUserReviews: [],\n        averageRate: '',\n        author: '',\n        subject: '',\n        report:''\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n        const subject = this.state.selectedUser._id;\n        const report = this.state.report;\n        console.log(this.state);\n        axios.post(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/submitReport`, {subject, report}, {withCredentials: true})\n            .then(() => {\n                // this.props.refreshReports();\n                this.setState({\n                    subject: '',\n                    report: ''\n                });\n                // toast('Review created!');\n            })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({[name] : value});\n    }\n\n    componentFunctions() {\n        const filteredNeeds = this.renderNeeds();\n        const filteredPreferedPeriods = this.renderAvailability();\n        const rev = this.selectReviews();\n        this.setState({\n            Needs: filteredNeeds,\n            preferedPeriods: filteredPreferedPeriods,\n            selUserReviews: rev\n        })\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}`)\n            .then(responseFromAPI => {\n                // console.log('API Res:', responseFromAPI.data);\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({\n                    loggedInAccount: loggedInAccount,\n                    assignedUsers: loggedInAccount.assignedUsers,\n                    reviews: responseFromAPI.data.reviews,\n                    averageRate: loggedInAccount.evaluation.averageRate\n                }, () => {\n                    if (this.state.assignedUsers.length > 0) {\n                        \n                        this.setState({\n                            selectedUser: this.state.assignedUsers[0]\n                        }, () => {\n                            this.componentFunctions()\n                        })\n                    }\n                })\n            })\n    }\n\n    selectedUser = (user) => {\n        this.setState({\n            selectedUser: user\n        }, () => {\n            this.componentFunctions();\n        })\n    }\n\n    renderNeeds() {\n        let needsKeys = Object.keys(this.state.selectedUser.specificNeeds);\n        let filteredNeeds;\n\n        filteredNeeds = needsKeys.filter((key) => {\n            return this.state.selectedUser.specificNeeds[key];\n        });\n\n        for (let i = 0; i < filteredNeeds.length; i++){\n            if(filteredNeeds[i] === \"healthCare\"){\n                filteredNeeds[i] = \"Health Care\"\n            }\n            if(filteredNeeds[i] === \"houseCare\"){\n                filteredNeeds[i] = \"House Care/Maintenance\"\n            }\n            if(filteredNeeds[i] === \"displacements\"){\n                filteredNeeds[i] = \"Displacements\"\n            }\n            if(filteredNeeds[i] === \"grocery\"){\n                filteredNeeds[i] = \"Grocery Shopping\"\n            }\n            if(filteredNeeds[i] === \"mentor\"){\n                filteredNeeds[i] = \"Mentor\"\n            }\n        }\n        // console.log('filteredNeeds:', filteredNeeds);\n\n        return filteredNeeds;\n    }\n\n    renderAvailability() {\n        let preferedPeriodsKeys = Object.keys(this.state.selectedUser.schedulePreference);\n        let filteredPreferedPeriods;\n\n        filteredPreferedPeriods = preferedPeriodsKeys.filter((key) => {\n            return this.state.selectedUser.schedulePreference[key];\n        });\n\n        if(filteredPreferedPeriods.includes(\"fullDay\")){\n            filteredPreferedPeriods = [\"fullDay\"];\n        }\n\n        for (let j = 0; j < filteredPreferedPeriods.length; j++){\n            if(filteredPreferedPeriods[j] === \"morning\"){\n                filteredPreferedPeriods[j] = \"Morning: 8am - 12pm\"\n            }\n            if(filteredPreferedPeriods[j] === \"afternoon\"){\n                filteredPreferedPeriods[j] = \"Afternoon: 12pm - 4pm\"\n            }\n            if(filteredPreferedPeriods[j] === \"evening\"){\n                filteredPreferedPeriods[j] = \"Evening: 4pm - 8pm\"\n            }\n            if(filteredPreferedPeriods[j] === \"night\"){\n                filteredPreferedPeriods[j] = \"Night: 8pm - 12am\"\n            }\n            if(filteredPreferedPeriods[j] === \"overNight\"){\n                filteredPreferedPeriods[j] = \"Over night: 12am - 8am\"\n            }\n            if(filteredPreferedPeriods[j] === \"fullDay\"){\n                filteredPreferedPeriods[j] = \"Full-day: 24 hours\"\n            }\n        }\n        // console.log('filteredPreferedPeriods:', filteredPreferedPeriods);\n        return filteredPreferedPeriods\n    }\n\n    selectReviews() {\n        if(!this.state.reviews) {\n            // console.log('THERE ARE NO REVIEWS TO SHOW!')\n            return 'No Reviews';\n        }\n\n        let rev = [];\n        let allReviews = this.state.reviews;\n        // console.log('allReviews:', allReviews);\n        allReviews.forEach(review => {\n            if(review.author._id === this.state.selectedUser._id) {\n                rev.push(review);\n            }\n        });\n        // console.log('rev:', rev);\n\n        return rev\n    }\n\n    showReviews() {\n        let selURev = this.state.selUserReviews;\n\n        for(let n = 0; n < selURev.length; n ++) {\n            let revSub = selURev[n].subject;\n            let date = selURev[n].review[0].createdAt;\n            let text = selURev[n].review[0].text;\n            let rate = selURev[n].review[0].rate;\n\n            if(revSub === this.state.loggedInAccount._id) {\n                return (\n                    <li key={n}>\n                        <p><strong>Rate:</strong> {rate}</p>\n                        <p><strong>Review:</strong> {text}</p>\n                        <p><small><strong>Created on:</strong> {date}</small></p>\n                    </li>\n                )\n            }\n        }\n    }\n\n    render(){\n        // console.log('ALL REVIEWS:', this.state.reviews);\n        // console.log('Assigned Users:', this.state.assignedUsers);\n        // console.log('Selected User:',this.state.selectedUser);\n        return(\n            <Div mainContainer>\n\n                <Div titleContainer>\n                    <h2>Assigned Users</h2>\n                    {/* <Div editBtn>\n                        <Link to={{\n                            pathname: `/user/${this.state.loggedInAccount._id}/edit`,\n                            state: {\n                                // firstName: this.state.loggedInAccount.firstName,\n                                // lastName: this.state.loggedInAccount.lastName,\n                                // email: this.state.loggedInAccount.email,\n                                // address: this.state.loggedInAccount.address,\n                                // phoneNumber: this.state.loggedInAccount.phoneNumber,\n                                // emergFirstName: this.state.emergencyContact.firstName,\n                                // emergLastName: this.state.emergencyContact.lastName,\n                                // emergEmail: this.state.emergencyContact.email,\n                                // emergAddress: this.state.emergencyContact.address,\n                                // emergPhoneNumber: this.state.emergencyContact.phoneNumber,\n                                // morning: this.state.schedulePreference.morning,\n                                // afternoon: this.state.schedulePreference.afternoon,\n                                // evening: this.state.schedulePreference.evening,\n                                // night: this.state.schedulePreference.night,\n                                // overNight: this.state.schedulePreference.overNight,\n                                // fullDay: this.state.schedulePreference.fullDay,\n                                // healthCare: this.state.specificNeeds.healthCare,\n                                // houseCare: this.state.specificNeeds.houseCare,\n                                // displacements: this.state.specificNeeds.displacements,\n                                // grocery: this.state.specificNeeds.grocery,\n                                // pupil: this.state.specificNeeds.pupil,\n                                // notes: this.state.loggedInAccount.notes,\n                                // profilePicture: this.state.loggedInAccount.profilePicture\n                            }\n                        }}>\n                        <Button variant=\"outline-secondary\" size=\"sm\"><FiEdit /> Edit Profile</Button>\n                        </Link>\n                    </Div> */}\n                </Div>\n\n                <Div info>\n                    <Div leftInfo>\n                    {this.props.loggedInAccount && this.state.assignedUsers.map(user => {\n                        return (\n                            <Ul lista key={user._id}>\n                                <li className=\"volList\">\n                                    <a className=\"aLink\" href=\"#information\" onClick={this.selectedUser.bind(this, user)}>\n                                        <Div banner>\n                                            <span>\n                                                <strong>\n                                                    {user.firstName} {user.lastName}\n                                                </strong>\n                                            </span>\n                                            <RoundedPicture pic={user.profilePicture} size='3em' />\n                                        </Div>\n                                    </a>\n                                </li>\n                            </Ul>\n                        )\n                    })}\n                    </Div>\n\n                    <Div rightInfo>\n                        <Tabs defaultActiveKey=\"profile\" id=\"information\">\n                            <Tab className=\"tab\" eventKey=\"profile\" title=\"Profile\" id=\"informationProfile\">\n                                <h5>User Details</h5>\n                                <p><strong>Name:</strong> {this.state.selectedUser.firstName} {this.state.selectedUser.lastName}</p>\n                                <p><strong>Age:</strong> {this.state.selectedUser.age}</p>\n                                <p><strong>Occupation:</strong> {this.state.selectedUser.occupation}</p>\n                                <ul id=\"assVolNeeds\">\n                                    <strong>Needs:</strong>\n                                    {this.state.needs && this.state.needs.map(skill => (<li key={skill}>{skill}</li>))}\n                                </ul>\n                                <p><strong>User Notes:</strong> {this.state.selectedUser.notes}</p>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"schedule-preferences\" title=\"Schedule Preferences\" id=\"informationSchedule\">\n                                <ol>\n                                    <h5>Schedule Preferences</h5>\n                                    {this.state.preferedPeriods && this.state.preferedPeriods.map(per => (<li key={per}>{per}</li>))}\n                                </ol>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"reviews\" title=\"Reviews\" id=\"informationReviews\">\n                                <p><strong>Your average rate:</strong> {this.state.averageRate}</p>\n                                <h5>Your Reviews</h5>\n                                <ol>\n                                    {this.showReviews()}\n                                </ol>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"report\" title=\"Report\">\n                                <div>\n                                    <h5>Your report on the visit to the user {this.state.selectedUser.firstName} {this.state.selectedUser.lastName}</h5>\n                                    <form onSubmit={this.handleFormSubmit}>\n                                        <label for=\"author\">Author: {this.state.loggedInAccount.firstName} {this.state.loggedInAccount.lastName}</label>\n                                        <input type=\"text\" name=\"author\" id=\"author\" value={this.state.loggedInAccount._id} hidden /> <br/>\n                                        <label for=\"subject\">Subject: {this.state.selectedUser.firstName} {this.state.selectedUser.lastName}</label>\n                                        <input type=\"text\" name=\"subject\" id=\"subject\" value={this.state.selectedUser._id} hidden /> <br/>\n\n                                        <label for=\"report\">Your impressions here:</label> <br />\n                                        <textarea name=\"report\" id=\"report\" cols=\"150\" rows=\"10\" value={this.state.report} onChange={this.handleChange}></textarea>\n\n                                        <br />\n\n                                        <input type=\"submit\" value=\"Submit\" />\n                                    </form>\n                                    <ToastContainer />\n                                </div>\n                            </Tab>\n                            <Tab className=\"tab\" eventKey=\"location\" title=\"Location\">\n                                <GoogleMap userLocation={this.state.loggedInAccount.address} volLocation={this.state.selectedUser.address} volName={this.state.selectedUser.firstName}/>\n                            </Tab>\n                        </Tabs>\n                    </Div>\n                </Div>\n        </Div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n    ${props => props.main && css `\n        background-color: #f1f1f1;\n        width: 100%;\n        padding: 20px 30px;\n        border-radius: 20px;\n    `};\n\n    ${props => props.password && css `\n        margin-top: 40px;\n    `};\n\n    ${props => props.profilePicture && css `\n        margin-top: 40px;\n    `};\n\n    ${props => props.aboutMe && css`\n        text-align: left;\n        margin-top: 30px;\n        padding: 0 10px;\n    `}\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\nclass EditPersonalData extends Component{    \n    state = {\n        accountType: this.props.accountType,\n        firstName: this.props.firstName,\n        lastName: this.props.lastName,\n        email: this.props.email,\n        address: this.props.address,\n        phoneNumber: this.props.phoneNumber,\n        occupation: this.props.occupation,\n        aboutMe: this.props.aboutMe,\n        success: false\n    }\n\n    handleChange = (event) => {  \n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        if(this.state.accountType === 'User'){\n            const { \n                firstName, \n                lastName, \n                email, \n                address, \n                phoneNumber \n            } = this.state;\n    \n            // console.log('firstName', firstName);\n    \n    \n            axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/personalDetails`, {\n                firstName,\n                lastName, \n                email, \n                address, \n                phoneNumber\n            }, { withCredentials: true})\n                .then(() => {\n                    this.props.updateState();\n    \n                    this.setState({\n                        success: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                success: false\n                            })\n                        }, 1000)\n                    });\n    \n    \n                    //this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n                })\n                .catch(err => {\n                    console.log('Error while updating personalDetails on DB', err);\n                });\n        } else if(this.state.accountType === 'Volunteer'){\n            const { \n                firstName, \n                lastName, \n                email, \n                address, \n                phoneNumber,\n                occupation,\n                aboutMe\n            } = this.state;\n    \n            // console.log('firstName', firstName);\n    \n    \n            axios.put(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/personalDetails`, {\n                firstName,\n                lastName, \n                email, \n                address,\n                volPhoneNumber: phoneNumber,\n                occupation,\n                aboutMe\n            }, { withCredentials: true})\n                .then(() => {\n                    this.props.updateState();\n    \n                    this.setState({\n                        success: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                success: false\n                            })\n                        }, 1000)\n                    });\n                })\n                .catch(err => {\n                    console.log('Error while updating personalDetails on DB', err);\n                });\n        }\n    }\n\n    render(){\n        if(this.state.accountType === 'User'){\n            return(\n                <Div main>\n                    <H5>Personal Details</H5>\n                    <Hr />\n                    <Form onSubmit={this.handleFormSubmit}>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicFirstName\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formBasicLastName\">\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formBasicPhoneNumber\">\n                                <Form.Label>Phone Number</Form.Label>\n                                <Form.Control type=\"text\" name=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicAddress\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        {!this.state.success &&\n                            <Button variant=\"outline-primary\" type=\"submit\">\n                                Update details\n                            </Button>\n                        }\n                        {this.state.success &&\n                            <Button variant=\"success\" disabled>\n                                Success!\n                            </Button>\n                        }\n                        \n                    </Form>\n                </Div>\n            )\n        } else if(this.state.accountType === 'Volunteer'){\n            return(\n                <Div main>\n                    <H5>Personal Details</H5>\n                    <Hr />\n                    <Form onSubmit={this.handleFormSubmit}>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicFirstName\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formBasicLastName\">\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicPhoneNumber\">\n                                <Form.Label>Phone Number</Form.Label>\n                                <Form.Control type=\"text\" name=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.handleChange} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formBasicOccupation\">\n                                <Form.Label>Occupation</Form.Label>\n                                <Form.Control type=\"text\" name=\"occupation\" value={this.state.occupation} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formBasicAddress\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Div aboutMe>\n                            <H6>About Me</H6>\n                            <Form.Group controlId=\"formControlTextarea\">\n                                <Form.Control as=\"textarea\" rows=\"5\" maxLength=\"250\" name=\"aboutMe\" value={this.state.aboutMe} onChange={this.handleChange} />\n                            </Form.Group>\n                        </Div>\n                        {!this.state.success &&\n                            <Button variant=\"outline-primary\" type=\"submit\">\n                                Update details\n                            </Button>\n                        }\n                        {this.state.success &&\n                            <Button variant=\"success\" disabled>\n                                Success!\n                            </Button>\n                        }\n                        \n                    </Form>\n                </Div>\n            )\n        }else {\n            return(\n                <div>\n                    loading...\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default EditPersonalData;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n    background-color: #f1f1f1;\n    width: 100%;\n    padding: 20px 30px;\n    border-radius: 20px;\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\nclass EditEmergencyContact extends Component{    \n    state = {\n        emergFirstName: this.props.emergFirstName,\n        emergLastName: this.props.emergLastName,\n        emergEmail: this.props.emergEmail,\n        emergAddress: this.props.emergAddress,\n        emergPhoneNumber: this.props.emergPhoneNumber,\n        success: false\n    }\n\n    handleChange = (event) => {  \n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n        const { \n            emergFirstName, \n            emergLastName, \n            emergEmail, \n            emergAddress, \n            emergPhoneNumber \n        } = this.state;\n\n        axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/emergContact`, {\n            emergFirstName,\n            emergLastName,\n            emergEmail,\n            emergAddress,\n            emergPhoneNumber\n        }, { withCredentials: true})\n            .then(() => {\n                this.props.updateState();\n\n                this.setState({\n                    success: true\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            success: false\n                        })\n                    }, 1000)\n                });\n\n                // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n            })\n            .catch(err => {\n                console.log('Error while updating emergContact on DB', err);\n            });\n    }\n\n    render(){\n        return(\n            <Div>\n                <H5>Emergency Contact</H5>\n                <Hr />\n                <Form onSubmit={this.handleFormSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicEmergFirstName\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"emergFirstName\" value={this.state.emergFirstName} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formBasicEmergLastName\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"emergLastName\" value={this.state.emergLastName} onChange={this.handleChange} />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicEmergEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"text\" name=\"emergEmail\" value={this.state.emergEmail} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formBasicEmergPhoneNumber\">\n                        <Form.Label>Phone Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"emergPhoneNumber\" value={this.state.emergPhoneNumber} onChange={this.handleChange} />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicEmergAddress\">\n                        <Form.Label>Address</Form.Label>\n                            <Form.Control type=\"text\" name=\"emergAddress\" value={this.state.emergAddress} onChange={this.handleChange} />\n                    </Form.Group>\n                </Form.Row>\n                {!this.state.success &&\n                        <Button variant=\"outline-primary\" type=\"submit\">\n                            Update emergency contact\n                        </Button>\n                    }\n                    {this.state.success &&\n                        <Button variant=\"success\" disabled>\n                            Success!\n                        </Button>\n                    }\n            </Form>\n            </Div>\n        )        \n    }\n}\n\nexport default EditEmergencyContact;","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst Div = styled.div`\n    ${props => props.main && css`\n        background-color: #f1f1f1;\n        width: 100%;\n        padding: 20px 30px;\n        border-radius: 20px;\n    `};\n\n    ${props => props.helpAndSchedule && css`\n        display: flex;\n        text-align: left;\n    `}\n\n    ${props => props.needs && css`\n        width: 50%;\n    `}\n    ${props => props.schedule && css`\n        width: 50%;\n    `}\n\n    ${props => props.notes && css`\n        text-align: left;\n        margin-top: 30px;\n        padding: 0 10px;\n    `}    \n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\n\n\nclass EditAccountPreferencesInfo extends Component{    \n    state = {\n        accountType: this.props.accountType,\n        morning: this.props.morning,\n        afternoon: this.props.afternoon,\n        evening: this.props.evening,\n        night: this.props.night,\n        overNight: this.props.overNight,\n        fullDay: this.props.fullDay,\n        healthCare: this.props.healthCare,\n        houseCare: this.props.houseCare,\n        displacements: this.props.displacements,\n        grocery: this.props.grocery,\n        pupil: this.props.pupil,\n        mentor: this.props.mentor,\n        notes: this.props.notes,\n        successNeeds: false,\n        successSchedule: false,\n    }\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n\n        if(event.target.type === 'checkbox'){\n            this.setState({\n                [name]: event.target.checked\n            }, () => {\n                this.handleCheckIfTrue();\n            });          \n        } else{\n            this.setState({[name]: value});\n        }\n        \n    }\n\n    handleCheckIfTrue = (event) => {\n        if(this.state.morning && this.state.afternoon && this.state.evening && this.state.night && this.state.overNight){\n            this.setState({fullDay: true});\n        } else{\n            this.setState({fullDay: false});\n        }\n    };\n\n    handleChangeFullDay = (event) => {\n        this.setState({\n            morning: event.target.checked,\n            afternoon: event.target.checked,\n            evening: event.target.checked,\n            night: event.target.checked,\n            overNight: event.target.checked,\n            fullDay: event.target.checked\n        });\n    }\n\n    handleFormSubmitSchedule = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        if(this.state.accountType === 'User'){\n            const { \n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay\n            } = this.state;\n    \n            axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/schedulePreferences`, \n            {\n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay\n            }, { withCredentials: true })\n                .then(() => {\n                    this.props.updateState();\n    \n                    this.setState({\n                        successSchedule: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                successSchedule: false\n                            })\n                        }, 1000)\n                    });\n    \n                    // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n                })\n                .catch(err => {\n                    console.log('Error while updating schedulePreferences on DB', err);\n                    if(err.response.data.message) {\n                        toast.error(err.response.data.message, {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }else if(this.state.accountType === 'Volunteer'){\n            const { \n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay\n            } = this.state;\n    \n            axios.put(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/availablePeriods`, \n            {\n                morning,\n                afternoon,\n                evening,\n                night,\n                overNight,\n                fullDay\n            }, { withCredentials: true })\n                .then(() => {\n                    this.props.updateState();\n    \n                    this.setState({\n                        successSchedule: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                successSchedule: false\n                            })\n                        }, 1000)\n                    });\n                })\n                .catch(err => {\n                    console.log('Error while updating schedulePreferences on DB', err);\n                    if(err.response.data.message) {\n                        toast.error(err.response.data.message, {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }\n\n        \n    }\n\n    handleFormSubmitNeeds = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        if(this.state.accountType === 'User'){\n            const { \n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                pupil\n            } = this.state;\n    \n            axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/specificNeeds`, \n            {\n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                pupil\n            }, { withCredentials: true })\n                .then(() => {\n                    this.props.updateState();\n    \n                    this.setState({\n                        successNeeds: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                successNeeds: false\n                            })\n                        }, 1000)\n                    });\n    \n                    // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n                })\n                .catch(err => {\n                    console.log('Error while updating schedulePreferences on DB', err);\n                    if(err.response.data.message) {\n                        toast.error(err.response.data.message, {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }else if(this.state.accountType === 'Volunteer'){\n            const { \n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                mentor\n            } = this.state;\n    \n            axios.put(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/skills`, \n            {\n                healthCare,\n                houseCare,\n                displacements,\n                grocery,\n                mentor\n            }, { withCredentials: true })\n                .then(() => {\n                    this.props.updateState();\n    \n                    this.setState({\n                        successNeeds: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                successNeeds: false\n                            })\n                        }, 1000)\n                    });\n    \n                    // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n                })\n                .catch(err => {\n                    console.log('Error while updating schedulePreferences on DB', err);\n                    if(err.response.data.message) {\n                        toast.error(err.response.data.message, {\n                            position: \"top-center\",\n                            autoClose: 5000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    }\n                });\n        }\n        \n    }\n\n    handleFormSubmitNotes = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n        const { notes } = this.state;\n\n        axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/userNotes`, { userNotes: notes } , { withCredentials: true })\n            .then(() => {\n                this.props.updateState();\n\n                this.setState({\n                    successNotes: true\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            successNotes: false\n                        })\n                    }, 1000)\n                });\n\n                // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n            })\n            .catch(err => {\n                console.log('Error while updating userNotes on DB', err);\n            });\n    }\n\n    render(){\n        if(this.state.accountType === 'User'){\n            return(\n                <Div main>\n                    <H5>Your Preferences</H5>\n                    <Hr />\n                    <Div helpAndSchedule>\n                        <Div needs>\n                            <Form onSubmit={this.handleFormSubmitNeeds}>\n                                <Form.Group as={Col} controlId=\"checkNeedsForm\">\n                                    <H6>Needs</H6>\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"healthCare\"\n                                        name=\"healthCare\"\n                                        label=\"Health Care\"\n                                        checked={this.state.healthCare} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"houseCare\"\n                                        name=\"houseCare\"\n                                        label=\"House Care/Maintenance\"\n                                        checked={this.state.houseCare} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"displacements\"\n                                        name=\"displacements\"\n                                        label=\"Displacements\"\n                                        checked={this.state.displacements} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"grocery\"\n                                        name=\"grocery\"\n                                        label=\"Grocery Shopping\"\n                                        checked={this.state.grocery} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"pupil\"\n                                        name=\"pupil\"\n                                        label=\"Pupil (for at-risk youth in need of a mentor)\"\n                                        checked={this.state.pupil} \n                                        onChange={this.handleChange}\n                                    />\n                                </Form.Group>\n                                <div className=\"center-btn\">\n                                    {!this.state.successNeeds &&\n                                        <Button variant=\"outline-primary\" type=\"submit\">\n                                            Update needs\n                                        </Button>\n                                    }\n                                    {this.state.successNeeds &&\n                                        <Button variant=\"success\" disabled>\n                                            Success!\n                                        </Button>\n                                    }\n                                </div>\n                            </Form>\n                        </Div>\n                        <ToastContainer />\n                        <Div schedule>\n                            <Form onSubmit={this.handleFormSubmitSchedule}>\n                                <Form.Group as={Col} controlId=\"checkScheduleForm\">\n                                    <H6>Schedule Preferences</H6>\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"morning\"\n                                        name=\"morning\"\n                                        label=\"Morning: 8am - 12pm\"\n                                        checked={this.state.morning} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"afternoon\"\n                                        name=\"afternoon\"\n                                        label=\"Afternoon: 12pm - 4pm\"\n                                        checked={this.state.afternoon} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"evening\"\n                                        name=\"evening\"\n                                        label=\"Evening: 4pm - 8pm\"\n                                        checked={this.state.evening} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"night\"\n                                        name=\"night\"\n                                        label=\"Night: 8pm - 12am\"\n                                        checked={this.state.night} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"overNight\"\n                                        name=\"overNight\"\n                                        label=\"Over Night: 12am - 8am\"\n                                        checked={this.state.overNight} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"fullDay\"\n                                        name=\"fullDay\"\n                                        label=\"Full Day: 24 hours\"\n                                        checked={this.state.fullDay} \n                                        onChange={this.handleChangeFullDay}\n                                    />\n                                </Form.Group>\n                                <div className=\"center-btn\">\n                                    {!this.state.successSchedule &&\n                                        <Button variant=\"outline-primary\" type=\"submit\">\n                                            Update schedule\n                                        </Button>\n                                    }\n                                    {this.state.successSchedule &&\n                                        <Button variant=\"success\" disabled>\n                                            Success!\n                                        </Button>\n                                    }\n                                </div>\n                            </Form>\n                        </Div>\n                        <ToastContainer />\n                    </Div>\n                    <Form onSubmit={this.handleFormSubmitNotes}>\n                        <Div notes>\n                            <H6>Notes</H6>\n                            <Form.Group controlId=\"formControlTextarea\">\n                                {this.state.notes && \n                                    <Form.Control as=\"textarea\" rows=\"5\" maxLength=\"250\" name=\"notes\" value={this.state.notes} onChange={this.handleChange} />\n                                }\n                                {!this.state.notes && \n                                    <Form.Control as=\"textarea\" rows=\"5\" maxLength=\"250\" name=\"notes\" placeholder=\"If you would like to specify your needs, please write down some notes...\" value={this.state.notes} onChange={this.handleChange} />\n                                }\n                            </Form.Group>\n                        </Div>\n                        {!this.state.successNotes &&\n                            <Button variant=\"outline-primary\" type=\"submit\">\n                                Update notes\n                            </Button>\n                        }\n                        {this.state.successNotes &&\n                            <Button variant=\"success\" disabled>\n                                Success!\n                            </Button>\n                        }\n                    </Form>\n                </Div>\n            )    \n        }else if(this.state.accountType === 'Volunteer'){\n            return(\n                <Div main>\n                    <H5>Your Preferences</H5>\n                    <Hr />\n                    <Div helpAndSchedule>\n                        <Div needs>\n                            <Form onSubmit={this.handleFormSubmitNeeds}>\n                                <Form.Group as={Col} controlId=\"checkNeedsForm\">\n                                    <H6>Skills</H6>\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"healthCare\"\n                                        name=\"healthCare\"\n                                        label=\"Health Care\"\n                                        checked={this.state.healthCare} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"houseCare\"\n                                        name=\"houseCare\"\n                                        label=\"House Care/Maintenance\"\n                                        checked={this.state.houseCare} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"displacements\"\n                                        name=\"displacements\"\n                                        label=\"Displacements\"\n                                        checked={this.state.displacements} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"grocery\"\n                                        name=\"grocery\"\n                                        label=\"Grocery Shopping\"\n                                        checked={this.state.grocery} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"mentor\"\n                                        name=\"mentor\"\n                                        label=\"Mentor (for at-risk youth in need of a mentor)\"\n                                        checked={this.state.mentor} \n                                        onChange={this.handleChange}\n                                    />\n                                </Form.Group>\n                                <div className=\"center-btn\">\n                                    {!this.state.successNeeds &&\n                                        <Button variant=\"outline-primary\" type=\"submit\">\n                                            Update skills\n                                        </Button>\n                                    }\n                                    {this.state.successNeeds &&\n                                        <Button variant=\"success\" disabled>\n                                            Success!\n                                        </Button>\n                                    }\n                                </div>\n                            </Form>\n                        </Div>\n                        <ToastContainer />\n                        <Div schedule>\n                            <Form onSubmit={this.handleFormSubmitSchedule}>\n                                <Form.Group as={Col} controlId=\"checkScheduleForm\">\n                                    <H6>Availability</H6>\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"morning\"\n                                        name=\"morning\"\n                                        label=\"Morning: 8am - 12pm\"\n                                        checked={this.state.morning} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"afternoon\"\n                                        name=\"afternoon\"\n                                        label=\"Afternoon: 12pm - 4pm\"\n                                        checked={this.state.afternoon} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"evening\"\n                                        name=\"evening\"\n                                        label=\"Evening: 4pm - 8pm\"\n                                        checked={this.state.evening} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"night\"\n                                        name=\"night\"\n                                        label=\"Night: 8pm - 12am\"\n                                        checked={this.state.night} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"overNight\"\n                                        name=\"overNight\"\n                                        label=\"Over Night: 12am - 8am\"\n                                        checked={this.state.overNight} \n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Check \n                                        type=\"switch\"\n                                        id=\"fullDay\"\n                                        name=\"fullDay\"\n                                        label=\"Full Day: 24 hours\"\n                                        checked={this.state.fullDay} \n                                        onChange={this.handleChangeFullDay}\n                                    />\n                                </Form.Group>\n                                <div className=\"center-btn\">\n                                    {!this.state.successSchedule &&\n                                        <Button variant=\"outline-primary\" type=\"submit\">\n                                            Update availability\n                                        </Button>\n                                    }\n                                    {this.state.successSchedule &&\n                                        <Button variant=\"success\" disabled>\n                                            Success!\n                                        </Button>\n                                    }\n                                </div>\n                            </Form>\n                        </Div>\n                    </Div>\n                    <ToastContainer />\n                </Div>\n            )    \n        } else {\n            return(\n                <div>\n                    loading...\n                </div>\n            )\n        } \n    }\n}\n\nexport default EditAccountPreferencesInfo;","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n    ${props => props.main && css `\n        background-color: #f1f1f1;\n        width: 100%;\n        padding: 20px 30px;\n        border-radius: 20px;\n    `};\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\nclass EditPassword extends Component{    \n    state = {\n        accountType: this.props.accountType,\n        password: '',\n        success: false\n    }\n\n    handleChange = (event) => {  \n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n        const { password } = this.state;\n\n        if(this.state.accountType === 'User'){\n            axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/password`, \n            { password }, { withCredentials: true })\n                .then(() => {\n                    console.log('Password updated successfully!')\n\n                    this.setState({\n                        success: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                success: false\n                            })\n                        }, 1000)\n                    });\n                    // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n                })\n                .catch(err => {\n                    console.log('Error while updating password on DB', err);\n                });\n        }else if(this.state.accountType === 'Volunteer'){\n            axios.put(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/password`, \n            { password }, { withCredentials: true })\n                .then(() => {\n                    console.log('Password updated successfully!')\n\n                    this.setState({\n                        success: true\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                success: false\n                            })\n                        }, 1000)\n                    });\n                    // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n                })\n                .catch(err => {\n                    console.log('Error while updating password on DB', err);\n                });\n        }\n    }\n\n    render(){\n        return(\n            <Div main>\n                <H5>Security</H5>\n                <Hr />\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\n                            <Form.Label>Change password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" pattern=\".{6,}\" required title=\"6 characters minimum\" value={this.state.password} placeholder='••••••' onChange={this.handleChange} />\n                            <Form.Text className=\"text-muted\">\n                                Password length must be at least 6 characters\n                            </Form.Text>\n                        </Form.Group>\n                    </Form.Row>\n                    {!this.state.success &&\n                        <Button variant=\"outline-primary\" type=\"submit\">\n                            Update password\n                        </Button>\n                    }\n                    {this.state.success &&\n                        <Button variant=\"success\" disabled>\n                            Success!\n                        </Button>\n                    }\n                </Form>\n            </Div>\n        )\n    }\n}\n\nexport default EditPassword;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Form, ProgressBar } from 'react-bootstrap';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n    width: 100%;\n`;\n\n\nclass ModalProfilePicture extends Component {\n    state = {\n        profilePicture: '',\n        setProgress: 0,\n        progress: 0\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ file: event.target.files[0]});\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        \n        const { params } = this.props.match;\n\n        const uploadData = new FormData();\n        uploadData.append(\"profilePicture\", this.state.file);\n\n        this.handleProgressBar();\n\n        axios.post(`${process.env.REACT_APP_SERVER}/api/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n                \n                this.setState({ profilePicture: response.data.profilePicture })\n                // console.log('state profilePicture:', this.state.profilePicture);\n                const { profilePicture } = this.state;\n\n                if(this.props.accountType === 'User'){\n                    axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/profilePicture`, { profilePicture }, { withCredentials: true })\n                    .then(() => {\n                        this.props.updateState();\n                    })\n                    .catch(err => {\n                        console.log('Error while updating profile picture in DB', err);\n                    });\n                } else if(this.props.accountType === 'Volunteer'){\n                    axios.put(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/profilePicture`, { profilePicture }, { withCredentials: true })\n                    .then(() => {\n                        this.props.updateState();\n                    })\n                    .catch(err => {\n                        console.log('Error while updating profile picture in DB', err);\n                    });\n                }\n            })\n            .catch(err => {\n                console.log('Error while uploading image', err);\n            })\n    }\n\n    handleProgressBar = () => {\n        let count = 0;\n\n        const interval = setInterval(() => { \n            if(count < 100){\n                count +=10\n                // console.log('count', count);\n                this.setState({\n                    progress: count\n                })\n            } else{\n                clearInterval(interval);\n            }\n         }, 400);\n    }\n\n    handleCloseClick = () => {\n        this.setState({\n            progress: 0,\n            setProgress: 0\n        }, () => {\n            this.props.onHide();\n        })\n    }\n\n    render(){\n        return (\n            <Modal\n              {...this.props}\n              size=\"lg\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Change Profile Picture\n                    </Modal.Title>\n                </Modal.Header>\n                {this.state.progress < 100 && \n                <div>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleFormSubmit} className=\"form-text-align\">\n                            <Form.Group>\n                                <Form.File id=\"profilePicture\" onChange={this.handleFileChange}/>\n                            </Form.Group>\n                            <div className=\"center-btn\">\n                                <Button variant=\"outline-primary\" type=\"submit\" block>\n                                    Upload image\n                                </Button>\n                            </div>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Div>\n                        <ProgressBar animated now={this.state.progress} label={`${this.state.progress}%`} />\n                    </Div>\n                        {/* <Button onClick={this.props.onHide}>Close</Button> */}\n                    </Modal.Footer>\n                    </div>\n                }\n                {this.state.progress === 100 && \n                    <div>\n                    <Modal.Body>\n                        <p>Image uploaded successfully!</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.handleCloseClick}>Close</Button>\n                    </Modal.Footer>\n                    </div>\n                }\n            </Modal>\n          );\n    }\n  }\n\n  export default ModalProfilePicture;","import React, { Component } from 'react';\nimport { ToggleButtonGroup, ToggleButton, Form, Button } from 'react-bootstrap';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n     ${props => props.main && css`\n        padding: 20px 30px;\n        border-radius: 20px;\n        width: 50%;\n    `};\n\n    ${props => props.volInfo && css`\n        width: 70%;\n        display: flex;\n        align-items: center;\n        text-align: left;\n    `};\n\n    ${props => props.avgRate && css`\n        width: 30%;\n        padding-right: 10px;\n        display: flex;\n        justify-content: flex-end;\n        font-size: 0.8em;\n    `};\n\n    ${props => props.topMargin && css`\n        margin-top: 30px;\n    `};\n\n    ${props => props.buttonMaxNumber && css`\n        width: 50%;\n        margin: 40px auto;\n    `};\n`;\n\nconst Span = styled.span`\n    ${props => props.volName && css`\n        margin-left: 15px;\n    `};\n`;\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    margin-top: 30px;\n`;\n\n\n\n\n\n\n\nclass DeleteAssignedVol extends Component{\n    state = {\n        value: [],\n        setValue: [],\n        success: false\n    }\n\n    handleChange = (val) => {\n        this.setState({\n            setValue: val,\n            value: val\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/deleteAssignedVolunteers`, \n        { assignedVolunteer: this.state.setValue}, { withCredentials: true })\n            .then(() => {\n                this.props.updateState();\n\n                this.setState({\n                    success: true,\n                    value: [],\n                    setValue: []\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            success: false\n                        })\n                    }, 1000)\n                });\n\n                // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n            })\n            .catch(err => {\n                console.log('Error while updating assignedVolunteers in DB', err);\n            });\n    }\n\n\n    render(){\n        return (\n            <Div main>\n                <H6>Your volunteers</H6>\n                <Form.Text className=\"text-muted\">\n                    Select volunteers you no longer wish to help you\n                </Form.Text>\n                {this.props.assignedVol.length === 0 && \n                    <Div buttonMaxNumber>\n                        <Button variant=\"outline-dark\" size=\"sm\" disabled>\n                            <span>No volunteers assigned yet. Please choose from the list on the right.</span>\n                        </Button>\n                    </Div>\n                }\n                {this.props.assignedVol.length > 0 && \n                    <Form onSubmit={this.handleFormSubmit}>\n                        <Form.Group controlId=\"checkScheduleForm\">\n                            {this.props.assignedVol && this.props.assignedVol.map(volunteer => {\n                                return(\n                                    <Div key={volunteer._id}>\n                                        <Form.Check type=\"checkbox\">\n                                            <ToggleButtonGroup type=\"checkbox\" value={this.state.value} onChange={this.handleChange} className=\"toggle-btn-group test-form\">\n                                                <ToggleButton value={volunteer._id} variant=\"outline-danger\" className=\"toggle-btn\">\n                                                    <Div volInfo>\n                                                        <RoundedPicture\n                                                            pic={volunteer.profilePicture}\n                                                            size='3.2em' />\n                                                        <Span volName>{volunteer.firstName} {volunteer.lastName}</Span>\n                                                    </Div>\n                                                    <Div avgRate>\n                                                        {volunteer.evaluation.averageRate &&\n                                                            <span>Rate: {volunteer.evaluation.averageRate}</span>\n                                                        }\n                                                        {!volunteer.evaluation.averageRate &&\n                                                            <span>Rate: 0</span>\n                                                        }\n                                                    </Div>\n                                                </ToggleButton>\n                                            </ToggleButtonGroup>\n                                        </Form.Check>\n                                    </Div>\n                                )\n                            })}\n                            <Div topMargin>\n                                {!this.state.success &&\n                                    <Button variant=\"danger\" type=\"submit\">\n                                        Delete selected volunteers\n                                    </Button>\n                                }\n                                {this.state.success &&\n                                    <Button variant=\"outline-danger\" disabled>\n                                        Deleted!\n                                    </Button>\n                                }\n                            </Div>\n                        </Form.Group>\n                    </Form>\n                }\n            </Div>\n        )\n    }\n}\n\nexport default DeleteAssignedVol;","import React, { Component } from 'react';\nimport { ToggleButtonGroup, ToggleButton, Form, Button } from 'react-bootstrap';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n     ${props => props.main && css`\n        width: 100%;\n        padding: 20px 30px;\n        border-radius: 20px;\n        width: 50%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    `};\n\n    ${props => props.volInfo && css`\n        width: 70%;\n        display: flex;\n        align-items: center;\n        text-align: left;\n    `};\n\n    ${props => props.avgRate && css`\n        width: 30%;\n        padding-right: 10px;\n        display: flex;\n        justify-content: flex-end;\n        font-size: 0.8em;\n    `};\n\n    ${props => props.topMargin && css`\n        margin-top: 30px;\n    `};\n\n    ${props => props.buttonMaxNumber && css`\n        width: 50%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n    `};\n\n    ${props => props.allVolContainer && css`\n        height: 350px;\n        padding: 0 10px;\n        overflow: scroll;\n    `};    \n`;\n\nconst Span = styled.span`\n    ${props => props.volName && css`\n        margin-left: 15px;\n    `};\n`;\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    margin-top: 30px;\n`;\n\n\n\nclass AssignNewVol extends Component{\n    state = {\n        assignedVol: [],\n        value: [],\n        setValue: [],\n        maxHelp: this.props.maxHelp,\n        allVolunteersDB: [],\n        success: false,\n    }\n\n    componentDidUpdate(prevProps) {\n        // compare this.props and prevProps\n        if (this.props !== prevProps) {\n            this.setState({\n                maxHelp: this.props.maxHelp,\n                assignedVol: this.props.assignedVol,\n                allVolunteersDB: this.props.allVolunteersDB\n            });\n        }\n    }\n\n    handleChange = (val) => {\n        this.setState({\n            setValue: val,\n            value: val\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        axios.put(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/assignVolunteers`, \n        { volunteer: this.state.setValue}, { withCredentials: true })\n            .then(() => {\n                this.props.updateState();\n\n                this.setState({\n                    success: true,\n                    value: [],\n                    setValue: []\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            success: false\n                        })\n                    }, 1000)\n                });\n\n                // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n            })\n            .catch(err => {\n                console.log('Error while updating assignedVolunteers in DB (add new)', err);\n            });\n    }\n\n\n\n\n    render(){\n        return (\n            <Div main>\n                <H6>Add volunteers</H6>\n                <Form.Text className=\"text-muted\">\n                    If you need more help, select from the list below\n                </Form.Text>\n                {this.state.allVolunteersDB && this.state.maxHelp && \n                    <Div buttonMaxNumber>\n                        <Button variant=\"outline-dark\" size=\"sm\" disabled>\n                            <span>You've reached the maximum number of volunteers assigned to you.</span>\n                        </Button>\n                    </Div>\n                }\n                \n                {this.state.allVolunteersDB && !this.state.maxHelp && \n                    <Form onSubmit={this.handleFormSubmit}>\n                        <Form.Group controlId=\"checkScheduleForm\">\n                            <Div allVolContainer>\n                                {this.state.allVolunteersDB && this.state.allVolunteersDB.map(volunteer => {\n                                    return(\n                                        <Div key={volunteer._id}>\n                                            <Form.Check type=\"checkbox\">\n                                                <ToggleButtonGroup type=\"checkbox\" value={this.state.value} onChange={this.handleChange} className=\"toggle-btn-group test-form\">\n                                                    <ToggleButton value={volunteer._id} variant=\"outline-success\" className=\"toggle-btn\">\n                                                        <Div volInfo>\n                                                            <RoundedPicture\n                                                                pic={volunteer.profilePicture}\n                                                                size='3.2em' />\n                                                            <Span volName>{volunteer.firstName} {volunteer.lastName}</Span>\n                                                        </Div>\n                                                        <Div avgRate>\n                                                            {volunteer.evaluation.averageRate &&\n                                                                <span>Rate: {volunteer.evaluation.averageRate}</span>\n                                                            }\n                                                            {!volunteer.evaluation.averageRate &&\n                                                                <span>Rate: 0</span>\n                                                            }\n                                                        </Div>\n                                                    </ToggleButton>\n                                                </ToggleButtonGroup>\n                                            </Form.Check>\n                                        </Div>\n                                    )\n                                })}\n                            </Div>\n                            <Div topMargin>\n                                {!this.state.success &&\n                                    <Button variant=\"success\" type=\"submit\">\n                                        Assign new volunteers\n                                    </Button>\n                                }\n                                {this.state.success &&\n                                <Button variant=\"success\" disabled>\n                                    Added!\n                                </Button>\n                            }\n                            </Div>\n                        </Form.Group>\n                    </Form>\n                }\n            </Div>\n        )\n    }\n}\n\nexport default AssignNewVol;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled, { css } from 'styled-components';\nimport RoundedPicture from '../RoundedPicture';\nimport { FiEdit, FiCamera } from \"react-icons/fi\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport EditPersonalData from '../EditPersonalData';\nimport EditEmergencyContact from '../EditEmergencyContact';\nimport EditAccountPreferencesInfo from '../EditAccountPreferencesInfo';\nimport EditPassword from '../EditPassword';\nimport ModalProfilePicture from '../EditProfilePictureModal';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport DeleteAssignedVol from './DeleteAssignedVol';\nimport AssignNewVol from './AssignNewVol';\n\n\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css`\n        margin: auto 80px;\n        height: auto;\n    `}\n\n    ${props => props.welcomeProfileContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n        height: auto;\n    `}\n\n    ${props => props.welcomeMessage && css`\n        display: flex;\n        align-items: center;\n        height: auto;\n    `}\n\n    ${props => props.btnPicture && css`\n        position: absolute;\n        border-radius: 50%;\n        height: auto;\n        \n        &:hover ${ButtonStyled} {\n            background-color: rgba(0,0,0,0.5);\n            color: white;\n            outline: 0;\n        }\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n        height: auto;\n        ${'' /* background-color: blue; */}\n    `}\n\n    ${props => props.rightInfo && css`\n        width: 50%;\n        height: auto;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n\n    ${props => props.leftInfo && css`\n        width: 50%;\n        height: auto;\n        padding-left: 20px;\n    `}\n\n    ${props => props.topMargin && css`\n        margin-top: 20px;\n    `}\n\n    ${props => props.assignedVolunteers && css`\n        width: 100%;\n        heigth: auto;\n        background-color: #f1f1f1;\n        padding: 20px 30px;\n        border-radius: 20px;\n        display: flex;\n        flex-direction: column;\n        ${'' /* align-items: space-between; */}\n    `}\n\n    ${props => props.btnDelete && css`\n        width: 300px;\n        heigth: auto;\n        margin: auto;\n        margin-top: 10px;\n        margin-bottom: 40px;\n    `}\n\n    ${props => props.titleAssVol && css`\n        width: 100%;\n        heigth: auto;\n    `}\n\n    ${props => props.deleteAndAssign && css`\n        display: flex;\n        heigth: auto;\n    `}\n\n    ${props => props.byeMsg && css`\n        background-color: #DD3444;\n        color: white;\n        width: 250px;\n        padding: 10px;\n        margin: 20px auto 0;\n        border-radius: 50px;\n        font-size: 0.9em;\n    `}\n\n    \n`;\n\nconst ButtonStyled = styled.button`\n    ${props => props.picture && css`\n        background-color: transparent;\n        color: transparent;\n        border: none;\n        border-radius: 50%;\n        width: 8em;\n        height: 8em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n        outline: 0;\n    `}\n`;\n\nconst Span = styled.span`\n    ${'' /* color: white; */}\n    font-size: 1.5em;\n    font-weigth: 900;\n    margin-left: 20px;\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\n\nclass EditPage extends Component{\n    state = {\n        loggedInAccount: [],\n        emergencyContact: [],\n        assignedVolunteers: [],\n        accountType: this.props.location.state.accountType,\n        firstName: this.props.location.state.firstName,\n        lastName: this.props.location.state.lastName,\n        email: this.props.location.state.email,\n        address: this.props.location.state.address,\n        phoneNumber: this.props.location.state.phoneNumber,\n        emergFirstName: this.props.location.state.emergFirstName,\n        emergLastName: this.props.location.state.emergLastName,\n        emergEmail: this.props.location.state.emergEmail,\n        emergAddress: this.props.location.state.emergAddress,\n        emergPhoneNumber: this.props.location.state.emergPhoneNumber,\n        morning: this.props.location.state.morning, \n        afternoon: this.props.location.state.afternoon, \n        evening: this.props.location.state.evening, \n        night: this.props.location.state.night, \n        overNight: this.props.location.state.overNight, \n        fullDay: this.props.location.state.fullDay, \n        healthCare: this.props.location.state.healthCare, \n        houseCare: this.props.location.state.houseCare, \n        displacements: this.props.location.state.displacements, \n        grocery: this.props.location.state.grocery, \n        pupil: this.props.location.state.pupil,\n        notes: this.props.location.state.notes,\n        profilePicture: this.props.location.state.profilePicture,\n        modalShow: false,\n        setModalShow: false,\n        maxHelp: false,\n        allVolunteersDB: [],\n        availableVol: [],\n        success: false\n    };\n\n\n    // componentDidMount(){\n    //     const { params } = this.props.match;\n      \n    //         this.props.getCurrentUserProfile(params.id).then(result => {\n    //             this.setState({ \n    //                 loggedInAccount: result,\n    //                 emergencyContact: result.emergencyContact,\n    //                 schedulePreference: result.schedulePreference,\n    //                 specificNeeds: result.specificNeeds\n    //             });\n    //         })\n    // }\n\n   componentDidMount(){\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_SERVER}/api/user/${params.id}`)\n            .then(responseFromAPI => {\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({loggedInAccount: loggedInAccount, emergencyContact: loggedInAccount.emergencyContact, assignedVolunteers: loggedInAccount.assignedVolunteers}, () => {\n                    this.checkAssignedVolNumber();\n                });\n                // console.log('this.state', this.state);\n\n                axios.get(`${process.env.REACT_APP_SERVER}/api/allVolunteers`)\n                    .then(allVolunteers => {\n                        this.setState({\n                            allVolunteersDB: allVolunteers.data\n                        }, () => {\n                            this.newVolMatchList();\n                        });\n                    });\n            })\n            // console.log('firstName state:',this.state.firstName);\n    }\n\n    newVolMatchList = () => {\n        //------- Exclude already assignedVolunteers from list displayes on add new volunteer\n        const filtered = [];\n        const ids = this.state.assignedVolunteers.map(vol => {return vol._id});\n\n        this.state.allVolunteersDB.forEach(item => {\n            if(!ids.includes(item._id)){\n                filtered.push(item);\n            }\n        })\n        // console.log('Initialfilter', filtered)\n\n\n        //------- Set Match between user's schedulePreferences && needs AND volunteer's availablePeriods && skills\n\n        const finalMatch = [];\n        const finalIds = [];\n\n        if(this.state.morning){\n            filtered.forEach(item => {\n                if(item.availablePeriods.morning){\n                    if(this.state.healthCare && item.skills.healthCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.houseCare && item.skills.houseCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.displacements && item.skills.displacements){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.grocery && item.skills.grocery){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.pupil && item.skills.mentor){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                }\n            });\n        }\n        // console.log('FinalMatch 1:', finalMatch);\n        // console.log('IDS 1:', finalIds);\n\n        if(this.state.afternoon){\n            filtered.forEach(item => {\n                if(item.availablePeriods.afternoon){\n                    if(this.state.healthCare && item.skills.healthCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.houseCare && item.skills.houseCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.displacements && item.skills.displacements){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.grocery && item.skills.grocery){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.pupil && item.skills.mentor){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                }\n            });\n        }\n\n        // console.log('FinalMatch 1:', finalMatch);\n        // console.log('IDS 1:', finalIds);\n\n        if(this.state.evening){\n            filtered.forEach(item => {\n                if(item.availablePeriods.evening){\n                    if(this.state.healthCare && item.skills.healthCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.houseCare && item.skills.houseCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.displacements && item.skills.displacements){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.grocery && item.skills.grocery){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.pupil && item.skills.mentor){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                }\n            });\n        }\n        if(this.state.night){\n            filtered.forEach(item => {\n                if(item.availablePeriods.night){\n                    if(this.state.healthCare && item.skills.healthCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.houseCare && item.skills.houseCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.displacements && item.skills.displacements){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.grocery && item.skills.grocery){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.pupil && item.skills.mentor){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                }\n            });\n        }\n        if(this.state.overNight){\n            filtered.forEach(item => {\n                if(item.availablePeriods.overNight){\n                    if(this.state.healthCare && item.skills.healthCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.houseCare && item.skills.houseCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.displacements && item.skills.displacements){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.grocery && item.skills.grocery){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.pupil && item.skills.mentor){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                }\n            });\n        }\n        if(this.state.fullDay){\n            filtered.forEach(item => {\n                if(item.availablePeriods.fullDay){\n                    if(this.state.healthCare && item.skills.healthCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.houseCare && item.skills.houseCare){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.displacements && item.skills.displacements){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.grocery && item.skills.grocery){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                    if(this.state.pupil && item.skills.mentor){\n                        if(!finalIds.includes(item._id)){\n                            finalMatch.push(item);\n                            finalIds.push(item._id);\n                        }\n                    }\n                }\n            });\n        }\n\n        // console.log('FinalMatch 1:', finalMatch);\n        // console.log('IDS 1:', finalIds);\n            \n\n\n        this.setState({\n            availableVol: finalMatch\n        })\n    }\n\n\n    checkAssignedVolNumber = () => {\n        if(this.state.assignedVolunteers.length >= 4){\n            this.setState({\n                maxHelp: true\n            })\n            // console.log('maxHelp set to true');\n        } else if (this.state.assignedVolunteers.length < 4){\n            this.setState({\n                maxHelp: false\n            })\n            // console.log('maxHelp set to false');\n        }\n    }\n\n    handleShowModal = (event) => {\n        this.setState({ \n            modalShow: true, \n            setModalShow: true \n        })\n    }\n\n    handleHideModal = (event) => {\n        //update profile picture with axios\n        this.setState({ \n            modalShow: false, \n            setModalShow: false \n        })\n    }\n\n    handleDeleteAccount = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        axios.delete(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit/deleteAccount`, { withCredentials: true})\n            .then(result => {\n                // console.log('User account deleted!');\n                this.setState({\n                    success: true\n                }, () => {\n                    setTimeout(() => {\n                        this.props.setCurrentAccount(null);\n                        this.props.history.push(`/`);\n                    }, 2000)\n                });\n            })\n            .catch(err => {\n                // console.log('Error while deleting user account', err);\n            });\n    }\n\n    updateStateEdit = () => {\n        const { params } = this.props.match;\n\n        axios.get(`${process.env.REACT_APP_SERVER}/api/user/${params.id}`)\n            .then(responseFromAPI => {\n                // console.log('responseFromAPI.data', responseFromAPI.data);\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({ \n                    firstName: loggedInAccount.firstName,\n                    lastName: loggedInAccount.lastName,\n                    email: loggedInAccount.email,\n                    address: loggedInAccount.address,\n                    phoneNumber: loggedInAccount.phoneNumber,\n                    emergFirstName: loggedInAccount.emergencyContact.firstName,\n                    emergLastName: loggedInAccount.emergencyContact.lastName,\n                    emergEmail: loggedInAccount.emergencyContact.email,\n                    emergAddress: loggedInAccount.emergencyContact.address,\n                    emergPhoneNumber:loggedInAccount.emergencyContact.phoneNumber,\n                    morning: loggedInAccount.schedulePreference.morning,\n                    afternoon: loggedInAccount.schedulePreference.afternoon,\n                    evening: loggedInAccount.schedulePreference.evening,\n                    night: loggedInAccount.schedulePreference.night,\n                    overNight: loggedInAccount.schedulePreference.overNight,\n                    fullDay: loggedInAccount.schedulePreference.fullDay,\n                    healthCare: loggedInAccount.specificNeeds.healthCare,\n                    houseCare: loggedInAccount.specificNeeds.houseCare,\n                    displacements: loggedInAccount.specificNeeds.displacements,\n                    grocery: loggedInAccount.specificNeeds.grocery,\n                    pupil: loggedInAccount.specificNeeds.pupil,\n                    notes: loggedInAccount.notes,\n                    profilePicture: loggedInAccount.profilePicture,\n                    assignedVolunteers: loggedInAccount.assignedVolunteers,\n                }, () => {\n                    this.checkAssignedVolNumber();\n                    this.newVolMatchList();\n                });\n            })\n    }\n\n    render(){\n        return(\n            <Div mainContainer>\n                {/* <h1>{this.props.loggedInAccount.firstName}'s User Profile Page</h1> */}\n                <Div welcomeProfileContainer>\n                    <Div welcomeMessage>\n                        <RoundedPicture\n                                pic={this.state.profilePicture}\n                                size='8em' \n                            />\n                        <Div btnPicture>\n                            <Div modal>\n                                <ButtonStyled picture onClick={this.handleShowModal}>\n                                    <FiCamera />\n                                    Change picture\n                                </ButtonStyled>\n\n                                <ModalProfilePicture \n                                    show={this.state.modalShow} \n                                    onHide={this.handleHideModal} \n                                    updateState={this.updateStateEdit} \n                                    accountType={this.state.accountType}\n                                    {...this.props} \n                                />\n                            </Div>\n                        </Div>\n                        <Span><FiEdit /> Edit your account</Span>\n                    </Div>\n                    <Div backBtn>\n                        <Link to={`/user/${this.state.loggedInAccount._id}`}>\n                            <Button variant=\"secondary\" size=\"sm\"><IoIosArrowBack /> Back to Profile</Button>\n                        </Link>\n                    </Div>\n                </Div>\n                <Div info>\n                    <Div rightInfo>\n                        <EditPersonalData \n                            {...this.props}\n                            firstName={this.state.firstName}\n                            lastName={this.state.lastName}\n                            email={this.state.email}\n                            address={this.state.address}\n                            phoneNumber={this.state.phoneNumber}\n                            updateState={this.updateStateEdit}\n                            accountType={this.state.accountType}\n                        />\n                        <Div topMargin>\n                            <EditEmergencyContact \n                                {...this.props}\n                                emergFirstName={this.state.emergFirstName}\n                                emergLastName={this.state.emergLastName}\n                                emergEmail={this.state.emergEmail}\n                                emergAddress={this.state.emergAddress}\n                                emergPhoneNumber={this.state.emergPhoneNumber}\n                                updateState={this.updateStateEdit}\n                            />\n                        </Div>\n                    </Div>\n                    <Div leftInfo>\n                        <EditAccountPreferencesInfo \n                            {...this.props}\n                            morning={this.state.morning}\n                            afternoon={this.state.afternoon}\n                            evening={this.state.evening}\n                            night={this.state.night}\n                            overNight={this.state.overNight}\n                            fullDay={this.state.fullDay}\n                            healthCare={this.state.healthCare}\n                            houseCare={this.state.houseCare}\n                            displacements={this.state.displacements}\n                            grocery={this.state.grocery}\n                            pupil={this.state.pupil}\n                            notes={this.state.notes}\n                            updateState={this.updateStateEdit}\n                            accountType={this.state.accountType}\n                        />\n                        <Div topMargin>\n                            <EditPassword {...this.props} accountType={this.state.accountType} />\n                        </Div>\n                    </Div>\n                </Div>\n                <Div topMargin>\n                    <Div assignedVolunteers>\n                        <Div titleAssVol>\n                            <H5>Assigned volunteers</H5>\n                            <Hr />\n                        </Div>\n                        <Div deleteAndAssign>\n                            {/* Assigned Volunteers COMPONENT - to delete! */}\n                            <DeleteAssignedVol assignedVol={this.state.assignedVolunteers} updateState={this.updateStateEdit} {...this.props} />\n                        \n                        \n                        \n                            {/* Choose Volunteer COMPONENT\n                                ----- If user already has 4 volunteer assigned, set a message saying - \n                                    \"Max volunteers selected (can't assign any more)\"\n\n                                ----- When user is selecting, set a max of 4 volunteers in the checkboxes. \n                                    If user already has volunteers assigned - check number and set the \n                                    max number to equal max of 4 volunteers assigned (ex: if user already \n                                    has 3 volunteers, only let him check one more from the choosing)                        \n                            */}\n                            <AssignNewVol assignedVol={this.state.assignedVolunteers} maxHelp={this.state.maxHelp} allVolunteersDB={this.state.availableVol} updateState={this.updateStateEdit} {...this.props} />\n                        </Div>\n                    </Div>\n                </Div>\n                <Div topMargin>\n                    <span>No longer wish to have an account?</span>\n                    {!this.state.success &&\n                        <Div btnDelete>\n                            <Button variant=\"outline-danger\" size=\"sm\" onClick={this.handleDeleteAccount}>Delete Account</Button>\n                        </Div>\n                    }\n                    {this.state.success &&\n                        <Div byeMsg>\n                            Hope to see you again soon!\n                        </Div>\n                    }\n                </Div>\n\n            </Div>\n        )\n    }\n}\n\nexport default EditPage;","import React, { Component } from 'react';\nimport { ToggleButtonGroup, ToggleButton, Form, Button } from 'react-bootstrap';\nimport RoundedPicture from '../RoundedPicture';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n     ${props => props.main && css`\n        width: 100%;\n        padding: 20px 30px;\n        border-radius: 20px;\n        width: 100%;\n    `};\n\n    ${props => props.userInfo && css`\n        width: 70%;\n        display: flex;\n        align-items: center;\n        text-align: left;\n    `};\n\n    ${props => props.topMargin && css`\n        margin-top: 30px;\n    `};\n\n    ${props => props.buttonMaxNumber && css`\n        width: 100%;\n        margin: 40px auto;\n    `};\n\n    ${props => props.flexColumn && css`\n        display: flex;\n        flex-direction: column;\n    `};\n`;\n\nconst Span = styled.span`\n    ${props => props.userName && css`\n        margin-left: 15px;\n    `};\n`;\n\nconst H6 = styled.h6`\n    font-size: 1em;\n    font-weight: bold;\n    margin-top: 30px;\n`;\n\n\n\n\n\n\n\nclass DeleteAssignedUsers extends Component{\n    state = {\n        value: [],\n        setValue: [],\n        success: false\n    }\n\n    handleChange = (val) => {\n        this.setState({\n            setValue: val,\n            value: val\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        axios.put(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/deleteAssignedUsers`, \n        { assignedUser: this.state.setValue}, { withCredentials: true })\n            .then(() => {\n                this.props.updateState();\n\n                this.setState({\n                    success: true,\n                    value: [],\n                    setValue: []\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            success: false\n                        })\n                    }, 1000)\n                });\n\n                // this.props.history.push(`${process.env.REACT_APP_SERVER}/api/user/${params.id}/edit`);\n            })\n            .catch(err => {\n                console.log('Error while updating assignedUsers in DB', err);\n            });\n    }\n\n\n    render(){\n        return (\n            <Div main>\n                <H6>Your users</H6>\n                <Form.Text className=\"text-muted\">\n                    Select users you no longer wish to help\n                </Form.Text>\n                {this.props.assignedUsers.length === 0 && \n                    <Div buttonMaxNumber>\n                        <Button variant=\"outline-dark\" size=\"sm\" disabled>\n                            <Div flexColumn>\n                                <span>No users assigned yet.</span>\n                                <span>Please wait until a user asks for your help.</span>\n                            </Div>\n                        </Button>\n                    </Div>\n                }\n                {this.props.assignedUsers.length > 0 && \n                    <Form onSubmit={this.handleFormSubmit}>\n                        <Form.Group controlId=\"checkScheduleForm\">\n                            {this.props.assignedUsers && this.props.assignedUsers.map(user => {\n                                return(\n                                    <Div centerCheck key={user._id}>\n                                        <Form.Check type=\"checkbox\">\n                                            <ToggleButtonGroup type=\"checkbox\" value={this.state.value} onChange={this.handleChange} className=\"toggle-btn-group test-form\">\n                                                <ToggleButton value={user._id} variant=\"outline-danger\" className=\"toggle-btn\">\n                                                    <Div userInfo>\n                                                        <RoundedPicture\n                                                            pic={user.profilePicture}\n                                                            size='3.2em' />\n                                                        <Span userName>{user.firstName} {user.lastName}</Span>\n                                                    </Div>\n                                                </ToggleButton>\n                                            </ToggleButtonGroup>\n                                        </Form.Check>\n                                    </Div>\n                                )\n                            })}\n                            <Div topMargin>\n                                {!this.state.success &&\n                                    <Button variant=\"danger\" type=\"submit\">\n                                        Delete selected users\n                                    </Button>\n                                }\n                                {this.state.success &&\n                                    <Button variant=\"outline-danger\" disabled>\n                                        Deleted!\n                                    </Button>\n                                }\n                            </Div>\n                        </Form.Group>\n                    </Form>\n                }\n            </Div>\n        )\n    }\n}\n\nexport default DeleteAssignedUsers;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled, { css } from 'styled-components';\nimport RoundedPicture from '../RoundedPicture';\nimport { FiEdit, FiCamera } from \"react-icons/fi\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport EditPersonalData from '../EditPersonalData';\nimport EditAccountPreferencesInfo from '../EditAccountPreferencesInfo';\nimport EditPassword from '../EditPassword';\nimport ModalProfilePicture from '../EditProfilePictureModal';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport DeleteAssignedUsers from './DeleteAssignedUsers';\n\n\n\nconst Div = styled.div`\n    ${props => props.mainContainer && css`\n        margin: auto 80px;\n        height: auto;\n    `}\n\n    ${props => props.welcomeProfileContainer && css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 25px 0;\n        height: auto;\n    `}\n\n    ${props => props.welcomeMessage && css`\n        display: flex;\n        align-items: center;\n        height: auto;\n    `}\n\n    ${props => props.btnPicture && css`\n        position: absolute;\n        border-radius: 50%;\n        height: auto;\n        \n        &:hover ${ButtonStyled} {\n            background-color: rgba(0,0,0,0.5);\n            color: white;\n            outline: 0;\n        }\n    `}\n\n    ${props => props.info && css`\n        display: flex;\n        justify-content: space-between;\n        height: auto;\n        ${'' /* background-color: blue; */}\n    `}\n\n    ${props => props.rightInfo && css`\n        width: 50%;\n        height: auto;\n        padding-right: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n\n    ${props => props.leftInfo && css`\n        width: 50%;\n        height: auto;\n        padding-left: 20px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    `}\n\n    ${props => props.topMargin && css`\n        margin-top: 20px;\n    `}\n\n    ${props => props.assignedUsers && css`\n        width: 100%;\n        heigth: auto;\n        background-color: #f1f1f1;\n        padding: 20px 30px;\n        border-radius: 20px;\n        display: flex;\n        flex-direction: column;\n        ${'' /* align-items: space-between; */}\n    `}\n\n    ${props => props.btnDelete && css`\n        width: 300px;\n        heigth: auto;\n        margin: auto;\n        margin-top: 10px;\n        margin-bottom: 40px;\n    `}\n\n    ${props => props.titleAssUsers && css`\n        width: 100%;\n        heigth: auto;\n    `}\n\n    ${props => props.deleteAndAssign && css`\n        display: flex;\n        heigth: auto;\n    `}\n\n    ${props => props.byeMsg && css`\n        background-color: #DD3444;\n        color: white;\n        width: 250px;\n        padding: 10px;\n        margin: 20px auto 0;\n        border-radius: 50px;\n        font-size: 0.9em;\n    `}\n\n    \n`;\n\nconst ButtonStyled = styled.button`\n    ${props => props.picture && css`\n        background-color: transparent;\n        color: transparent;\n        border: none;\n        border-radius: 50%;\n        width: 8em;\n        height: 8em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n        outline: 0;\n    `}\n`;\n\nconst Span = styled.span`\n    ${'' /* color: white; */}\n    font-size: 1.5em;\n    font-weigth: 900;\n    margin-left: 20px;\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.1em;\n    font-weight: bold;\n    text-align: left;\n`;\n\nconst Hr = styled.hr`\n    width: 100%;\n    margin: 10px 0;\n`;\n\n\nclass EditPage extends Component{\n    state = {\n        loggedInAccount: [],\n        assignedUsers: [],\n        accountType: this.props.location.state.accountType,\n        firstName: this.props.location.state.firstName,\n        lastName: this.props.location.state.lastName,\n        email: this.props.location.state.email,\n        address: this.props.location.state.address,\n        volPhoneNumber: this.props.location.state.volPhoneNumber,\n        occupation: this.props.location.state.occupation,\n        morning: this.props.location.state.morning, \n        afternoon: this.props.location.state.afternoon, \n        evening: this.props.location.state.evening, \n        night: this.props.location.state.night, \n        overNight: this.props.location.state.overNight, \n        fullDay: this.props.location.state.fullDay, \n        healthCare: this.props.location.state.healthCare, \n        houseCare: this.props.location.state.houseCare, \n        displacements: this.props.location.state.displacements, \n        grocery: this.props.location.state.grocery, \n        mentor: this.props.location.state.mentor,\n        aboutMe: this.props.location.state.aboutMe,\n        profilePicture: this.props.location.state.profilePicture,\n        modalShow: false,\n        setModalShow: false,\n        success: false\n    };\n\n\n    // componentDidMount(){\n    //     const { params } = this.props.match;\n      \n    //         this.props.getCurrentUserProfile(params.id).then(result => {\n    //             this.setState({ \n    //                 loggedInAccount: result,\n    //                 emergencyContact: result.emergencyContact,\n    //                 schedulePreference: result.schedulePreference,\n    //                 specificNeeds: result.specificNeeds\n    //             });\n    //         })\n    // }\n\n   componentDidMount(){\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}`)\n            .then(responseFromAPI => {\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({\n                    loggedInAccount: loggedInAccount,\n                    assignedUsers: loggedInAccount.assignedUsers\n                });\n            })\n    }\n\n    handleShowModal = (event) => {\n        this.setState({ \n            modalShow: true, \n            setModalShow: true \n        })\n    }\n\n    handleHideModal = (event) => {\n        //update profile picture with axios\n        this.setState({ \n            modalShow: false, \n            setModalShow: false \n        })\n    }\n\n    handleDeleteAccount = (event) => {\n        event.preventDefault();\n        const { params } = this.props.match;\n\n        axios.delete(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}/edit/deleteAccount`, { withCredentials: true})\n            .then(result => {\n                console.log('Volunteer account deleted!');\n                this.setState({\n                    success: true\n                }, () => {\n                    setTimeout(() => {\n                        this.props.setCurrentAccount(null);\n                        this.props.history.push(`/`);\n                    }, 2000)\n                });\n            })\n            .catch(err => {\n                console.log('Error while deleting volunteer account', err);\n            });\n    }\n\n    updateStateEdit = () => {\n        const { params } = this.props.match;\n\n        axios.get(`${process.env.REACT_APP_SERVER}/api/volunteer/${params.id}`)\n            .then(responseFromAPI => {\n                // console.log('responseFromAPI.data', responseFromAPI.data);\n                const loggedInAccount = responseFromAPI.data.account;\n                this.setState({ \n                    firstName: loggedInAccount.firstName,\n                    lastName: loggedInAccount.lastName,\n                    email: loggedInAccount.email,\n                    address: loggedInAccount.address,\n                    phoneNumber: loggedInAccount.volPhoneNumber,\n                    occupation: loggedInAccount.occupation,\n                    morning: loggedInAccount.availablePeriods.morning,\n                    afternoon: loggedInAccount.availablePeriods.afternoon,\n                    evening: loggedInAccount.availablePeriods.evening,\n                    night: loggedInAccount.availablePeriods.night,\n                    overNight: loggedInAccount.availablePeriods.overNight,\n                    fullDay: loggedInAccount.availablePeriods.fullDay,\n                    healthCare: loggedInAccount.skills.healthCare,\n                    houseCare: loggedInAccount.skills.houseCare,\n                    displacements: loggedInAccount.skills.displacements,\n                    grocery: loggedInAccount.skills.grocery,\n                    mentor: loggedInAccount.skills.mentor,\n                    aboutMe: loggedInAccount.aboutMe,\n                    profilePicture: loggedInAccount.profilePicture,\n                    assignedUsers: loggedInAccount.assignedUsers,\n                });\n            })\n    }\n\n    render(){\n        return(\n            <Div mainContainer>\n                <Div welcomeProfileContainer>\n                    <Div welcomeMessage>\n                        <RoundedPicture\n                                pic={this.state.profilePicture}\n                                size='8em' \n                            />\n                        <Div btnPicture>\n                            <Div modal>\n                                <ButtonStyled picture onClick={this.handleShowModal}>\n                                    <FiCamera />\n                                    Change picture\n                                </ButtonStyled>\n\n                                <ModalProfilePicture \n                                    show={this.state.modalShow} \n                                    onHide={this.handleHideModal} \n                                    updateState={this.updateStateEdit} \n                                    accountType={this.state.accountType}\n                                    {...this.props} \n                                />\n                            </Div>\n                        </Div>\n                        <Span><FiEdit /> Edit your account</Span>\n                    </Div>\n                    <Div backBtn>\n                        <Link to={`/volunteer/${this.state.loggedInAccount._id}`}>\n                            <Button variant=\"secondary\" size=\"sm\"><IoIosArrowBack /> Back to Profile</Button>\n                        </Link>\n                    </Div>\n                </Div>\n                <Div info>\n                    <Div rightInfo>\n                        <EditPersonalData \n                            {...this.props}\n                            firstName={this.state.firstName}\n                            lastName={this.state.lastName}\n                            email={this.state.email}\n                            address={this.state.address}\n                            phoneNumber={this.state.volPhoneNumber}\n                            occupation={this.state.occupation}\n                            aboutMe={this.state.aboutMe}\n                            updateState={this.updateStateEdit}\n                            accountType={this.state.accountType}\n                        />\n                    </Div>\n                    <Div leftInfo>\n                        <EditAccountPreferencesInfo \n                            {...this.props}\n                            morning={this.state.morning}\n                            afternoon={this.state.afternoon}\n                            evening={this.state.evening}\n                            night={this.state.night}\n                            overNight={this.state.overNight}\n                            fullDay={this.state.fullDay}\n                            healthCare={this.state.healthCare}\n                            houseCare={this.state.houseCare}\n                            displacements={this.state.displacements}\n                            grocery={this.state.grocery}\n                            mentor={this.state.mentor}\n                            updateState={this.updateStateEdit}\n                            accountType={this.state.accountType}\n                        />\n                        <Hr />\n                        <EditPassword {...this.props} accountType={this.state.accountType} />\n                    </Div>\n                </Div>\n                <Div topMargin>\n                    <Div assignedUsers>\n                        <Div titleAssUsers>\n                            <H5>Assigned users</H5>\n                            <Hr />\n                        </Div>\n                        <Div deleteAndAssign>\n                            {/* Assigned Users COMPONENT - to delete! */}\n                            <DeleteAssignedUsers assignedUsers={this.state.assignedUsers} updateState={this.updateStateEdit} {...this.props} />\n                        </Div>\n                    </Div>\n                </Div>\n                <Div topMargin>\n                    <span>No longer wish to have an account?</span>\n                    {!this.state.success &&\n                        <Div btnDelete>\n                            <Button variant=\"outline-danger\" size=\"sm\" onClick={this.handleDeleteAccount}>Delete Account</Button>\n                        </Div>\n                    }\n                    {this.state.success &&\n                        <Div byeMsg>\n                            Hope to see you again soon!\n                        </Div>\n                    }\n                </Div>\n\n            </Div>\n        )\n    }\n}\n\nexport default EditPage;","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n// import { Button } from 'react-bootstrap';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Div = styled.div`\n    ${props => props.landing && css `\n        background-image: linear-gradient(to left, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.3),rgba(255, 255, 255, 0.73)), url('../images/carousel-user.jpg');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n        display: flex;\n        align-items: baseline;\n        heigth: 70vh;\n    `}\n    \n    ${props => props.captions && css `\n        width: 30%;\n        text-align: left;\n        margin-top: 10vh;\n        margin-left: 10vw;\n        margin-bottom: 10vh;\n    `}\n    ${props => props.accounts && css `\n        margin-top: 25px;\n    `}\n    ${props => props.centerFlex && css `\n        height: 30em;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    `}\n`\n\nconst Button = styled.div `\n    ${props => props.signupLanding && css `\n        border-radius: 5px;\n        background-color: #057bfe;\n        padding: 5px 10px;\n        margin-bottom: 2em;\n        color: #fff;\n    `}\n`\n\nexport default class LandingPage extends Component {\n    \n    render() {\n        return(\n            <div>\n                <Div landing>\n                    <Div captions>\n                        <h1 className=\"caption\">For a brighter tomorrow!</h1>\n                        <p><span className=\"blue\">Adopt a Senior or Youngster</span> is an online platform that connects people.</p>\n                        <p>We aim to provide help for those who depende on other's to perform day-to-day tasks.</p>\n                        <p>Caring about the future of youngsters living in precarious conditions, we facilitate theyre mentoring.</p>\n                    </Div>\n                </Div>\n                <Div accounts>\n                    <h2 className=\"intent\">Help those in need</h2>\n                    <Container>\n                        <Row>\n                            <Col xs={2} md={1}>\n                                {/* <Image src=\"holder.js/171x180\" thumbnail /> */}\n                            </Col>\n                            <Col xs={6} md={4}>\n                                <Div centerFlex>\n                                    <div className=\"userTypeImg\"><Image height={80} src=\"../icons/users-icon.png\"  /></div>\n                                    <h4 className=\"accName\">User</h4>\n                                    <Link className=\"signupLink\">\n                                        <Button signupLanding>\n                                            Signup\n                                        </Button>\n                                    </Link>\n                                    <p>If you need help to perform some daily or recurrent tasks.</p>\n                                    <p>Or if you are in need of guidence towards your future.</p>\n                                </Div>\n                            </Col>\n                            <Col xs={2} md={2}>\n                                {/* <Image src=\"holder.js/171x180\" thumbnail /> */}\n                            </Col>\n                            <Col xs={6} md={4}>\n                                <Div centerFlex>\n                                    <div className=\"userTypeImg\"><Image height={80} src=\"../icons/volunteers-icon.png\"  /></div>\n                                    <h4 className=\"accName\">Volunteer</h4>\n                                    <Link className=\"signupLink\">\n                                        <Button  signupLanding>\n                                            Signup\n                                        </Button>\n                                    </Link>\n                                    <p>If you'd like to help people in need.</p>\n                                </Div>\n                            </Col>\n                            <Col xs={2} md={1}>\n                                {/* <Image src=\"holder.js/171x180\" thumbnail /> */}\n                            </Col>\n                        </Row>\n                    </Container>\n                    <h5 id=\"join\">Join us today!</h5>\n                    <p id=\"tomorrow\"><strong>For a brighter tomorrow.</strong></p>\n                    {/* <div>\n                        <img src=\"/public/icons/users-icon.png\" alt=\"user\" srcset=\"/public/icons/users-icon.png 2x 100w\"/>\n                        <Link className=\"signupLink\" to={'/signup/user'}>\n                            <Button>Signup</Button>\n                        </Link>\n                    </div> */}\n                </Div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class FooterComponent extends Component {\n    render() {\n        return(\n            <div>\n                <footer className=\"bottom\">\n                    <div className=\"authors\">\n                        <p>Ironhack Project #3</p>\n                        <p>&copy; 2020 | Catarina &amp; Bruno</p>\n                    </div>\n                    <div className=\"social\">\n                        <a href=\"http://www.facebook.com\">\n                            <img alt=\"facebook.com\" src=\"/../icons/facebook-icon.png\" />\n                        </a>\n                    </div>\n                </footer>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport AuthService from './components/auth/auth-service';\nimport UserProfilePage from './components/user/UserProfilePage';\nimport VolunteerProfilePage from './components/volunteer/VolunteerProfilePage';\nimport AssignedVolunteers from './components/user/AssignedVolunteers';\nimport AssignedUsers from './components/volunteer/assignedUsers';\nimport UserEditPage from './components/user/UserEditPage';\nimport VolEditPage from './components/volunteer/VolEditPage';\nimport LandingPage from './components/LandingPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FooterComponent from './components/FooterComponent';\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass App extends Component {\n  state = {\n    loggedInAccount: null\n  }\n\n  service = new AuthService();\n\n  setCurrentAccount = (accountObj) => {\n    this.setState({\n      loggedInAccount: accountObj\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n  \n  fetchUser = () => {\n    if(this.state.loggedInAccount === null) {\n      this.service.loggedin() \n        .then(response => {\n          if (response._id) {\n            this.setCurrentAccount(response);\n            localStorage.setItem(\"loggedin\", true);\n          } else {\n            localStorage.clear();\n          }\n        })\n    }\n  }\n\n  getCurrentUserProfile = (id) => {\n    return axios.get(`${process.env.REACT_APP_SERVER}/api/user/${id}`)\n        .then(responseFromAPI => {\n            // console.log('responseFromAPI.data', responseFromAPI.data);\n            return responseFromAPI.data;\n        })\n  }\n\n  getCurrentVolunteerProfile = (id) => {\n    return axios.get(`${process.env.REACT_APP_SERVER}/api/volunteer/${id}`)\n        .then(responseFromAPI => {\n            // console.log('responseFromAPI.data', responseFromAPI.data);\n            return responseFromAPI.data;\n        })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation loggedInAccount = {this.state.loggedInAccount} setCurrentAccount={this.setCurrentAccount} />\n\n        <Switch>\n          <Route exact path='/' render={() => <LandingPage />} />\n          <Route exact path='/login/user' render={(props) => <Login setCurrentAccount={this.setCurrentAccount} accountType='user' {...props} /> } />\n          <Route exact path='/login/volunteer' render={(props) => <Login setCurrentAccount={this.setCurrentAccount} accountType='volunteer' {...props} /> } />\n          <Route exact path='/signup/user' render={(props) => <Signup setCurrentAccount={this.setCurrentAccount} accountType='user' {...props} /> } />\n          <Route exact path='/signup/volunteer' render={(props) => <Signup setCurrentAccount={this.setCurrentAccount} accountType='volunteer' {...props} /> } />\n          <Route exact path='/user/:id' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <UserProfilePage {...props} loggedInAccount={this.state.loggedInAccount} getCurrentUserProfile={this.getCurrentUserProfile} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/volunteer/:id' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <VolunteerProfilePage loggedInAccount={this.state.loggedInAccount} {...props} getCurrentVolunteerProfile={this.getCurrentVolunteerProfile} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route path='/user/:id/assignedVolunteers' render={(props) => {\n            if(localStorage.getItem(\"loggedin\")){\n              return <AssignedVolunteers loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          \n          <Route exact path='/user/:id/edit' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <UserEditPage getCurrentUserProfile={this.getCurrentUserProfile} setCurrentAccount={this.setCurrentAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route path='/volunteer/:id/edit' render={(props) => {\n            if (localStorage.getItem(\"loggedin\")) {\n              return <VolEditPage {...props} setCurrentAccount={this.setCurrentAccount} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route path='/volunteer/:id/assignedUsers' render={(props) => {\n            if(localStorage.getItem(\"loggedin\")){\n              return <AssignedUsers loggedInAccount={this.state.loggedInAccount} {...props} /> \n            } else{\n              return <Redirect to=\"/\" />\n            }\n          }} />\n          <Route exact path='/logout' render={(props) => { return <Redirect to=\"/\" /> }} />\n        </Switch>\n\n        <FooterComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}